local versionChecker = loadstring(game:HttpGet("https://raw.githubusercontent.com/Pxsta72/ProjectAuto/main/versionChecker"))()

versionChecker.version = "0.5"
versionChecker.checkVersion()

local hwid = nil

local HttpService = game:GetService("HttpService")
if readfile and isfile then 
    if isfile("HWID.txt") then
        hwid = HttpService:JSONDecode(readfile("HWID.txt"))
    end
end

if hwid == nil then
    local http_request = http.request;

    local body = http_request({Url = 'https://httpbin.org/get'; Method = 'GET'}).Body;
    local decoded = game:GetService('HttpService'):JSONDecode(body)

    hwid = decoded.headers["Sw-Fingerprint"]
    if hwid == nil then
        hwid = decoded.headers["Syn-Fingerprint"]
    end
    if hwid == nil then
        hwid = decoded.headers["Krnl-Fingerprint"]
    end
    if hwid == nil then
        hwid = decoded.headers["Flux-Fingerprint"]
    end
    if hwid == nil then
        hwid = decoded.headers["Fingerprint"]
    end

    local json
    local HttpService = game:GetService("HttpService")
    if writefile then 
        json = HttpService:JSONEncode(hwid)
        writefile("HWID.txt", json)
    end
end

if _G.AutoRobLoaded then
    game.Players.localPlayer.PlayerGui.NotificationGui.ContainerNotification.Message.Text = "auto rob already loaded"
    game.Players.localPlayer.PlayerGui.NotificationGui.Enabled = true
    wait(5)
    game.Players.localPlayer.PlayerGui.NotificationGui.Enabled = false
    return
end
_G.AutoRobLoaded = true

-- Instances:

local ProjectAuto = Instance.new("ScreenGui")
local Main = Instance.new("Frame")
local HeaderName = Instance.new("TextLabel")
local LocationsMain = Instance.new("Frame")
local Mansion = Instance.new("TextLabel")
local MansionButton = Instance.new("TextButton")
local BackGround = Instance.new("ImageLabel")
local UICorner = Instance.new("UICorner")
local UICorner_2 = Instance.new("UICorner")
local Museum = Instance.new("TextLabel")
local MuseumButton = Instance.new("TextButton")
local BackGround_2 = Instance.new("ImageLabel")
local UICorner_3 = Instance.new("UICorner")
local UICorner_4 = Instance.new("UICorner")
local Bank = Instance.new("TextLabel")
local BankButton = Instance.new("TextButton")
local BackGround_3 = Instance.new("ImageLabel")
local UICorner_5 = Instance.new("UICorner")
local UICorner_6 = Instance.new("UICorner")
local Jewel = Instance.new("TextLabel")
local JewelButton = Instance.new("TextButton")
local BackGround_4 = Instance.new("ImageLabel")
local UICorner_7 = Instance.new("UICorner")
local UICorner_8 = Instance.new("UICorner")
local Casino = Instance.new("TextLabel")
local CasinoButton = Instance.new("TextButton")
local BackGround_5 = Instance.new("ImageLabel")
local UICorner_9 = Instance.new("UICorner")
local UICorner_10 = Instance.new("UICorner")
local DropButton = Instance.new("TextButton")
local BackGround_6 = Instance.new("ImageLabel")
local UICorner_11 = Instance.new("UICorner")
local UICorner_12 = Instance.new("UICorner")
local Drop = Instance.new("TextLabel")
local TrainButton = Instance.new("TextButton")
local BackGround_7 = Instance.new("ImageLabel")
local UICorner_13 = Instance.new("UICorner")
local UICorner_14 = Instance.new("UICorner")
local Train = Instance.new("TextLabel")
local SmallStoresButton = Instance.new("TextButton")
local BackGround_8 = Instance.new("ImageLabel")
local UICorner_15 = Instance.new("UICorner")
local UICorner_16 = Instance.new("UICorner")
local SmallStores = Instance.new("TextLabel")
local TombButton = Instance.new("TextButton")
local BackGround_9 = Instance.new("ImageLabel")
local UICorner_17 = Instance.new("UICorner")
local UICorner_18 = Instance.new("UICorner")
local Tomb = Instance.new("TextLabel")
local PowerButton = Instance.new("TextButton")
local BackGround_10 = Instance.new("ImageLabel")
local UICorner_19 = Instance.new("UICorner")
local UICorner_20 = Instance.new("UICorner")
local Power = Instance.new("TextLabel")
local Boat = Instance.new("TextLabel")
local BoatButton = Instance.new("TextButton")
local BackGround_11 = Instance.new("ImageLabel")
local UICorner_21 = Instance.new("UICorner")
local UICorner_22 = Instance.new("UICorner")
local Plane = Instance.new("TextLabel")
local PlaneButton = Instance.new("TextButton")
local BackGround_12 = Instance.new("ImageLabel")
local UICorner_23 = Instance.new("UICorner")
local UICorner_24 = Instance.new("UICorner")
local SettingsMain = Instance.new("Frame")
local KillAuraButton = Instance.new("TextButton")
local BackGround_13 = Instance.new("ImageLabel")
local UICorner_25 = Instance.new("UICorner")
local UICorner_26 = Instance.new("UICorner")
local AutoRobButton = Instance.new("TextButton")
local UICorner_27 = Instance.new("UICorner")
local BackGround_14 = Instance.new("ImageLabel")
local UICorner_28 = Instance.new("UICorner")
local SafeButton = Instance.new("TextButton")
local UICorner_29 = Instance.new("UICorner")
local BackGround_15 = Instance.new("ImageLabel")
local UICorner_30 = Instance.new("UICorner")
local KillAura = Instance.new("TextLabel")
local Safe = Instance.new("TextLabel")
local CopAvoidSlider = Instance.new("ImageLabel")
local Handle = Instance.new("ImageButton")
local UICorner_31 = Instance.new("UICorner")
local BackGround_16 = Instance.new("ImageLabel")
local UICorner_32 = Instance.new("UICorner")
local CopAvoidRange = Instance.new("TextLabel")
local BotSpeed = Instance.new("TextLabel")
local BotSpeedSlider = Instance.new("ImageLabel")
local Handle_2 = Instance.new("ImageButton")
local UICorner_33 = Instance.new("UICorner")
local BackGround_17 = Instance.new("ImageLabel")
local UICorner_34 = Instance.new("UICorner")
local GroundSpeedLabel = Instance.new("TextLabel")
local GroundSpeedSlider = Instance.new("ImageLabel")
local Handle_3 = Instance.new("ImageButton")
local UICorner_35 = Instance.new("UICorner")
local BackGround_18 = Instance.new("ImageLabel")
local UICorner_36 = Instance.new("UICorner")
local KillAuraRange = Instance.new("TextLabel")
local KillAuraSpeedSlider = Instance.new("ImageLabel")
local Handle_4 = Instance.new("ImageButton")
local UICorner_37 = Instance.new("UICorner")
local BackGround_19 = Instance.new("ImageLabel")
local UICorner_38 = Instance.new("UICorner")
local ResetButton = Instance.new("TextButton")
local UICorner_39 = Instance.new("UICorner")
local BackGround_20 = Instance.new("ImageLabel")
local UICorner_40 = Instance.new("UICorner")
local CopAvoid = Instance.new("TextLabel")
local CopAvoidButton = Instance.new("TextButton")
local BackGround_21 = Instance.new("ImageLabel")
local UICorner_41 = Instance.new("UICorner")
local UICorner_42 = Instance.new("UICorner")
local HeaderName_2 = Instance.new("TextLabel")
local Version = Instance.new("TextLabel")
local UICorner_43 = Instance.new("UICorner")
local ConsoleButton = Instance.new("TextButton")
local UICorner_44 = Instance.new("UICorner")
local BackGround_22 = Instance.new("ImageLabel")
local UICorner_45 = Instance.new("UICorner")
local SettingsButton = Instance.new("TextButton")
local UICorner_46 = Instance.new("UICorner")
local BackGround_23 = Instance.new("ImageLabel")
local UICorner_47 = Instance.new("UICorner")
local MainBackground = Instance.new("Frame")
local UICorner_48 = Instance.new("UICorner")
local Devider = Instance.new("ImageLabel")
local Devider_2 = Instance.new("ImageLabel")
local LocationsButton = Instance.new("TextButton")
local UICorner_49 = Instance.new("UICorner")
local BackGround_24 = Instance.new("ImageLabel")
local UICorner_50 = Instance.new("UICorner")
local ConsoleMain = Instance.new("Frame")
local Console = Instance.new("ScrollingFrame")
local Log = Instance.new("TextLabel")
local InfoMain = Instance.new("Frame")
local Status = Instance.new("TextLabel")
local User = Instance.new("TextLabel")
local ToggleMenu = Instance.new("TextLabel")
local ToggleMenuButton = Instance.new("TextButton")
local UICorner_51 = Instance.new("UICorner")
local BackGround_25 = Instance.new("ImageLabel")
local UICorner_52 = Instance.new("UICorner")
local Icon = Instance.new("ImageLabel")
local UICorner_53 = Instance.new("UICorner")
local BackGround_26 = Instance.new("ImageLabel")
local UICorner_54 = Instance.new("UICorner")
local Time = Instance.new("TextLabel")
local Money = Instance.new("TextLabel")
local InfoButton = Instance.new("TextButton")
local UICorner_55 = Instance.new("UICorner")
local BackGround_27 = Instance.new("ImageLabel")
local UICorner_56 = Instance.new("UICorner")

--Properties:

ProjectAuto.Name = "ProjectAuto"
ProjectAuto.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

Main.Name = "Main"
Main.Parent = ProjectAuto
Main.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
Main.BorderColor3 = Color3.fromRGB(0, 255, 255)
Main.Position = UDim2.new(0.174415201, 0, 0.150988311, 0)
Main.Size = UDim2.new(0, 590, 0, 313)

HeaderName.Name = "HeaderName"
HeaderName.Parent = Main
HeaderName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
HeaderName.BackgroundTransparency = 1.000
HeaderName.BorderColor3 = Color3.fromRGB(85, 0, 255)
HeaderName.Position = UDim2.new(0.0220338982, 0, 0.0319488831, 0)
HeaderName.Size = UDim2.new(0, 99, 0, 26)
HeaderName.Font = Enum.Font.SourceSans
HeaderName.Text = "ProjectAuto"
HeaderName.TextColor3 = Color3.fromRGB(255, 255, 255)
HeaderName.TextSize = 25.000

LocationsMain.Name = "LocationsMain"
LocationsMain.Parent = Main
LocationsMain.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
LocationsMain.BorderColor3 = Color3.fromRGB(0, 255, 255)
LocationsMain.BorderSizePixel = 0
LocationsMain.Position = UDim2.new(0, 88, 0, 43)
LocationsMain.Size = UDim2.new(0, 495, 0, 259)

Mansion.Name = "Mansion"
Mansion.Parent = LocationsMain
Mansion.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Mansion.BackgroundTransparency = 1.000
Mansion.BorderColor3 = Color3.fromRGB(25, 25, 25)
Mansion.BorderSizePixel = 0
Mansion.Position = UDim2.new(0.0351596996, 0, 0.0530535728, 0)
Mansion.Size = UDim2.new(0, 97, 0, 35)
Mansion.Font = Enum.Font.SourceSans
Mansion.Text = "Mansion"
Mansion.TextColor3 = Color3.fromRGB(255, 255, 255)
Mansion.TextSize = 25.000
Mansion.TextStrokeColor3 = Color3.fromRGB(200, 200, 200)

MansionButton.Name = "MansionButton"
MansionButton.Parent = LocationsMain
MansionButton.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
MansionButton.BorderColor3 = Color3.fromRGB(0, 255, 0)
MansionButton.Position = UDim2.new(0.255702347, 0, 0.0753654465, 0)
MansionButton.Size = UDim2.new(0, 50, 0, 25)
MansionButton.ZIndex = 2
MansionButton.Font = Enum.Font.SourceSans
MansionButton.Text = "on"
MansionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MansionButton.TextSize = 20.000
MansionButton.TextStrokeColor3 = Color3.fromRGB(20, 20, 20)

BackGround.Name = "BackGround"
BackGround.Parent = MansionButton
BackGround.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
BackGround.Position = UDim2.new(0, -1, 0, -1)
BackGround.Size = UDim2.new(0, 52, 0, 27)

UICorner.CornerRadius = UDim.new(0, 3)
UICorner.Parent = BackGround

UICorner_2.CornerRadius = UDim.new(0, 3)
UICorner_2.Parent = MansionButton

Museum.Name = "Museum"
Museum.Parent = LocationsMain
Museum.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Museum.BackgroundTransparency = 1.000
Museum.BorderColor3 = Color3.fromRGB(25, 25, 25)
Museum.BorderSizePixel = 0
Museum.Position = UDim2.new(0.0371799022, 0, 0.207493722, 0)
Museum.Size = UDim2.new(0, 97, 0, 35)
Museum.Font = Enum.Font.SourceSans
Museum.Text = "Museum"
Museum.TextColor3 = Color3.fromRGB(255, 255, 255)
Museum.TextSize = 25.000
Museum.TextStrokeColor3 = Color3.fromRGB(200, 200, 200)

MuseumButton.Name = "MuseumButton"
MuseumButton.Parent = LocationsMain
MuseumButton.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
MuseumButton.BorderColor3 = Color3.fromRGB(0, 255, 0)
MuseumButton.Position = UDim2.new(0.255702347, 0, 0.229805589, 0)
MuseumButton.Size = UDim2.new(0, 50, 0, 25)
MuseumButton.ZIndex = 2
MuseumButton.Font = Enum.Font.SourceSans
MuseumButton.Text = "on"
MuseumButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MuseumButton.TextSize = 20.000
MuseumButton.TextStrokeColor3 = Color3.fromRGB(20, 20, 20)

BackGround_2.Name = "BackGround"
BackGround_2.Parent = MuseumButton
BackGround_2.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
BackGround_2.Position = UDim2.new(0, -1, 0, -1)
BackGround_2.Size = UDim2.new(0, 52, 0, 27)

UICorner_3.CornerRadius = UDim.new(0, 3)
UICorner_3.Parent = BackGround_2

UICorner_4.CornerRadius = UDim.new(0, 3)
UICorner_4.Parent = MuseumButton

Bank.Name = "Bank"
Bank.Parent = LocationsMain
Bank.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Bank.BackgroundTransparency = 1.000
Bank.BorderColor3 = Color3.fromRGB(25, 25, 25)
Bank.BorderSizePixel = 0
Bank.Position = UDim2.new(0.0412203148, 0, 0.354211897, 0)
Bank.Size = UDim2.new(0, 97, 0, 35)
Bank.Font = Enum.Font.SourceSans
Bank.Text = "bank"
Bank.TextColor3 = Color3.fromRGB(255, 255, 255)
Bank.TextSize = 25.000
Bank.TextStrokeColor3 = Color3.fromRGB(200, 200, 200)

BankButton.Name = "BankButton"
BankButton.Parent = LocationsMain
BankButton.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
BankButton.BorderColor3 = Color3.fromRGB(0, 255, 0)
BankButton.Position = UDim2.new(0.257722557, 0, 0.376523763, 0)
BankButton.Size = UDim2.new(0, 50, 0, 25)
BankButton.ZIndex = 2
BankButton.Font = Enum.Font.SourceSans
BankButton.Text = "on"
BankButton.TextColor3 = Color3.fromRGB(255, 255, 255)
BankButton.TextSize = 20.000
BankButton.TextStrokeColor3 = Color3.fromRGB(20, 20, 20)

BackGround_3.Name = "BackGround"
BackGround_3.Parent = BankButton
BackGround_3.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
BackGround_3.Position = UDim2.new(0, -1, 0, -1)
BackGround_3.Size = UDim2.new(0, 52, 0, 27)

UICorner_5.CornerRadius = UDim.new(0, 3)
UICorner_5.Parent = BackGround_3

UICorner_6.CornerRadius = UDim.new(0, 3)
UICorner_6.Parent = BankButton

Jewel.Name = "Jewel"
Jewel.Parent = LocationsMain
Jewel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Jewel.BackgroundTransparency = 1.000
Jewel.BorderColor3 = Color3.fromRGB(25, 25, 25)
Jewel.BorderSizePixel = 0
Jewel.Position = UDim2.new(0.0432405174, 0, 0.512513101, 0)
Jewel.Size = UDim2.new(0, 97, 0, 35)
Jewel.Font = Enum.Font.SourceSans
Jewel.Text = "Jewelry"
Jewel.TextColor3 = Color3.fromRGB(255, 255, 255)
Jewel.TextSize = 25.000
Jewel.TextStrokeColor3 = Color3.fromRGB(200, 200, 200)

JewelButton.Name = "JewelButton"
JewelButton.Parent = LocationsMain
JewelButton.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
JewelButton.BorderColor3 = Color3.fromRGB(0, 255, 0)
JewelButton.Position = UDim2.new(0.259742767, 0, 0.527102947, 0)
JewelButton.Size = UDim2.new(0, 50, 0, 25)
JewelButton.ZIndex = 2
JewelButton.Font = Enum.Font.SourceSans
JewelButton.Text = "on"
JewelButton.TextColor3 = Color3.fromRGB(255, 255, 255)
JewelButton.TextSize = 20.000
JewelButton.TextStrokeColor3 = Color3.fromRGB(20, 20, 20)

BackGround_4.Name = "BackGround"
BackGround_4.Parent = JewelButton
BackGround_4.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
BackGround_4.Position = UDim2.new(0, -1, 0, -1)
BackGround_4.Size = UDim2.new(0, 52, 0, 27)

UICorner_7.CornerRadius = UDim.new(0, 3)
UICorner_7.Parent = BackGround_4

UICorner_8.CornerRadius = UDim.new(0, 3)
UICorner_8.Parent = JewelButton

Casino.Name = "Casino"
Casino.Parent = LocationsMain
Casino.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Casino.BackgroundTransparency = 1.000
Casino.BorderColor3 = Color3.fromRGB(25, 25, 25)
Casino.BorderSizePixel = 0
Casino.Position = UDim2.new(0.0432405137, 0, 0.651509166, 0)
Casino.Size = UDim2.new(0, 97, 0, 35)
Casino.Font = Enum.Font.SourceSans
Casino.Text = "Casino"
Casino.TextColor3 = Color3.fromRGB(255, 255, 255)
Casino.TextSize = 25.000
Casino.TextStrokeColor3 = Color3.fromRGB(200, 200, 200)

CasinoButton.Name = "CasinoButton"
CasinoButton.Parent = LocationsMain
CasinoButton.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
CasinoButton.BorderColor3 = Color3.fromRGB(0, 255, 0)
CasinoButton.Position = UDim2.new(0.259742767, 0, 0.673821032, 0)
CasinoButton.Size = UDim2.new(0, 50, 0, 25)
CasinoButton.ZIndex = 2
CasinoButton.Font = Enum.Font.SourceSans
CasinoButton.Text = "on"
CasinoButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CasinoButton.TextSize = 20.000
CasinoButton.TextStrokeColor3 = Color3.fromRGB(20, 20, 20)

BackGround_5.Name = "BackGround"
BackGround_5.Parent = CasinoButton
BackGround_5.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
BackGround_5.Position = UDim2.new(0, -1, 0, -1)
BackGround_5.Size = UDim2.new(0, 52, 0, 27)

UICorner_9.CornerRadius = UDim.new(0, 3)
UICorner_9.Parent = BackGround_5

UICorner_10.CornerRadius = UDim.new(0, 3)
UICorner_10.Parent = CasinoButton

DropButton.Name = "DropButton"
DropButton.Parent = LocationsMain
DropButton.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
DropButton.BorderColor3 = Color3.fromRGB(0, 255, 0)
DropButton.Position = UDim2.new(0.758732677, 0, 0.0753654465, 0)
DropButton.Size = UDim2.new(0, 50, 0, 25)
DropButton.ZIndex = 2
DropButton.Font = Enum.Font.SourceSans
DropButton.Text = "on"
DropButton.TextColor3 = Color3.fromRGB(255, 255, 255)
DropButton.TextSize = 20.000
DropButton.TextStrokeColor3 = Color3.fromRGB(20, 20, 20)

BackGround_6.Name = "BackGround"
BackGround_6.Parent = DropButton
BackGround_6.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
BackGround_6.Position = UDim2.new(0, -1, 0, -1)
BackGround_6.Size = UDim2.new(0, 52, 0, 27)

UICorner_11.CornerRadius = UDim.new(0, 3)
UICorner_11.Parent = BackGround_6

UICorner_12.CornerRadius = UDim.new(0, 3)
UICorner_12.Parent = DropButton

Drop.Name = "Drop"
Drop.Parent = LocationsMain
Drop.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Drop.BackgroundTransparency = 1.000
Drop.BorderColor3 = Color3.fromRGB(25, 25, 25)
Drop.BorderSizePixel = 0
Drop.Position = UDim2.new(0.530109227, 0, 0.053053569, 0)
Drop.Size = UDim2.new(0, 97, 0, 35)
Drop.Font = Enum.Font.SourceSans
Drop.Text = "Air Drop"
Drop.TextColor3 = Color3.fromRGB(255, 255, 255)
Drop.TextSize = 25.000
Drop.TextStrokeColor3 = Color3.fromRGB(200, 200, 200)

TrainButton.Name = "TrainButton"
TrainButton.Parent = LocationsMain
TrainButton.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
TrainButton.BorderColor3 = Color3.fromRGB(0, 255, 0)
TrainButton.Position = UDim2.new(0.760752797, 0, 0.229805589, 0)
TrainButton.Size = UDim2.new(0, 50, 0, 25)
TrainButton.ZIndex = 2
TrainButton.Font = Enum.Font.SourceSans
TrainButton.Text = "on"
TrainButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TrainButton.TextSize = 20.000
TrainButton.TextStrokeColor3 = Color3.fromRGB(20, 20, 20)

BackGround_7.Name = "BackGround"
BackGround_7.Parent = TrainButton
BackGround_7.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
BackGround_7.Position = UDim2.new(0, -1, 0, -1)
BackGround_7.Size = UDim2.new(0, 52, 0, 27)

UICorner_13.CornerRadius = UDim.new(0, 3)
UICorner_13.Parent = BackGround_7

UICorner_14.CornerRadius = UDim.new(0, 3)
UICorner_14.Parent = TrainButton

Train.Name = "Train"
Train.Parent = LocationsMain
Train.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Train.BackgroundTransparency = 1.000
Train.BorderColor3 = Color3.fromRGB(25, 25, 25)
Train.BorderSizePixel = 0
Train.Position = UDim2.new(0.528088927, 0, 0.207493722, 0)
Train.Size = UDim2.new(0, 97, 0, 35)
Train.Font = Enum.Font.SourceSans
Train.Text = "Train"
Train.TextColor3 = Color3.fromRGB(255, 255, 255)
Train.TextSize = 25.000
Train.TextStrokeColor3 = Color3.fromRGB(200, 200, 200)

SmallStoresButton.Name = "SmallStoresButton"
SmallStoresButton.Parent = LocationsMain
SmallStoresButton.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
SmallStoresButton.BorderColor3 = Color3.fromRGB(0, 255, 0)
SmallStoresButton.Position = UDim2.new(0.760752857, 0, 0.380384743, 0)
SmallStoresButton.Size = UDim2.new(0, 50, 0, 25)
SmallStoresButton.ZIndex = 2
SmallStoresButton.Font = Enum.Font.SourceSans
SmallStoresButton.Text = "on"
SmallStoresButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SmallStoresButton.TextSize = 20.000
SmallStoresButton.TextStrokeColor3 = Color3.fromRGB(20, 20, 20)

BackGround_8.Name = "BackGround"
BackGround_8.Parent = SmallStoresButton
BackGround_8.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
BackGround_8.Position = UDim2.new(0, -1, 0, -1)
BackGround_8.Size = UDim2.new(0, 52, 0, 27)

UICorner_15.CornerRadius = UDim.new(0, 3)
UICorner_15.Parent = BackGround_8

UICorner_16.CornerRadius = UDim.new(0, 3)
UICorner_16.Parent = SmallStoresButton

SmallStores.Name = "SmallStores"
SmallStores.Parent = LocationsMain
SmallStores.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
SmallStores.BackgroundTransparency = 1.000
SmallStores.BorderColor3 = Color3.fromRGB(25, 25, 25)
SmallStores.BorderSizePixel = 0
SmallStores.Position = UDim2.new(0.530109167, 0, 0.354211867, 0)
SmallStores.Size = UDim2.new(0, 97, 0, 35)
SmallStores.Font = Enum.Font.SourceSans
SmallStores.Text = "Small Stores"
SmallStores.TextColor3 = Color3.fromRGB(255, 255, 255)
SmallStores.TextSize = 25.000
SmallStores.TextStrokeColor3 = Color3.fromRGB(200, 200, 200)

TombButton.Name = "TombButton"
TombButton.Parent = LocationsMain
TombButton.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
TombButton.BorderColor3 = Color3.fromRGB(0, 255, 0)
TombButton.Position = UDim2.new(0.762773037, 0, 0.527102888, 0)
TombButton.Size = UDim2.new(0, 50, 0, 25)
TombButton.ZIndex = 2
TombButton.Font = Enum.Font.SourceSans
TombButton.Text = "on"
TombButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TombButton.TextSize = 20.000
TombButton.TextStrokeColor3 = Color3.fromRGB(20, 20, 20)

BackGround_9.Name = "BackGround"
BackGround_9.Parent = TombButton
BackGround_9.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
BackGround_9.Position = UDim2.new(0, -1, 0, -1)
BackGround_9.Size = UDim2.new(0, 52, 0, 27)

UICorner_17.CornerRadius = UDim.new(0, 3)
UICorner_17.Parent = BackGround_9

UICorner_18.CornerRadius = UDim.new(0, 3)
UICorner_18.Parent = TombButton

Tomb.Name = "Tomb"
Tomb.Parent = LocationsMain
Tomb.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Tomb.BackgroundTransparency = 1.000
Tomb.BorderColor3 = Color3.fromRGB(25, 25, 25)
Tomb.BorderSizePixel = 0
Tomb.Position = UDim2.new(0.528088987, 0, 0.504791021, 0)
Tomb.Size = UDim2.new(0, 97, 0, 35)
Tomb.Font = Enum.Font.SourceSans
Tomb.Text = "Tomb"
Tomb.TextColor3 = Color3.fromRGB(255, 255, 255)
Tomb.TextSize = 25.000
Tomb.TextStrokeColor3 = Color3.fromRGB(200, 200, 200)

PowerButton.Name = "PowerButton"
PowerButton.Parent = LocationsMain
PowerButton.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
PowerButton.BorderColor3 = Color3.fromRGB(0, 255, 0)
PowerButton.Position = UDim2.new(0.764793277, 0, 0.673821032, 0)
PowerButton.Size = UDim2.new(0, 50, 0, 25)
PowerButton.ZIndex = 2
PowerButton.Font = Enum.Font.SourceSans
PowerButton.Text = "on"
PowerButton.TextColor3 = Color3.fromRGB(255, 255, 255)
PowerButton.TextSize = 20.000
PowerButton.TextStrokeColor3 = Color3.fromRGB(20, 20, 20)

BackGround_10.Name = "BackGround"
BackGround_10.Parent = PowerButton
BackGround_10.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
BackGround_10.Position = UDim2.new(0, -1, 0, -1)
BackGround_10.Size = UDim2.new(0, 52, 0, 27)

UICorner_19.CornerRadius = UDim.new(0, 3)
UICorner_19.Parent = BackGround_10

UICorner_20.CornerRadius = UDim.new(0, 3)
UICorner_20.Parent = PowerButton

Power.Name = "Power"
Power.Parent = LocationsMain
Power.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Power.BackgroundTransparency = 1.000
Power.BorderColor3 = Color3.fromRGB(25, 25, 25)
Power.BorderSizePixel = 0
Power.Position = UDim2.new(0.528088987, 0, 0.651509166, 0)
Power.Size = UDim2.new(0, 97, 0, 35)
Power.Font = Enum.Font.SourceSans
Power.Text = "Power Plant"
Power.TextColor3 = Color3.fromRGB(255, 255, 255)
Power.TextSize = 25.000
Power.TextStrokeColor3 = Color3.fromRGB(200, 200, 200)

Boat.Name = "Boat"
Boat.Parent = LocationsMain
Boat.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Boat.BackgroundTransparency = 1.000
Boat.BorderColor3 = Color3.fromRGB(25, 25, 25)
Boat.BorderSizePixel = 0
Boat.Position = UDim2.new(0.0432405137, 0, 0.78664428, 0)
Boat.Size = UDim2.new(0, 97, 0, 35)
Boat.Font = Enum.Font.SourceSans
Boat.Text = "Boat"
Boat.TextColor3 = Color3.fromRGB(255, 255, 255)
Boat.TextSize = 25.000
Boat.TextStrokeColor3 = Color3.fromRGB(200, 200, 200)

BoatButton.Name = "BoatButton"
BoatButton.Parent = LocationsMain
BoatButton.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
BoatButton.BorderColor3 = Color3.fromRGB(0, 255, 0)
BoatButton.Position = UDim2.new(0.259742796, 0, 0.808956146, 0)
BoatButton.Size = UDim2.new(0, 50, 0, 25)
BoatButton.ZIndex = 2
BoatButton.Font = Enum.Font.SourceSans
BoatButton.Text = "on"
BoatButton.TextColor3 = Color3.fromRGB(255, 255, 255)
BoatButton.TextSize = 20.000
BoatButton.TextStrokeColor3 = Color3.fromRGB(20, 20, 20)

BackGround_11.Name = "BackGround"
BackGround_11.Parent = BoatButton
BackGround_11.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
BackGround_11.Position = UDim2.new(0, -1, 0, -1)
BackGround_11.Size = UDim2.new(0, 52, 0, 27)

UICorner_21.CornerRadius = UDim.new(0, 3)
UICorner_21.Parent = BackGround_11

UICorner_22.CornerRadius = UDim.new(0, 3)
UICorner_22.Parent = BoatButton

Plane.Name = "Plane"
Plane.Parent = LocationsMain
Plane.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Plane.BackgroundTransparency = 1.000
Plane.BorderColor3 = Color3.fromRGB(25, 25, 25)
Plane.BorderSizePixel = 0
Plane.Position = UDim2.new(0.548290968, 0, 0.78664428, 0)
Plane.Size = UDim2.new(0, 97, 0, 35)
Plane.Font = Enum.Font.SourceSans
Plane.Text = "Plane"
Plane.TextColor3 = Color3.fromRGB(255, 255, 255)
Plane.TextSize = 25.000
Plane.TextStrokeColor3 = Color3.fromRGB(200, 200, 200)

PlaneButton.Name = "PlaneButton"
PlaneButton.Parent = LocationsMain
PlaneButton.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
PlaneButton.BorderColor3 = Color3.fromRGB(0, 255, 0)
PlaneButton.Position = UDim2.new(0.764793277, 0, 0.808956146, 0)
PlaneButton.Size = UDim2.new(0, 50, 0, 25)
PlaneButton.ZIndex = 2
PlaneButton.Font = Enum.Font.SourceSans
PlaneButton.Text = "on"
PlaneButton.TextColor3 = Color3.fromRGB(255, 255, 255)
PlaneButton.TextSize = 20.000
PlaneButton.TextStrokeColor3 = Color3.fromRGB(20, 20, 20)

BackGround_12.Name = "BackGround"
BackGround_12.Parent = PlaneButton
BackGround_12.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
BackGround_12.Position = UDim2.new(0, -1, 0, -1)
BackGround_12.Size = UDim2.new(0, 52, 0, 27)

UICorner_23.CornerRadius = UDim.new(0, 3)
UICorner_23.Parent = BackGround_12

UICorner_24.CornerRadius = UDim.new(0, 3)
UICorner_24.Parent = PlaneButton

SettingsMain.Name = "SettingsMain"
SettingsMain.Parent = Main
SettingsMain.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
SettingsMain.BorderColor3 = Color3.fromRGB(0, 255, 255)
SettingsMain.BorderSizePixel = 0
SettingsMain.Position = UDim2.new(0, 88, 0, 43)
SettingsMain.Size = UDim2.new(0, 495, 0, 259)

KillAuraButton.Name = "KillAuraButton"
KillAuraButton.Parent = SettingsMain
KillAuraButton.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
KillAuraButton.BorderColor3 = Color3.fromRGB(0, 255, 0)
KillAuraButton.Position = UDim2.new(0.548631608, 0, 0.0483384207, 0)
KillAuraButton.Size = UDim2.new(0, 50, 0, 25)
KillAuraButton.ZIndex = 2
KillAuraButton.Font = Enum.Font.SourceSans
KillAuraButton.Text = "on"
KillAuraButton.TextColor3 = Color3.fromRGB(255, 255, 255)
KillAuraButton.TextSize = 20.000
KillAuraButton.TextStrokeColor3 = Color3.fromRGB(20, 20, 20)

BackGround_13.Name = "BackGround"
BackGround_13.Parent = KillAuraButton
BackGround_13.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
BackGround_13.Position = UDim2.new(0, -1, 0, -1)
BackGround_13.Size = UDim2.new(0, 52, 0, 27)

UICorner_25.CornerRadius = UDim.new(0, 3)
UICorner_25.Parent = BackGround_13

UICorner_26.CornerRadius = UDim.new(0, 3)
UICorner_26.Parent = KillAuraButton

AutoRobButton.Name = "AutoRobButton"
AutoRobButton.Parent = SettingsMain
AutoRobButton.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
AutoRobButton.BorderColor3 = Color3.fromRGB(0, 255, 0)
AutoRobButton.Position = UDim2.new(0.00700000022, 5, 0.883000016, 0)
AutoRobButton.Size = UDim2.new(0, 483, 0, 30)
AutoRobButton.ZIndex = 2
AutoRobButton.Font = Enum.Font.SourceSans
AutoRobButton.Text = "Disbale Auto Rob"
AutoRobButton.TextColor3 = Color3.fromRGB(255, 255, 255)
AutoRobButton.TextSize = 20.000
AutoRobButton.TextStrokeColor3 = Color3.fromRGB(75, 149, 51)

UICorner_27.CornerRadius = UDim.new(0, 3)
UICorner_27.Parent = AutoRobButton

BackGround_14.Name = "BackGround"
BackGround_14.Parent = AutoRobButton
BackGround_14.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
BackGround_14.Position = UDim2.new(0, -1, 0, -1)
BackGround_14.Size = UDim2.new(0, 485, 0, 32)

UICorner_28.CornerRadius = UDim.new(0, 3)
UICorner_28.Parent = BackGround_14

SafeButton.Name = "SafeButton"
SafeButton.Parent = SettingsMain
SafeButton.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
SafeButton.BorderColor3 = Color3.fromRGB(0, 255, 0)
SafeButton.Position = UDim2.new(0.186218992, 0, 0.048338417, 0)
SafeButton.Size = UDim2.new(0, 50, 0, 25)
SafeButton.ZIndex = 2
SafeButton.Font = Enum.Font.SourceSans
SafeButton.Text = "on"
SafeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SafeButton.TextSize = 20.000

UICorner_29.CornerRadius = UDim.new(0, 3)
UICorner_29.Parent = SafeButton

BackGround_15.Name = "BackGround"
BackGround_15.Parent = SafeButton
BackGround_15.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
BackGround_15.Position = UDim2.new(0, -1, 0, -1)
BackGround_15.Size = UDim2.new(0, 52, 0, 27)

UICorner_30.CornerRadius = UDim.new(0, 3)
UICorner_30.Parent = BackGround_15

KillAura.Name = "Kill Aura"
KillAura.Parent = SettingsMain
KillAura.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
KillAura.BackgroundTransparency = 1.000
KillAura.BorderColor3 = Color3.fromRGB(25, 25, 25)
KillAura.BorderSizePixel = 0
KillAura.Position = UDim2.new(0.332129389, 0, 0.0260265451, 0)
KillAura.Size = UDim2.new(0, 97, 0, 35)
KillAura.Font = Enum.Font.SourceSans
KillAura.Text = "Kill Aura"
KillAura.TextColor3 = Color3.fromRGB(255, 255, 255)
KillAura.TextSize = 25.000
KillAura.TextStrokeColor3 = Color3.fromRGB(200, 200, 200)

Safe.Name = "Safe"
Safe.Parent = SettingsMain
Safe.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Safe.BackgroundTransparency = 1.000
Safe.BorderColor3 = Color3.fromRGB(25, 25, 25)
Safe.BorderSizePixel = 0
Safe.Position = UDim2.new(0.0163345486, 0, 0.0267174318, 0)
Safe.Size = UDim2.new(0, 83, 0, 35)
Safe.Font = Enum.Font.SourceSans
Safe.Text = "Safe"
Safe.TextColor3 = Color3.fromRGB(255, 255, 255)
Safe.TextSize = 25.000
Safe.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)

CopAvoidSlider.Name = "CopAvoidSlider"
CopAvoidSlider.Parent = SettingsMain
CopAvoidSlider.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
CopAvoidSlider.BackgroundTransparency = 0.700
CopAvoidSlider.BorderColor3 = Color3.fromRGB(200, 0, 0)
CopAvoidSlider.BorderSizePixel = 0
CopAvoidSlider.Position = UDim2.new(0.448132843, 0, 0.384615421, 0)
CopAvoidSlider.Size = UDim2.new(0, 215, 0, 15)

Handle.Name = "Handle"
Handle.Parent = CopAvoidSlider
Handle.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
Handle.BorderColor3 = Color3.fromRGB(0, 255, 255)
Handle.Position = UDim2.new(-0.860465109, 185, -0.26699999, 0)
Handle.Size = UDim2.new(0, 15, 0, 25)
Handle.ZIndex = 2

UICorner_31.CornerRadius = UDim.new(0, 3)
UICorner_31.Parent = Handle

BackGround_16.Name = "BackGround"
BackGround_16.Parent = Handle
BackGround_16.BackgroundColor3 = Color3.fromRGB(0, 13, 250)
BackGround_16.Position = UDim2.new(0, -1, 0, -1)
BackGround_16.Size = UDim2.new(0, 17, 0, 27)

UICorner_32.CornerRadius = UDim.new(0, 3)
UICorner_32.Parent = BackGround_16

CopAvoidRange.Name = "CopAvoidRange"
CopAvoidRange.Parent = SettingsMain
CopAvoidRange.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
CopAvoidRange.BackgroundTransparency = 1.000
CopAvoidRange.BorderColor3 = Color3.fromRGB(25, 25, 25)
CopAvoidRange.BorderSizePixel = 0
CopAvoidRange.Position = UDim2.new(0.105068661, 0, 0.35550341, 0)
CopAvoidRange.Size = UDim2.new(0, 100, 0, 35)
CopAvoidRange.Font = Enum.Font.SourceSans
CopAvoidRange.Text = "Cop Avoid Range"
CopAvoidRange.TextColor3 = Color3.fromRGB(255, 255, 255)
CopAvoidRange.TextSize = 25.000
CopAvoidRange.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)

BotSpeed.Name = "BotSpeed"
BotSpeed.Parent = SettingsMain
BotSpeed.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
BotSpeed.BackgroundTransparency = 1.000
BotSpeed.BorderColor3 = Color3.fromRGB(25, 25, 25)
BotSpeed.BorderSizePixel = 0
BotSpeed.Position = UDim2.new(0.105068661, 0, 0.477880985, 0)
BotSpeed.Size = UDim2.new(0, 100, 0, 35)
BotSpeed.Font = Enum.Font.SourceSans
BotSpeed.Text = "Bot Speed"
BotSpeed.TextColor3 = Color3.fromRGB(255, 255, 255)
BotSpeed.TextSize = 25.000
BotSpeed.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)

BotSpeedSlider.Name = "BotSpeedSlider"
BotSpeedSlider.Parent = SettingsMain
BotSpeedSlider.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
BotSpeedSlider.BackgroundTransparency = 0.700
BotSpeedSlider.BorderColor3 = Color3.fromRGB(200, 0, 0)
BotSpeedSlider.BorderSizePixel = 0
BotSpeedSlider.Position = UDim2.new(0.448132843, 0, 0.506993055, 0)
BotSpeedSlider.Size = UDim2.new(0, 215, 0, 15)

Handle_2.Name = "Handle"
Handle_2.Parent = BotSpeedSlider
Handle_2.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
Handle_2.BorderColor3 = Color3.fromRGB(0, 255, 255)
Handle_2.Position = UDim2.new(0, 0, -0.333333343, 0)
Handle_2.Size = UDim2.new(0, 15, 0, 25)
Handle_2.ZIndex = 2

UICorner_33.CornerRadius = UDim.new(0, 3)
UICorner_33.Parent = Handle_2

BackGround_17.Name = "BackGround"
BackGround_17.Parent = Handle_2
BackGround_17.BackgroundColor3 = Color3.fromRGB(0, 13, 250)
BackGround_17.Position = UDim2.new(0, -1, 0, -1)
BackGround_17.Size = UDim2.new(0, 17, 0, 27)

UICorner_34.CornerRadius = UDim.new(0, 3)
UICorner_34.Parent = BackGround_17

GroundSpeedLabel.Name = "GroundSpeedLabel"
GroundSpeedLabel.Parent = SettingsMain
GroundSpeedLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
GroundSpeedLabel.BackgroundTransparency = 1.000
GroundSpeedLabel.BorderColor3 = Color3.fromRGB(25, 25, 25)
GroundSpeedLabel.BorderSizePixel = 0
GroundSpeedLabel.Position = UDim2.new(0.105068661, 0, 0.600258589, 0)
GroundSpeedLabel.Size = UDim2.new(0, 100, 0, 35)
GroundSpeedLabel.Font = Enum.Font.SourceSans
GroundSpeedLabel.Text = "Bot Ground Speed"
GroundSpeedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
GroundSpeedLabel.TextSize = 25.000
GroundSpeedLabel.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)

GroundSpeedSlider.Name = "GroundSpeedSlider"
GroundSpeedSlider.Parent = SettingsMain
GroundSpeedSlider.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
GroundSpeedSlider.BackgroundTransparency = 0.700
GroundSpeedSlider.BorderColor3 = Color3.fromRGB(200, 0, 0)
GroundSpeedSlider.BorderSizePixel = 0
GroundSpeedSlider.Position = UDim2.new(0.448132843, 0, 0.629370689, 0)
GroundSpeedSlider.Size = UDim2.new(0, 215, 0, 15)

Handle_3.Name = "Handle"
Handle_3.Parent = GroundSpeedSlider
Handle_3.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
Handle_3.BorderColor3 = Color3.fromRGB(0, 255, 255)
Handle_3.Position = UDim2.new(0, 0, -0.333333343, 0)
Handle_3.Size = UDim2.new(0, 15, 0, 25)
Handle_3.ZIndex = 2

UICorner_35.CornerRadius = UDim.new(0, 3)
UICorner_35.Parent = Handle_3

BackGround_18.Name = "BackGround"
BackGround_18.Parent = Handle_3
BackGround_18.BackgroundColor3 = Color3.fromRGB(0, 13, 250)
BackGround_18.Position = UDim2.new(0, -1, 0, -1)
BackGround_18.Size = UDim2.new(0, 17, 0, 27)

UICorner_36.CornerRadius = UDim.new(0, 3)
UICorner_36.Parent = BackGround_18

KillAuraRange.Name = "KillAuraRange"
KillAuraRange.Parent = SettingsMain
KillAuraRange.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
KillAuraRange.BackgroundTransparency = 1.000
KillAuraRange.BorderColor3 = Color3.fromRGB(25, 25, 25)
KillAuraRange.BorderSizePixel = 0
KillAuraRange.Position = UDim2.new(0.105068661, 0, 0.227100283, 0)
KillAuraRange.Size = UDim2.new(0, 100, 0, 35)
KillAuraRange.Font = Enum.Font.SourceSans
KillAuraRange.Text = "Kill Aura Range"
KillAuraRange.TextColor3 = Color3.fromRGB(255, 255, 255)
KillAuraRange.TextSize = 25.000
KillAuraRange.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)

KillAuraSpeedSlider.Name = "KillAuraSpeedSlider"
KillAuraSpeedSlider.Parent = SettingsMain
KillAuraSpeedSlider.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
KillAuraSpeedSlider.BackgroundTransparency = 0.700
KillAuraSpeedSlider.BorderColor3 = Color3.fromRGB(200, 0, 0)
KillAuraSpeedSlider.BorderSizePixel = 0
KillAuraSpeedSlider.Position = UDim2.new(0.448132843, 0, 0.263934314, 0)
KillAuraSpeedSlider.Size = UDim2.new(0, 215, 0, 15)

Handle_4.Name = "Handle"
Handle_4.Parent = KillAuraSpeedSlider
Handle_4.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
Handle_4.BorderColor3 = Color3.fromRGB(0, 255, 255)
Handle_4.Position = UDim2.new(-0.860465109, 185, -0.26699999, 0)
Handle_4.Size = UDim2.new(0, 15, 0, 25)
Handle_4.ZIndex = 2

UICorner_37.CornerRadius = UDim.new(0, 3)
UICorner_37.Parent = Handle_4

BackGround_19.Name = "BackGround"
BackGround_19.Parent = Handle_4
BackGround_19.BackgroundColor3 = Color3.fromRGB(0, 13, 250)
BackGround_19.Position = UDim2.new(0, -1, 0, -1)
BackGround_19.Size = UDim2.new(0, 17, 0, 27)

UICorner_38.CornerRadius = UDim.new(0, 3)
UICorner_38.Parent = BackGround_19

ResetButton.Name = "ResetButton"
ResetButton.Parent = SettingsMain
ResetButton.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
ResetButton.BorderColor3 = Color3.fromRGB(255, 0, 0)
ResetButton.Position = UDim2.new(0.00700000022, 5, 0.732420862, 0)
ResetButton.Size = UDim2.new(0, 483, 0, 30)
ResetButton.ZIndex = 2
ResetButton.Font = Enum.Font.SourceSans
ResetButton.Text = "RESET"
ResetButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ResetButton.TextSize = 20.000
ResetButton.TextStrokeColor3 = Color3.fromRGB(75, 149, 51)

UICorner_39.CornerRadius = UDim.new(0, 3)
UICorner_39.Parent = ResetButton

BackGround_20.Name = "BackGround"
BackGround_20.Parent = ResetButton
BackGround_20.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
BackGround_20.Position = UDim2.new(0, -1, 0, -1)
BackGround_20.Size = UDim2.new(0, 485, 0, 32)

UICorner_40.CornerRadius = UDim.new(0, 3)
UICorner_40.Parent = BackGround_20

CopAvoid.Name = "CopAvoid"
CopAvoid.Parent = SettingsMain
CopAvoid.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
CopAvoid.BackgroundTransparency = 1.000
CopAvoid.BorderColor3 = Color3.fromRGB(25, 25, 25)
CopAvoid.BorderSizePixel = 0
CopAvoid.Position = UDim2.new(0.675563693, 0, 0.0260265451, 0)
CopAvoid.Size = UDim2.new(0, 97, 0, 35)
CopAvoid.Font = Enum.Font.SourceSans
CopAvoid.Text = "Cop Avoid"
CopAvoid.TextColor3 = Color3.fromRGB(255, 255, 255)
CopAvoid.TextSize = 25.000
CopAvoid.TextStrokeColor3 = Color3.fromRGB(200, 200, 200)

CopAvoidButton.Name = "CopAvoidButton"
CopAvoidButton.Parent = SettingsMain
CopAvoidButton.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
CopAvoidButton.BorderColor3 = Color3.fromRGB(0, 255, 0)
CopAvoidButton.Position = UDim2.new(0.892065942, 0, 0.0483384207, 0)
CopAvoidButton.Size = UDim2.new(0, 50, 0, 25)
CopAvoidButton.ZIndex = 2
CopAvoidButton.Font = Enum.Font.SourceSans
CopAvoidButton.Text = "on"
CopAvoidButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CopAvoidButton.TextSize = 20.000
CopAvoidButton.TextStrokeColor3 = Color3.fromRGB(20, 20, 20)

BackGround_21.Name = "BackGround"
BackGround_21.Parent = CopAvoidButton
BackGround_21.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
BackGround_21.Position = UDim2.new(0, -1, 0, -1)
BackGround_21.Size = UDim2.new(0, 52, 0, 27)

UICorner_41.CornerRadius = UDim.new(0, 3)
UICorner_41.Parent = BackGround_21

UICorner_42.CornerRadius = UDim.new(0, 3)
UICorner_42.Parent = CopAvoidButton

HeaderName_2.Name = "HeaderName"
HeaderName_2.Parent = Main
HeaderName_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
HeaderName_2.BackgroundTransparency = 1.000
HeaderName_2.BorderColor3 = Color3.fromRGB(85, 0, 255)
HeaderName_2.Position = UDim2.new(0.888135731, 0, 0.028753994, 0)
HeaderName_2.Size = UDim2.new(0, 65, 0, 26)
HeaderName_2.Font = Enum.Font.SourceSans
HeaderName_2.Text = "Pxsta"
HeaderName_2.TextColor3 = Color3.fromRGB(255, 255, 255)
HeaderName_2.TextSize = 20.000

Version.Name = "Version"
Version.Parent = Main
Version.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Version.BackgroundTransparency = 1.000
Version.Position = UDim2.new(0.177966118, 0, 0.0504082143, 0)
Version.Size = UDim2.new(0, 45, 0, 20)
Version.Font = Enum.Font.SourceSans
Version.Text = "v 0.5"
Version.TextColor3 = Color3.fromRGB(255, 255, 255)
Version.TextSize = 15.000
Version.TextWrapped = true

UICorner_43.CornerRadius = UDim.new(0, 10)
UICorner_43.Parent = Main

ConsoleButton.Name = "ConsoleButton"
ConsoleButton.Parent = Main
ConsoleButton.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
ConsoleButton.BorderColor3 = Color3.fromRGB(0, 255, 255)
ConsoleButton.Position = UDim2.new(0.0172290206, 0, 0.168379545, 0)
ConsoleButton.Size = UDim2.new(0, 67, 0, 26)
ConsoleButton.ZIndex = 2
ConsoleButton.Font = Enum.Font.SourceSans
ConsoleButton.Text = "Console"
ConsoleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ConsoleButton.TextSize = 15.000

UICorner_44.CornerRadius = UDim.new(0, 3)
UICorner_44.Parent = ConsoleButton

BackGround_22.Name = "BackGround"
BackGround_22.Parent = ConsoleButton
BackGround_22.BackgroundColor3 = Color3.fromRGB(163, 0, 233)
BackGround_22.BorderColor3 = Color3.fromRGB(27, 42, 53)
BackGround_22.Position = UDim2.new(0, -1, 0, -1)
BackGround_22.Size = UDim2.new(0, 69, 0, 28)

UICorner_45.CornerRadius = UDim.new(0, 3)
UICorner_45.Parent = BackGround_22

SettingsButton.Name = "SettingsButton"
SettingsButton.Parent = Main
SettingsButton.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
SettingsButton.BorderColor3 = Color3.fromRGB(0, 255, 255)
SettingsButton.Position = UDim2.new(0.023474576, -3, 0.28121084, 0)
SettingsButton.Size = UDim2.new(0, 67, 0, 26)
SettingsButton.ZIndex = 2
SettingsButton.Font = Enum.Font.SourceSans
SettingsButton.Text = "Settings"
SettingsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SettingsButton.TextSize = 15.000

UICorner_46.CornerRadius = UDim.new(0, 3)
UICorner_46.Parent = SettingsButton

BackGround_23.Name = "BackGround"
BackGround_23.Parent = SettingsButton
BackGround_23.BackgroundColor3 = Color3.fromRGB(163, 0, 233)
BackGround_23.Position = UDim2.new(0, -1, 0, -1)
BackGround_23.Size = UDim2.new(0, 69, 0, 28)

UICorner_47.CornerRadius = UDim.new(0, 3)
UICorner_47.Parent = BackGround_23

MainBackground.Name = "MainBackground"
MainBackground.Parent = Main
MainBackground.BackgroundColor3 = Color3.fromRGB(121, 5, 237)
MainBackground.BorderColor3 = Color3.fromRGB(0, 255, 255)
MainBackground.Position = UDim2.new(0, -1, 0, -1)
MainBackground.Size = UDim2.new(0, 592, 0, 315)
MainBackground.ZIndex = 0

UICorner_48.CornerRadius = UDim.new(0, 10)
UICorner_48.Parent = MainBackground

Devider.Name = "Devider"
Devider.Parent = Main
Devider.BackgroundColor3 = Color3.fromRGB(121, 5, 237)
Devider.BorderSizePixel = 0
Devider.Position = UDim2.new(-0.00194601715, 0, 0.139605373, 0)
Devider.Size = UDim2.new(0, 592, 0, 1)
Devider.ZIndex = 2

Devider_2.Name = "Devider"
Devider_2.Parent = Main
Devider_2.BackgroundColor3 = Color3.fromRGB(121, 5, 237)
Devider_2.BorderSizePixel = 0
Devider_2.Position = UDim2.new(0.145511612, 0, 0.139605448, 0)
Devider_2.Size = UDim2.new(0, 1, 0, 269)
Devider_2.ZIndex = 2

LocationsButton.Name = "LocationsButton"
LocationsButton.Parent = Main
LocationsButton.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
LocationsButton.BorderColor3 = Color3.fromRGB(0, 255, 255)
LocationsButton.Position = UDim2.new(0.023474576, -3, 0.393031925, 0)
LocationsButton.Size = UDim2.new(0, 67, 0, 26)
LocationsButton.ZIndex = 2
LocationsButton.Font = Enum.Font.SourceSans
LocationsButton.Text = "Locations"
LocationsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
LocationsButton.TextSize = 15.000

UICorner_49.CornerRadius = UDim.new(0, 3)
UICorner_49.Parent = LocationsButton

BackGround_24.Name = "BackGround"
BackGround_24.Parent = LocationsButton
BackGround_24.BackgroundColor3 = Color3.fromRGB(163, 0, 233)
BackGround_24.Position = UDim2.new(0, -1, 0, -1)
BackGround_24.Size = UDim2.new(0, 69, 0, 28)

UICorner_50.CornerRadius = UDim.new(0, 3)
UICorner_50.Parent = BackGround_24

ConsoleMain.Name = "ConsoleMain"
ConsoleMain.Parent = Main
ConsoleMain.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
ConsoleMain.BorderColor3 = Color3.fromRGB(0, 255, 255)
ConsoleMain.BorderSizePixel = 0
ConsoleMain.Position = UDim2.new(0, 88, 0, 43)
ConsoleMain.Size = UDim2.new(0, 495, 0, 259)

Console.Name = "Console"
Console.Parent = ConsoleMain
Console.Active = true
Console.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
Console.BorderColor3 = Color3.fromRGB(56, 22, 78)
Console.Position = UDim2.new(0, 16, 0, 15)
Console.Size = UDim2.new(0, 463, 0, 214)
Console.AutomaticCanvasSize = "Y"
Console.CanvasSize = UDim2.new(0, 0, 0.825999975, 0)
Console.ScrollBarThickness = 5

Log.Name = "Log"
Log.Parent = ConsoleMain
Log.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
Log.BorderColor3 = Color3.fromRGB(56, 22, 78)
Log.Position = UDim2.new(0.0323232412, 0, 0.884169877, 0)
Log.Size = UDim2.new(0, 463, 0, 25)
Log.Font = Enum.Font.SourceSans
Log.TextColor3 = Color3.fromRGB(200, 200, 200)
Log.TextSize = 25

InfoMain.Name = "InfoMain"
InfoMain.Parent = Main
InfoMain.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
InfoMain.BorderColor3 = Color3.fromRGB(0, 255, 255)
InfoMain.BorderSizePixel = 0
InfoMain.Position = UDim2.new(0, 88, 0, 43)
InfoMain.Size = UDim2.new(0, 495, 0, 259)

Status.Name = "Status"
Status.Parent = InfoMain
Status.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Status.BackgroundTransparency = 1.000
Status.Position = UDim2.new(0.228659511, 0, 0.138811037, 0)
Status.Size = UDim2.new(0, 200, 0, 25)
Status.Font = Enum.Font.SourceSans
Status.Text = "Status: Owner"
Status.TextColor3 = Color3.fromRGB(255, 255, 255)
Status.TextSize = 25.000
Status.TextXAlignment = Enum.TextXAlignment.Left

User.Name = "User"
User.Parent = InfoMain
User.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
User.BackgroundTransparency = 1.000
User.Position = UDim2.new(0.229703844, 0, 0.0308633465, 0)
User.Size = UDim2.new(0, 200, 0, 25)
User.Font = Enum.Font.SourceSans
User.Text = "User: Pxsta#4133"
User.TextColor3 = Color3.fromRGB(255, 255, 255)
User.TextSize = 25.000
User.TextXAlignment = Enum.TextXAlignment.Left

ToggleMenu.Name = "ToggleMenu"
ToggleMenu.Parent = InfoMain
ToggleMenu.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ToggleMenu.BackgroundTransparency = 1.000
ToggleMenu.Position = UDim2.new(0.0121212155, 0, 0.903474927, 0)
ToggleMenu.Size = UDim2.new(0, 146, 0, 25)
ToggleMenu.Font = Enum.Font.SourceSans
ToggleMenu.Text = "Close Menu:"
ToggleMenu.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleMenu.TextSize = 25.000

ToggleMenuButton.Name = "ToggleMenuButton"
ToggleMenuButton.Parent = InfoMain
ToggleMenuButton.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
ToggleMenuButton.Position = UDim2.new(0.290909111, 0, 0.903474927, 0)
ToggleMenuButton.Size = UDim2.new(0, 150, 0, 25)
ToggleMenuButton.ZIndex = 2
ToggleMenuButton.Font = Enum.Font.SourceSans
ToggleMenuButton.Text = "RIGHT SHIFT"
ToggleMenuButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleMenuButton.TextSize = 20.000

UICorner_51.CornerRadius = UDim.new(0, 3)
UICorner_51.Parent = ToggleMenuButton

BackGround_25.Name = "BackGround"
BackGround_25.Parent = ToggleMenuButton
BackGround_25.BackgroundColor3 = Color3.fromRGB(163, 0, 233)
BackGround_25.BorderColor3 = Color3.fromRGB(27, 42, 53)
BackGround_25.Position = UDim2.new(0, -1, 0, -1)
BackGround_25.Size = UDim2.new(0, 152, 0, 27)

UICorner_52.CornerRadius = UDim.new(0, 3)
UICorner_52.Parent = BackGround_25

Icon.Name = "Icon"
Icon.Parent = InfoMain
Icon.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Icon.BorderColor3 = Color3.fromRGB(27, 42, 53)
Icon.Position = UDim2.new(0, 6, 0, 8)
Icon.Size = UDim2.new(0, 100, 0, 100)
Icon.ZIndex = 2

UICorner_53.CornerRadius = UDim.new(0, 3)
UICorner_53.Parent = Icon

BackGround_26.Name = "BackGround"
BackGround_26.Parent = Icon
BackGround_26.BackgroundColor3 = Color3.fromRGB(163, 0, 233)
BackGround_26.BorderColor3 = Color3.fromRGB(27, 42, 53)
BackGround_26.Position = UDim2.new(0, -1, 0, -1)
BackGround_26.Size = UDim2.new(0, 102, 0, 102)

UICorner_54.CornerRadius = UDim.new(0, 3)
UICorner_54.Parent = BackGround_26

Time.Name = "Time"
Time.Parent = InfoMain
Time.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Time.BackgroundTransparency = 1.000
Time.Position = UDim2.new(0.0104777021, 0, 0.470857352, 0)
Time.Size = UDim2.new(0, 205, 0, 25)
Time.Font = Enum.Font.SourceSans
Time.Text = "Time Elapsed: 00:00:00"
Time.TextColor3 = Color3.fromRGB(255, 255, 255)
Time.TextSize = 25.000
Time.TextXAlignment = Enum.TextXAlignment.Left

Money.Name = "Money"
Money.Parent = InfoMain
Money.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Money.BackgroundTransparency = 1.000
Money.Position = UDim2.new(0.01047769, 0, 0.590548515, 0)
Money.Size = UDim2.new(0, 200, 0, 25)
Money.Font = Enum.Font.SourceSans
Money.Text = "Money Earned: $0"
Money.TextColor3 = Color3.fromRGB(255, 255, 255)
Money.TextSize = 25.000
Money.TextXAlignment = Enum.TextXAlignment.Left

InfoButton.Name = "InfoButton"
InfoButton.Parent = Main
InfoButton.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
InfoButton.BorderColor3 = Color3.fromRGB(0, 255, 255)
InfoButton.Position = UDim2.new(0.023474576, -3, 0.508047879, 0)
InfoButton.Size = UDim2.new(0, 67, 0, 26)
InfoButton.ZIndex = 2
InfoButton.Font = Enum.Font.SourceSans
InfoButton.Text = "Info"
InfoButton.TextColor3 = Color3.fromRGB(255, 255, 255)
InfoButton.TextSize = 15.000

UICorner_55.CornerRadius = UDim.new(0, 3)
UICorner_55.Parent = InfoButton

BackGround_27.Name = "BackGround"
BackGround_27.Parent = InfoButton
BackGround_27.BackgroundColor3 = Color3.fromRGB(163, 0, 233)
BackGround_27.Position = UDim2.new(0, -1, 0, -1)
BackGround_27.Size = UDim2.new(0, 69, 0, 28)

UICorner_56.CornerRadius = UDim.new(0, 3)
UICorner_56.Parent = BackGround_27

-- Scripts:

local function CMAHX_fake_script() -- CopAvoidSlider.LocalScript 
	local script = Instance.new('LocalScript', CopAvoidSlider)

	local slider = script.Parent
	local handle = slider.Handle
	local mouse = game.Players.LocalPlayer:GetMouse()
	local held = false
	
	handle.MouseButton1Down:Connect(function()
		held = true
	end)
	
	game:GetService("UserInputService").InputEnded:Connect(function(input, proccesed)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			held = false
		end
	end) 
	
	while true do 
		if held then
			pos = game:GetService("UserInputService"):GetMouseLocation() - slider.AbsolutePosition
			handle.Position = UDim2.new(0, pos.X - (handle.Size.X.Offset / 2), handle.Position.Y.Scale, handle.Position.Y.Offset)
			if handle.Position.X.Offset < slider.Position.X.Offset then
				handle.Position = UDim2.new(0, slider.Position.X.Offset, handle.Position.Y.Scale, handle.Position.Y.Offset)
			end
			if handle.Position.X.Offset + handle.Size.X.Offset > slider.Position.X.Offset + slider.Size.X.Offset then
				handle.Position = UDim2.new(0, slider.Position.X.Offset + slider.Size.X.Offset - handle.Size.X.Offset, handle.Position.Y.Scale, handle.Position.Y.Offset)
			end
		end
		wait()
	end
end
coroutine.wrap(CMAHX_fake_script)()
local function TMLF_fake_script() -- BotSpeedSlider.LocalScript 
	local script = Instance.new('LocalScript', BotSpeedSlider)

	local slider = script.Parent
	local handle = slider.Handle
	local mouse = game.Players.LocalPlayer:GetMouse()
	local held = false
	
	handle.MouseButton1Down:Connect(function()
		held = true
	end)
	
	game:GetService("UserInputService").InputEnded:Connect(function(input, proccesed)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			held = false
		end
	end) 
	
	while true do 
		if held then
			pos = game:GetService("UserInputService"):GetMouseLocation() - slider.AbsolutePosition
			handle.Position = UDim2.new(0, pos.X - (handle.Size.X.Offset / 2), handle.Position.Y.Scale, handle.Position.Y.Offset)
			if handle.Position.X.Offset < slider.Position.X.Offset then
				handle.Position = UDim2.new(0, slider.Position.X.Offset, handle.Position.Y.Scale, handle.Position.Y.Offset)
			end
			if handle.Position.X.Offset + handle.Size.X.Offset > slider.Position.X.Offset + slider.Size.X.Offset then
				handle.Position = UDim2.new(0, slider.Position.X.Offset + slider.Size.X.Offset - handle.Size.X.Offset, handle.Position.Y.Scale, handle.Position.Y.Offset)
			end
		end
		wait()
	end
end
coroutine.wrap(TMLF_fake_script)()
local function OYMRD_fake_script() -- GroundSpeedSlider.LocalScript 
	local script = Instance.new('LocalScript', GroundSpeedSlider)

	local slider = script.Parent
	local handle = slider.Handle
	local mouse = game.Players.LocalPlayer:GetMouse()
	local held = false
	
	handle.MouseButton1Down:Connect(function()
		held = true
	end)
	
	game:GetService("UserInputService").InputEnded:Connect(function(input, proccesed)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			held = false
		end
	end) 
	
	while true do 
		if held then
			pos = game:GetService("UserInputService"):GetMouseLocation() - slider.AbsolutePosition
			handle.Position = UDim2.new(0, pos.X - (handle.Size.X.Offset / 2), handle.Position.Y.Scale, handle.Position.Y.Offset)
			if handle.Position.X.Offset < slider.Position.X.Offset then
				handle.Position = UDim2.new(0, slider.Position.X.Offset, handle.Position.Y.Scale, handle.Position.Y.Offset)
			end
			if handle.Position.X.Offset + handle.Size.X.Offset > slider.Position.X.Offset + slider.Size.X.Offset then
				handle.Position = UDim2.new(0, slider.Position.X.Offset + slider.Size.X.Offset - handle.Size.X.Offset, handle.Position.Y.Scale, handle.Position.Y.Offset)
			end
		end
		wait()
	end
end
coroutine.wrap(OYMRD_fake_script)()
local function WBYYUOB_fake_script() -- KillAuraSpeedSlider.LocalScript 
	local script = Instance.new('LocalScript', KillAuraSpeedSlider)

	local slider = script.Parent
	local handle = slider.Handle
	local mouse = game.Players.LocalPlayer:GetMouse()
	local held = false
	
	handle.MouseButton1Down:Connect(function()
		held = true
	end)
	
	game:GetService("UserInputService").InputEnded:Connect(function(input, proccesed)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			held = false
		end
	end) 
	
	while true do 
		if held then
			pos = game:GetService("UserInputService"):GetMouseLocation() - slider.AbsolutePosition
			handle.Position = UDim2.new(0, pos.X - (handle.Size.X.Offset / 2), handle.Position.Y.Scale, handle.Position.Y.Offset)
			if handle.Position.X.Offset < slider.Position.X.Offset then
				handle.Position = UDim2.new(0, slider.Position.X.Offset, handle.Position.Y.Scale, handle.Position.Y.Offset)
			end
			if handle.Position.X.Offset + handle.Size.X.Offset > slider.Position.X.Offset + slider.Size.X.Offset then
				handle.Position = UDim2.new(0, slider.Position.X.Offset + slider.Size.X.Offset - handle.Size.X.Offset, handle.Position.Y.Scale, handle.Position.Y.Offset)
			end
		end
		wait()
	end
end
coroutine.wrap(WBYYUOB_fake_script)()

----------------------------------------------------------------

Icon.Image = "http://www.roblox.com/thumbs/avatar.ashx?x=150&y=200&format=png&userid="..game.Players.localPlayer.UserId

local KEY = nil
if readfile and isfile then 
    if isfile("ProjectAutoKey.txt") then
        KEY = HttpService:JSONDecode(readfile("ProjectAutoKey.txt"))
    end
end
local VerifyString = KEY.." "..tostring(hwid)

local data = {['VERIFY'] = VerifyString}

Server = http.request({Url = "http://Pxsta.pythonanywhere.com", Method = "POST", Headers = data})

if string.sub(Server.Body, 1, 20) == "SET HWID - STATUS: " then
    Status.Text = "Status: "..string.sub(Server.Body, 21, #(Server.Body))
end

if string.sub(Server.Body, 1, 23) == "CORRECT HWID - STATUS: " then
    Status.Text = "Status: "..string.sub(Server.Body, 24, #(Server.Body))
end

if Server.Body == "INCORRECT HWID" then
    game.Players.localPlayer.PlayerGui.NotificationGui.ContainerNotification.Message.Text = "Incorrect hwid, reset your hwid using our discord - auto.projectbot.top"
    game.Players.localPlayer.PlayerGui.NotificationGui.Enabled = true
    game.Players.localPlayer.PlayerGui.ProjectAuto:Destroy()
    _G.AutoRobLoaded = false
    wait(5)
    game.Players.localPlayer.PlayerGui.NotificationGui.Enabled = false
    return
end

if Server.Body == "NO KEY" then
    game.Players.localPlayer.PlayerGui.NotificationGui.ContainerNotification.Message.Text = "Incorrect or missing key, join our discord for a key - auto.projectbot.top"
    game.Players.localPlayer.PlayerGui.NotificationGui.Enabled = true
    game.Players.localPlayer.PlayerGui.ProjectAuto:Destroy()
    _G.AutoRobLoaded = false
    wait(5)
    game.Players.localPlayer.PlayerGui.NotificationGui.Enabled = false
    return
end

data = {['DISCORD'] = KEY}

Server = http.request({Url = "http://Pxsta.pythonanywhere.com", Method = "POST", Headers = data})
if Server.Body == "INVALID KEY" then
    game.Players.localPlayer.PlayerGui.NotificationGui.ContainerNotification.Message.Text = "Key not activated, activate key in our discord - auto.projectbot.top"
    game.Players.localPlayer.PlayerGui.NotificationGui.Enabled = true
    game.Players.localPlayer.PlayerGui.ProjectAuto:Destroy()
    _G.AutoRobLoaded = false
    wait(5)
    game.Players.localPlayer.PlayerGui.NotificationGui.Enabled = false
    return
end

wait(1)

User.Text = "User: "..string.sub(Server.Body, 10, #(Server.Body))

----------------------------------------------------------------

local ToggleKey = Enum.KeyCode.RightShift
    
local ToggleMenuButtonHold = false

game:GetService("UserInputService").InputBegan:Connect(function(input, proccesed)
    if not ToggleMenuButtonHold then
        if input.KeyCode == ToggleKey then
            if not Main.Visible then
                Main.Visible = true
            else
                Main.Visible = false
            end
        end
    else
        ToggleKey = input.KeyCode
        ToggleMenuButton.Text = string.upper(input.KeyCode.Name)
        ToggleMenuButtonHold = false
    end
end)

ToggleMenuButton.MouseButton1Click:Connect(function()
    ToggleMenuButtonHold = true
    ToggleMenuButton.Text = ""
end)

----------------------------------------------------------------

Main.Active = true
Main.Draggable = true
ConsoleMain.Visible = true
SettingsMain.Visible = false
LocationsMain.Visible = false
InfoMain.Visible = false
ConsoleButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)

ConsoleButton.MouseButton1Click:Connect(function()
    ConsoleButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    SettingsButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    LocationsButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    InfoButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    ConsoleMain.Visible = true
    SettingsMain.Visible = false
    LocationsMain.Visible = false
    InfoMain.Visible = false
end)

SettingsButton.MouseButton1Click:Connect(function()
    ConsoleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    SettingsButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    LocationsButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    InfoButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    ConsoleMain.Visible = false
    SettingsMain.Visible = true
    LocationsMain.Visible = false
    InfoMain.Visible = false
end)

LocationsButton.MouseButton1Click:Connect(function()
    ConsoleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    SettingsButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    LocationsButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    InfoButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    ConsoleMain.Visible = false
    SettingsMain.Visible = false
    LocationsMain.Visible = true
    InfoMain.Visible = false
end)

InfoButton.MouseButton1Click:Connect(function()
    ConsoleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    SettingsButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    LocationsButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    InfoButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    ConsoleMain.Visible = false
    SettingsMain.Visible = false
    LocationsMain.Visible = false
    InfoMain.Visible = true
end)
----------------------------------------------------------------

local MessagePostion = 0
function CreateMessage(message)
    local NewMessage = Instance.new("TextLabel")

    NewMessage.Parent = Console
    NewMessage.Position = UDim2.new(0, 0, MessagePostion, 0)
    NewMessage.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    NewMessage.BackgroundTransparency = 0
    NewMessage.BorderColor3 = Color3.fromRGB(0, 0, 0)
    NewMessage.BorderSizePixel = 0
    NewMessage.Size = UDim2.new(0, 463, 0, 25)
    NewMessage.Font = Enum.Font.SourceSans
    NewMessage.Text = message
    NewMessage.TextColor3 = Color3.fromRGB(200, 200, 200)
    NewMessage.TextSize = 25.000
end

local CharPerLine = 55

function LogMessage(message)
    if message == nil then
        return
    end
    local lines = math.floor(#(message) / CharPerLine)

    for i = 0, lines, 1 do
        if i < lines then
            CreateMessage(string.sub(message, i * CharPerLine, ((i + 1) * CharPerLine) - 1))
        else
            CreateMessage(string.sub(message, i * CharPerLine, #(message)))
        end
        MessagePostion += 0.1
    end

    MessagePostion += 0.05
end

function UpdateLog(message)
    Log.Text = "currently: "..message
end

----------------------------------------------------------------

local Bot = game.Players.localPlayer
local TotalMoneyEarned = 0
local platform = nil
local RobbingLocation = false
local toggled = true -- TRUE = ON  | FALSE = OFF
local reset = false
local exitCar = require(game:GetService("ReplicatedStorage").Game.CharacterUtil)

local network = getupvalue(require(game.ReplicatedStorage.Module.AlexChassis).SetEvent, 1)
local punchHash = "vjolnz9h" -- Y
local hash = 'rcbiixfj'  -- Y

local config = {
    safe = true,
    copAvoid = true,
    avoidCopRange = 100,
    killAura = false,
    killAuraRange = 150,
    CarSpeed = -100,
    FlySpeed = -50,
    GroundSpeed = 1,
    MansionToggled = true,
    MuseumToggled = true,
    BankToggled = true,
    JewelToggled = true,
    CasinoToggled = true,
    DropToggled = true,
    TrainToggled = true,
    StoresToggled = true,
    TombToggled = true,
    PowerToggled = true,
    BoatToggled = true,
    PlaneToggled = true
}

----------------------------------------------------------------

SafeButton.MouseButton1Click:Connect(function()
    config.safe = not config.safe

    if not config.safe then
        SafeButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        SafeButton.Text = "off"
    else
        SafeButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        SafeButton.Text = "on"
    end
end)

CopAvoidButton.MouseButton1Click:Connect(function()
    config.copAvoid = not config.copAvoid

    if not config.copAvoid then
        CopAvoidButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        CopAvoidButton.Text = "off"
    else
        CopAvoidButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        CopAvoidButton.Text = "on"
    end
end)

KillAuraButton.MouseButton1Click:Connect(function()
    config.killAura = not config.killAura

    if not config.killAura then
        KillAuraButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0) 
        KillAuraButton.Text = "off"
    else
        KillAuraButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        KillAuraButton.Text = "on"
    end
end)

AutoRobButton.MouseButton1Click:Connect(function()
    toggled = not toggled

    if not toggled then
        AutoRobButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        AutoRobButton.Text = "Enable Auto Rob"
    else
        AutoRobButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        AutoRobButton.Text = "Disable Auto Rob"
    end
end)

ResetButton.MouseButton1Click:Connect(function()
    Bot.Character.Humanoid.Health = 0
    exitCar.OnJump()
    LogMessage("ressetting bot")
end)

MansionButton.MouseButton1Click:Connect(function()
    config.MansionToggled = not config.MansionToggled

    if not config.MansionToggled then
        MansionButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        MansionButton.Text = "off"
    else
        MansionButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        MansionButton.Text = "on"
    end
end)

MuseumButton.MouseButton1Click:Connect(function()
    config.MuseumToggled = not config.MuseumToggled

    if not config.MuseumToggled then
        MuseumButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        MuseumButton.Text = "off"
    else
        MuseumButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        MuseumButton.Text = "on"
    end
end)

BankButton.MouseButton1Click:Connect(function()
    config.BankToggled = not config.BankToggled

    if not config.BankToggled then
        BankButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        BankButton.Text = "off"
    else
        BankButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        BankButton.Text = "on"
    end
end)

JewelButton.MouseButton1Click:Connect(function()
    config.JewelToggled = not config.JewelToggled

    if not config.JewelToggled then
        JewelButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        JewelButton.Text = "off"
    else
        JewelButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        JewelButton.Text = "on"
    end
end)

CasinoButton.MouseButton1Click:Connect(function()
    config.CasinoToggled = not config.CasinoToggled

    if not config.CasinoToggled then
        CasinoButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        CasinoButton.Text = "off"
    else
        CasinoButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        CasinoButton.Text = "on"
    end
end)

DropButton.MouseButton1Click:Connect(function()
    config.DropToggled = not config.DropToggled

    if not config.DropToggled then
        DropButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        DropButton.Text = "off"
    else
        DropButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        DropButton.Text = "on"
    end
end)

TrainButton.MouseButton1Click:Connect(function()
    config.TrainToggled = not config.TrainToggled

    if not config.TrainToggled then
        TrainButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        TrainButton.Text = "off"
    else
        TrainButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        TrainButton.Text = "on"
    end
end)

SmallStoresButton.MouseButton1Click:Connect(function()
    if true then -- remove when location added
        return
    end
    config.StoresToggled = not config.StoresToggled

    if not config.StoresToggled then
        SmallStoresButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        SmallStoresButton.Text = "off"
    else
        SmallStoresButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        SmallStoresButton.Text = "on"
    end
end)

TombButton.MouseButton1Click:Connect(function()
    config.TombToggled = not config.TombToggled

    if not config.TombToggled then
        TombButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        TombButton.Text = "off"
    else
        TombButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        TombButton.Text = "on"
    end
end)

PlaneButton.MouseButton1Click:Connect(function()
    config.PlaneToggled = not config.PlaneToggled

    if not config.PlaneToggled then
        PlaneButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        PlaneButton.Text = "off"
    else
        PlaneButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        PlaneButton.Text = "on"
    end
end)

PowerButton.MouseButton1Click:Connect(function()
    if true then -- remove when location added
        return
    end
    config.PowerToggled = not config.PowerToggled

    if not config.PowerToggled then
        PowerButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        PowerButton.Text = "off"
    else
        PowerButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        PowerButton.Text = "on"
    end
end)

BoatButton.MouseButton1Click:Connect(function()
    if true then -- remove when location added
        return
    end
    config.BoatToggled = not config.BoatToggled

    if not config.BoatToggled then
        BoatButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        BoatButton.Text = "off"
    else
        BoatButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        BoatButton.Text = "on"
    end
end)


----------------------------------------------------------------


function load()
    local HttpService = game:GetService("HttpService")
    if readfile and isfile then 
        if isfile("autorob.txt") then
            config = HttpService:JSONDecode(readfile("autorob.txt"))
        end
    end
end

function save()
    local json
    local HttpService = game:GetService("HttpService")
    if writefile then 
        json = HttpService:JSONEncode(config)
        writefile("autorob.txt", json)
    end
end

load()
    
if config.safe == nil then
    config.safe = true
end
if config.avoidCopRange == nil then
    config.avoidCopRange = 50
end
if config.copAvoid == nil then
    config.copAvoid = true
end
if config.killAura == nil then
    config.killAura = true
end
if config.killAuraRange == nil then
    config.killAuraRange = 150
end
if config.CarSpeed == nil then
    config.CarSpeed = -600
end
if config.FlySpeed == nil then
    config.FlySpeed = -150
end
if config.GroundSpeed == nil then
    config.GroundSpeed = 9
end
if config.MansionToggled == nil then
    config.MansionToggled = true
end
if config.MuseumToggled == nil then
    config.MuseumToggled = true
end
if config.BankToggled == nil then
    config.BankToggled = true
end
if config.JewelToggled == nil then
    config.JewelToggled = true
end
if config.CasinoToggled == nil then
    config.CasinoToggled = true
end
if config.DropToggled == nil then
    config.DropToggled = true
end
if config.TrainToggled == nil then
    config.TrainToggled = true
end
if config.StoresToggled == nil then
    config.StoresToggled = true
end
if config.TombToggled == nil then
    config.TombToggled = true
end
if config.PlaneToggled == nil then
    config.PlaneToggled = true
end
if config.PowerToggled == nil then
    config.PowerToggled = true
end
if config.BoatToggled == nil then
    config.BoatToggled = true
end

if not config.MansionToggled then
    MansionButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    MansionButton.Text = "off"
else
    MansionButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    MansionButton.Text = "on"
end
if not config.MuseumToggled then
    MuseumButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    MuseumButton.Text = "off"
else
    MuseumButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    MuseumButton.Text = "on"
end
if not config.BankToggled then
    BankButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    BankButton.Text = "off"
else
    BankButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    BankButton.Text = "on"
end
if not config.JewelToggled then
    JewelButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    JewelButton.Text = "off"
else
    JewelButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    JewelButton.Text = "on"
end
if not config.CasinoToggled then
    CasinoButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    CasinoButton.Text = "off"
else
    CasinoButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    CasinoButton.Text = "on"
end
if not config.DropToggled then
    DropButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    DropButton.Text = "off"
else
    DropButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    DropButton.Text = "on"
end
if not config.TrainToggled then
    TrainButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    TrainButton.Text = "off"
else
    TrainButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    TrainButton.Text = "on"
end
if not config.StoresToggled then
    SmallStoresButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    SmallStoresButton.Text = "off"
else
    SmallStoresButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    SmallStoresButton.Text = "on"
end
if not config.TombToggled then
    TombButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    TombButton.Text = "off"
else
    TombButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    TombButton.Text = "on"
end
if not config.PlaneToggled then
    PlaneButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    PlaneButton.Text = "off"
else
    PlaneButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    PlaneButton.Text = "on"
end
if not config.PowerEnabled then
    PowerButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    PowerButton.Text = "off"
else
    PowerButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    PowerButton.Text = "on"
end
if not config.BoatToggled then
    BoatButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    BoatButton.Text = "off"
else
    BoatButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    BoatButton.Text = "on"
end
if not config.safe then
    SafeButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    SafeButton.Text = "off"
else
    SafeButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    SafeButton.Text = "on"
end
if not config.copAvoid then
    CopAvoidButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    CopAvoidButton.Text = "off"
else
    CopAvoidButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    CopAvoidButton.Text = "on"
end
if not config.killAura then
    KillAuraButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    KillAuraButton.Text = "off"
else
    KillAuraButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    KillAuraButton.Text = "on"
end
if not toggled then
    AutoRobButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    AutoRobButton.Text = "Enable Auto Rob"
else
    AutoRobButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    AutoRobButton.Text = "Disable Auto Rob"
end

-- for locations not added yet

SmallStoresButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(100, 100, 100)
SmallStoresButton.Text = ""

PowerButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(100, 100, 100)
PowerButton.Text = ""

BoatButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(100, 100, 100)
BoatButton.Text = ""

-- (MAX + MIN) / NUM = 200, (MAX + MIN) / 200 = NUM
BotSpeedSlider:FindFirstChild("Handle").Position = UDim2.new(0, (config.FlySpeed + 50) / -0.5, BotSpeedSlider:FindFirstChild("Handle").Position.Y.Scale, BotSpeedSlider:FindFirstChild("Handle").Position.Y.Offset)
GroundSpeedSlider:FindFirstChild("Handle").Position = UDim2.new(0, (config.GroundSpeed - 1) / 0.04, GroundSpeedSlider:FindFirstChild("Handle").Position.Y.Scale, GroundSpeedSlider:FindFirstChild("Handle").Position.Y.Offset)
BotSpeedSlider:FindFirstChild("Handle").Position = UDim2.new(0, (config.CarSpeed + 100) / -2.5, BotSpeedSlider:FindFirstChild("Handle").Position.Y.Scale, BotSpeedSlider:FindFirstChild("Handle").Position.Y.Offset)
KillAuraSpeedSlider:FindFirstChild("Handle").Position = UDim2.new(0, (config.killAuraRange - 50) / 2.75, KillAuraSpeedSlider:FindFirstChild("Handle").Position.Y.Scale, KillAuraSpeedSlider:FindFirstChild("Handle").Position.Y.Offset)
CopAvoidSlider:FindFirstChild("Handle").Position = UDim2.new(0, (config.avoidCopRange - 100) / 2.5, CopAvoidSlider:FindFirstChild("Handle").Position.Y.Scale, CopAvoidSlider:FindFirstChild("Handle").Position.Y.Offset)

coroutine.wrap(function() -- 200 * NUM + MIN = MAX, (MAX - MIN) / 200 = NUM
    while true do
        config.FlySpeed = BotSpeedSlider:FindFirstChild("Handle").Position.X.Offset * -0.5 - 50
        config.avoidCopRange = CopAvoidSlider:FindFirstChild("Handle").Position.X.Offset * 2.5 + 100
        config.GroundSpeed = GroundSpeedSlider:FindFirstChild("Handle").Position.X.Offset * 0.04 + 1
        config.CarSpeed = BotSpeedSlider:FindFirstChild("Handle").Position.X.Offset * -2.5 - 100
        config.killAuraRange = KillAuraSpeedSlider:FindFirstChild("Handle").Position.X.Offset * 2.75 + 50
        save()
        wait()
    end
end)()
        

local rayDirection = Vector3.new(0, -3000, 0)
local rayDirection1 = Vector3.new(0, 3000, 0)

local Positions = {
    Vector3.new(740, 500, 1062),
}

function GetTombStatus()
    local Wall = nil
    if game.Workspace.RobberyTomb.Entrance.Doors:FindFirstChild("Door") then
        Wall = game.Workspace.RobberyTomb.Entrance.Doors:GetChildren()[2].InnerModel.Wall
    else
        return false
    end

    if Wall.Position.X < 535 then
        return true
    else
        return false
    end
end

function GetMansionStatus()
    local Door = game:GetService("Workspace").MansionRobbery.Lobby.EntranceElevator.Floors:GetChildren()[1].DoorLeft.InnerModel.Door

    if Door.Position.X > 3201 then
        return true
    else
        return false
    end
end

function GetBankStatus()
    local BankStatus = nil
    if #(game.Workspace.Banks:GetChildren()) > 0 then
        BankStatus = game:GetService("Workspace").Banks:GetChildren()[1].Extra.Sign.Decal
    else
        return false
    end
    if BankStatus.Transparency == 0 then
        return false
    else
        return true
    end
end

function GetJewelStatus()
    local JewelryStatus = nil
    if #(game.Workspace.Jewelrys:GetChildren()) > 0 then
        JewelryStatus = game.Workspace.Jewelrys:GetChildren()[1].Extras.Sign.Decal
    else
        return false
    end
    if JewelryStatus.Transparency == 0 then
        return false
    else
        return true
    end
end

function GetRobbingJewel()
    local Wall = game:GetService("Workspace"):FindFirstChild("Jewelrys"):GetChildren()[1].Wall.SecurityWall
    if Wall.Position.Y < 50 then
        return true
    else
        return false
    end
end

function GetMuseumStatus(parameters)
    local RoofPart = game.Workspace.Museum.Roof.Hole.RoofPart

    if RoofPart.Transparency > 0.5 then
        return true
    else
        return false
    end
end

function GetCasinoStatus()

    if not game.Workspace:FindFirstChild("Casino") then
        return false
    end
    local codes = {}
    local open = false

    for k, v in pairs(game.Workspace.Casino.RobberyDoor.Codes:GetChildren()) do
        codes[k] = v
    end
    

    for k, v in pairs(codes) do
        local CodeKids = codes[k]:GetChildren()


        local Label = CodeKids[1]:GetChildren()[1]:GetChildren()[1]

        local MinX = -99999
        local MinZ = -99999
        local Pos = {}

        if Label.Text ~= "" then
            open = true
            break
        end
    end

    if open then
        return true
    else
        return false
    end
end

function respawn(prisoner)

    if respawning then
        return
    end

    respawning = true

    while not Bot.Character or (Bot.Character and Bot.Character.Humanoid and Bot.Character.Humanoid.Health == 0) do
        wait(0.1)
    end

    wait(1)

    if not prisoner then
        if Bot.Character:FindFirstChild("HumanoidRootPart") and (Vector3.new(2009, 20, -2538) - Bot.Character.HumanoidRootPart.Position).magnitude < 5 then
            pathMove(Vector3.new(2102, 20, -2556))
            if reset then return end
            pathMove(Vector3.new(2214, 20, -2459))
            if reset then return end
            pathMove(Vector3.new(2282, 20, -2065))
            if reset then return end
        end

        if Bot.Character:FindFirstChild("HumanoidRootPart") and (Vector3.new(2141, 20, -2527) - Bot.Character.HumanoidRootPart.Position).magnitude < 5 then
            pathMove(Vector3.new(2211, 20, -2459))
            if reset then return end
            pathMove(Vector3.new(2282, 20, -2065))
            if reset then return end
        end

        if Bot.Character:FindFirstChild("HumanoidRootPart") and (Vector3.new(-234, 20, 1575) - Bot.Character.HumanoidRootPart.Position).magnitude < 5 then
            pathMove(Vector3.new(-246, 20, 1621))
            if reset then return end
        end

        if Bot.Character:FindFirstChild("HumanoidRootPart") and (Vector3.new(-246, 20, 1579) - Bot.Character.HumanoidRootPart.Position).magnitude < 5 then
            pathMove(Vector3.new(-246, 20, 1621))
            if reset then return end
        end

        if Bot.Character:FindFirstChild("HumanoidRootPart") and (Vector3.new(2213, 20, -2658) - Bot.Character.HumanoidRootPart.Position).magnitude < 5 then
            pathMove(Vector3.new(2176, 20, -2690))
            if reset then return end
            pathMove(Vector3.new(2069, 20, -3174))
            if reset then return end
        end

        if Bot.Character:FindFirstChild("HumanoidRootPart") and (Vector3.new(2135, 20, -2651) - Bot.Character.HumanoidRootPart.Position).magnitude < 5 then
            pathMove(Vector3.new(2176, 20, -2690))
            if reset then return end
            pathMove(Vector3.new(2069, 20, -3174))
            if reset then return end
        end

        if Bot.Character:FindFirstChild("HumanoidRootPart") and (Vector3.new(2103, 20, -2606) - Bot.Character.HumanoidRootPart.Position).magnitude < 5 then
            pathMove(Vector3.new(2211, 20, -2459))
            if reset then return end
            pathMove(Vector3.new(2282, 20, -2065))
            if reset then return end
        end

        if Bot.Character:FindFirstChild("HumanoidRootPart") and (Vector3.new(2073, 20, -2551) - Bot.Character.HumanoidRootPart.Position).magnitude < 5 then
            pathMove(Vector3.new(2211, 20, -2459))
            if reset then return end
            pathMove(Vector3.new(2282, 20, -2065))
            if reset then return end
        end

        if Bot.Character:FindFirstChild("HumanoidRootPart") and (Vector3.new(733, 39, 1113) - Bot.Character.HumanoidRootPart.Position).magnitude < 5 then
            pathMove(Vector3.new(722, 39, 1077))
            if reset then return end
        end

        if Bot.Character:FindFirstChild("HumanoidRootPart") and (Vector3.new(733, 39, 1113) - Bot.Character.HumanoidRootPart.Position).magnitude < 5 then
            pathMove(Vector3.new(722, 39, 1077))
            if reset then return end
        end

        if Bot.Character:FindFirstChild("HumanoidRootPart") and (Vector3.new(227, 63, 1132) - Bot.Character.HumanoidRootPart.Position).magnitude < 5 then
            pathMove(Vector3.new(215, 63, 1116))
            if reset then return end
            pathMove(Vector3.new(175, 63, 1113))
            if reset then return end
        end

        if Bot.Character:FindFirstChild("HumanoidRootPart") and (Vector3.new(-1164, 19, -1593) - Bot.Character.HumanoidRootPart.Position).magnitude < 5 then
            pathMove(Vector3.new(-1193, 19, -1597))
            if reset then return end
            pathMove(Vector3.new(-1192, 19, -1617))
            if reset then return end
        end

        if Bot.Character:FindFirstChild("HumanoidRootPart") and (Vector3.new(-1402, 20, -1759) - Bot.Character.HumanoidRootPart.Position).magnitude < 5 then
            pathMove(Vector3.new(-1363, 20, -1759))
            if reset then return end
        end

        if Bot.Character:FindFirstChild("HumanoidRootPart") and (Vector3.new(-1375, 20, -1757) - Bot.Character.HumanoidRootPart.Position).magnitude < 5 then
            pathMove(Vector3.new(-1363, 20, -1759))
            if reset then return end
        end
    else
        if Bot.Character:FindFirstChild("HumanoidRootPart") and (Bot.Character.HumanoidRootPart.Position - Vector3.new(-2946, -50, 2440)).magnitude < 50 then
            pathFind(Vector3.new(-2957, -48, 2406))
            pathMove(Vector3.new(-2953, -53, 2363))
            pathMove(Vector3.new(-2956, -70, 2358))
            pathMove(Vector3.new(-2951, -65, 2329))
            pathMove(Vector3.new(-2949, -82, 2329))
            pathMove(Vector3.new(-2947, -75, 2301))
            pathMove(Vector3.new(-2946, -71, 2300))
            pathMove(Vector3.new(-2940, -63, 2258))
        else
            if Bot.Character:FindFirstChild("HumanoidRootPart") and Bot.Character.HumanoidRootPart.Position.Y < -20 then
                pathFind(Vector3.new(-1395, -25, -1947))
                if reset then return end
                pathMove(Vector3.new(-1396, -24, -1931))
                if reset then return end
                pathMove(Vector3.new(-1453, 0, -1930))
                if reset then return end
                pathMove(Vector3.new(-1453, 0, -1952))
                if reset then return end
                pathMove(Vector3.new(-1483, 0, -1952))
                if reset then return end
            else
                pathFind(Vector3.new(-1482, -1, -1948))
                if reset then return end
            end


            pathMove(Vector3.new(-1484, 19, -1908))
            if reset then return end
            pathMove(Vector3.new(-1485, 19, -1756))
            if reset then return end
            pathMove(Vector3.new(-1448, 19, -1730))
            if reset then return end
            pathMove(Vector3.new(-1351, 19, -1732))
            if reset then return end
        end
    end

    wait(1)
    
    RobbingLocation = false
    respawning = false

    local plrUtils = game:GetService("ReplicatedStorage").Game.PlayerUtils
    local oldHasKey = require(plrUtils).hasKey
    require(plrUtils).hasKey = function() 
        return true
    end
end

function GetPos(location)
    local ClosestDistance = nil
    local MinDistance = math.huge
    for k, v in pairs(Positions) do
        if (v - location).Magnitude + 5 <= MinDistance then
            local IgnorePos = false
            for k, l in pairs(game:GetService("Workspace").Vehicles:GetChildren()) do
                if l.Name == "Jeep" or l.Name == "Camaro" then
                    if (Vector3.new(l.Engine.Position.X, 500, l.Engine.Position.Z) - v).magnitude < 50 then
                        if (Vector3.new(l.Engine.Position.X, 500, l.Engine.Position.Z) - v).magnitude > 5 then
                            IgnorePos = true
                        end
                    end
                end
            end
            if not IgnorePos then
                MinDistance = (v - location).Magnitude
                ClosestDistance = v
            end
        end
    end
    for k, v in pairs(game:GetService("Workspace").Vehicles:GetChildren()) do
        if v.Name == "Jeep" or v.Name == "Camaro" then
            if v.Seat.PlayerName.Value == "" then

                local rayOrigin = v.Seat.Position + Vector3.new(0, 5, 0)
                local ray = Ray.new(rayOrigin, rayDirection1)
                local rain = game:GetService("Workspace"):FindFirstChild("Rain")
                if rain ~= nil then
                    local ignoreStuff = {rain.RainDroplets, rain.RainFall}
                    if platform ~= nil then
                        table.insert(ignoreStuff, #(ignoreStuff), platform)
                    end
                    for k, v in pairs(Bot:GetDescendants()) do
                        table.insert(ignoreStuff, #(ignoreStuff), v)
                    end
                    hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
                else
                    local ignoreStuff = {}
                    if platform ~= nil then
                        table.insert(ignoreStuff, #(ignoreStuff), platform)
                    end
                    for k, v in pairs(Bot:GetDescendants()) do
                        table.insert(ignoreStuff, #(ignoreStuff), v)
                    end
                    hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
                end
                
                if hit == nil then
                    if (v.Seat.Position - location).Magnitude + 5 <= MinDistance then
                        MinDistance = (v.Seat.Position - location).Magnitude
                        ClosestDistance = v.Seat.Position
                    end
                end
            end
        end
    end
    return ClosestDistance
end

function BotMove(location, LocationName, teleporting)

    Car = nil

    for i,v in pairs(game:GetService("Workspace").Vehicles:GetChildren()) do
        if pcall(function() return v.Seat.PlayerName end) then
            if v.Seat.PlayerName.Value == Bot.Name then
                Car = v
            end
        end
    end

    if platform ~= nil then
        platform:Destroy()
    end

    wait(0.1)

    if Car == nil and Bot.Team.Name ~= "Prisoner" then
        if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
        local rayOrigin = Bot.Character.HumanoidRootPart.Position + Vector3.new(0, -2, 0)
        local ray = Ray.new(rayOrigin, rayDirection)
        local rain = game:GetService("Workspace"):FindFirstChild("Rain")
        if rain ~= nil then
            local ignoreStuff = {rain.RainDroplets, rain.RainFall}
            if platform ~= nil then
                table.insert(ignoreStuff, #(ignoreStuff), platform)
            end
            for k, v in pairs(Bot:GetDescendants()) do
                table.insert(ignoreStuff, #(ignoreStuff), v)
            end
            hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
        else
            local ignoreStuff = {}
            if platform ~= nil then
                table.insert(ignoreStuff, #(ignoreStuff), platform)
            end
            for k, v in pairs(Bot:GetDescendants()) do
                table.insert(ignoreStuff, #(ignoreStuff), v)
            end
            hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
        end
        if hit ~= nil then
            if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
            Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, pos.Y, Bot.Character.HumanoidRootPart.CFrame.Z)
            wait(0.5)
        else
            if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
            Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, 300, Bot.Character.HumanoidRootPart.CFrame.Z)
            local rayDirection2 = Vector3.new(0, -1, 0)
            while hit == nil do
                if reset then return end
                rayOrigin = Bot.Character.HumanoidRootPart.Position + Vector3.new(0, -2, 0)
                ray = Ray.new(rayOrigin, rayDirection2)
                rain = game:GetService("Workspace"):FindFirstChild("Rain")
                if rain ~= nil then
                    ignoreStuff = {rain.RainDroplets, rain.RainFall}
                    if platform ~= nil then
                        table.insert(ignoreStuff, #(ignoreStuff), platform)
                    end
                    for k, v in pairs(Bot:GetDescendants()) do
                        table.insert(ignoreStuff, #(ignoreStuff), v)
                    end
                    hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
                else
                    local ignoreStuff = {}
                    if platform ~= nil then
                        table.insert(ignoreStuff, #(ignoreStuff), platform)
                    end
                    for k, v in pairs(Bot:GetDescendants()) do
                        table.insert(ignoreStuff, #(ignoreStuff), v)
                    end
                    hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
                end
                wait()
            end
        end
        if reset then return end
        Bot.Character.HumanoidRootPart.Velocity = Vector3.new()

        local args = {
        [1] = "Chassis",
        [2] = "Jeep"
        }
        game:GetService("ReplicatedStorage").GarageSpawnVehicle:FireServer(unpack(args))
    end

    wait(2)

    if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
    for i,v in pairs(game:GetService("Workspace").Vehicles:GetChildren()) do
        if pcall(function() return v.Seat.PlayerName end) then
            if v.Seat.PlayerName.Value == Bot.Name then
                Car = v
            end
        end
    end
    if reset then return end

    while Car == nil do
        if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, 500, Bot.Character.HumanoidRootPart.CFrame.Z)
        wait(1)
        if reset then return end
        if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
        move(GetPos(Bot.Character.HumanoidRootPart.Position))
        if reset then return end

        local rayOrigin = Bot.Character.HumanoidRootPart.Position + Vector3.new(0, -2, 0)
        local ray = Ray.new(rayOrigin, rayDirection)
        local rain = game:GetService("Workspace"):FindFirstChild("Rain")
        if rain ~= nil then
            ignoreStuff = {rain.RainDroplets, rain.RainFall}
            if platform ~= nil then
                table.insert(ignoreStuff, #(ignoreStuff), platform)
            end
            for k, v in pairs(Bot:GetDescendants()) do
                table.insert(ignoreStuff, #(ignoreStuff), v)
            end
            hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
        else
            local ignoreStuff = {}
            if platform ~= nil then
                table.insert(ignoreStuff, #(ignoreStuff), platform)
            end
            for k, v in pairs(Bot:GetDescendants()) do
                table.insert(ignoreStuff, #(ignoreStuff), v)
            end
            hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
        end

        if reset then return end
        if hit ~= nil then
            if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
            Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, pos.Y, Bot.Character.HumanoidRootPart.CFrame.Z)
            wait(0.5)
        else
            if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
            Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, 300, Bot.Character.HumanoidRootPart.CFrame.Z)
            local rayDirection2 = Vector3.new(0, -1, 0)
            while hit == nil do
                if reset then return end
                rayOrigin = Bot.Character.HumanoidRootPart.Position + Vector3.new(0, -2, 0)
                ray = Ray.new(rayOrigin, rayDirection2)
                rain = game:GetService("Workspace"):FindFirstChild("Rain")
                if rain ~= nil then
                    ignoreStuff = {rain.RainDroplets, rain.RainFall}
                    if platform ~= nil then
                        table.insert(ignoreStuff, #(ignoreStuff), platform)
                    end
                    for k, v in pairs(Bot:GetDescendants()) do
                        table.insert(ignoreStuff, #(ignoreStuff), v)
                    end
                    hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
                else
                    local ignoreStuff = {}
                    if platform ~= nil then
                        table.insert(ignoreStuff, #(ignoreStuff), platform)
                    end
                    for k, v in pairs(Bot:GetDescendants()) do
                        table.insert(ignoreStuff, #(ignoreStuff), v)
                    end
                    hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
                end
                wait()
            end
        end
        if reset then return end
        if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
        Bot.Character.HumanoidRootPart.Velocity = Vector3.new()

        local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
        for i,v in pairs (UI.CircleAction.Specs) do
            if v.Name == "Hijack" then
                if v.Part.Parent.Name == "Camaro" or v.Part.Parent.Name == "Jeep" then
                    v.Duration = 0
                    v.Timed = true
                    v:Callback(v, true)
                end
            end
        end

        wait(0.5)
        if reset then return end

        local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
        for i,v in pairs (UI.CircleAction.Specs) do
            if v.Name == "Enter Driver" then
                if reset then return end
                if v.Part.Parent.Name == "Camaro" or v.Part.Parent.Name == "Jeep" then
                    local rayOrigin = v.Part.Position + Vector3.new(0, 10, 0)
                    local ray = Ray.new(rayOrigin, rayDirection1)
                    local rain = game:GetService("Workspace"):FindFirstChild("Rain")
                    if rain ~= nil then
                        local ignoreStuff = {rain.RainDroplets, rain.RainFall}
                        if platform ~= nil then
                            table.insert(ignoreStuff, #(ignoreStuff), platform)
                        end
                        for k, v in pairs(Bot:GetDescendants()) do
                            table.insert(ignoreStuff, #(ignoreStuff), v)
                        end
                        hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
                    else
                        local ignoreStuff = {}
                        if platform ~= nil then
                            table.insert(ignoreStuff, #(ignoreStuff), platform)
                        end
                        for k, v in pairs(Bot:GetDescendants()) do
                            table.insert(ignoreStuff, #(ignoreStuff), v)
                        end
                        hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
                    end
                    if hit == nil then
                        v:Callback(v, true)
                    end
                end
            end
        end

        wait(0.5)
        if reset then return end
        
        for i,v in pairs(game:GetService("Workspace").Vehicles:GetChildren()) do
            if pcall(function() return v.Seat.PlayerName end) then
                if v.Seat.PlayerName.Value == Bot.Name then
                    Car = v
                end
            end
        end

        if reset then return end
    end

    local position = Vector3.new(0, 0, 0)
    local distance = 100

    if teleporting then
        while (game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position - position).magnitude > distance do
            if LocationName == "museum" then
                for i = 1, 30 do
                    if reset then return end
                    Car.Engine:PivotTo(CFrame.new(1121, 116, 1296))
                    task.wait(0.01)
                end
                position = Vector3.new(1121, 116, 1296)
                distance = 500
                wait(0.01)
            end
            if LocationName == "bank" then
                for i = 1, 30 do
                    if reset then return end
                    Car.Engine:PivotTo(CFrame.new(37, 25, 864))
                    task.wait(0.01)
                end
                position = Vector3.new(37, 25, 864)
                wait(0.01)
            end
            if LocationName == "mansion" then
                for i = 1, 30 do
                    if reset then return end
                    Car.Engine:PivotTo(CFrame.new(3197, 63, -4655))
                    task.wait(0.01)
                end
                position = Vector3.new(3197, 63, -4655)
                wait(0.01)
            end
            if LocationName == "jewelry store" then
                for i = 1, 30 do
                    if reset then return end
                    Car.Engine:PivotTo(CFrame.new(131, 19, 1304))
                    task.wait(0.01)
                end
                position = Vector3.new(131, 19, 1304)
                wait(0.01)
            end
            if LocationName == "tomb" then
                for i = 1, 30 do
                    if reset then return end
                    Car.Engine:PivotTo(CFrame.new(544, 27, -501))
                    task.wait(0.01)
                end 
                position = Vector3.new(544, 26, -522)
                wait(0.01)
            end
            if LocationName == "casino vault" then
                for i = 1, 30 do
                    if reset then return end
                    Car.Engine:PivotTo(CFrame.new(250, -74, -4527))
                    task.wait(0.01)
                end
                position = Vector3.new(250, -74, -4527)
                wait(0.01)
            end
            if LocationName == "casino security" then
                for i = 1, 30 do
                    if reset then return end
                    Car.Engine:PivotTo(CFrame.new(-99, 71, -4707))
                    task.wait(0.01)
                end
                position = Vector3.new(-99, 71, -4707)
                wait(0.01)
            end
            wait(2)
            if reset then return end
        end
        return
    end
    if reset then return end
    Car.Engine.CFrame = CFrame.new(Car.Engine.CFrame.X, 500, Car.Engine.CFrame.Z)
    wait(1)
    if reset then return end
    if LocationName ~= "Train" then
        while (Vector3.new(Car.Engine.Position.X, 500, Car.Engine.Position.Z) - location).magnitude > 11 do 
            if reset then return end
            move(location)
            if reset then return end
            if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
            wait()
        end
    else
        for k, v in pairs(game.Workspace.Trains:GetChildren()) do
            if string.sub(v.Name, 1, 6) == "BoxCar" then
                location = v
                break
            end
        end
        if reset then return end
        if location == nil then return end
        local rayOrigin = location.Model.Rob.Gold.Position + Vector3.new(0, 10, 0)
        local rayDirection2 = Vector3.new(0, 300, 0)
        local ray = Ray.new(rayOrigin, rayDirection2)
        local rain = game:GetService("Workspace"):FindFirstChild("Rain")
        if rain ~= nil then
            local ignoreStuff = {rain.RainDroplets, rain.RainFall}
            if platform ~= nil then
                table.insert(ignoreStuff, #(ignoreStuff), platform)
            end
            for k, v in pairs(Bot:GetDescendants()) do
                table.insert(ignoreStuff, #(ignoreStuff), v)
            end
            for k, v in pairs(Car:GetDescendants()) do
                table.insert(ignoreStuff, #(ignoreStuff), v)
            end
            hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
        else
            local ignoreStuff = {}
            if platform ~= nil then
                table.insert(ignoreStuff, #(ignoreStuff), platform)
            end
            for k, v in pairs(Bot:GetDescendants()) do
                table.insert(ignoreStuff, #(ignoreStuff), v)
            end
            for k, v in pairs(Car:GetDescendants()) do
                table.insert(ignoreStuff, #(ignoreStuff), v)
            end
            hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
        end
        while location and location:FindFirstChild("Model") and (hit ~= nil or (Vector3.new(Car.Engine.Position.X, 500, Car.Engine.Position.Z) - Vector3.new(location.Model.Rob.Gold.Position.X, 500, location.Model.Rob.Gold.Position.Z)).magnitude > 11) do 
            if not location then return end
            if not location:FindFirstChild("Model") then return end
            if reset then return end
            move(Vector3.new(0, 0, 0), location.Model.Rob.Gold)
            if not location then return end
            if not location:FindFirstChild("Model") then return end
            rayOrigin = location.Model.Rob.Gold.Position + Vector3.new(0, 10, 0)
            ray = Ray.new(rayOrigin, rayDirection2)
            rain = game:GetService("Workspace"):FindFirstChild("Rain")
            if rain ~= nil then
                ignoreStuff = {rain.RainDroplets, rain.RainFall}
                if platform ~= nil then
                    table.insert(ignoreStuff, #(ignoreStuff), platform)
                end
                for k, v in pairs(Bot:GetDescendants()) do
                    table.insert(ignoreStuff, #(ignoreStuff), v)
                end
                for k, v in pairs(Car:GetDescendants()) do
                    table.insert(ignoreStuff, #(ignoreStuff), v)
                end
                hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
            else
                local ignoreStuff = {}
                if platform ~= nil then
                    table.insert(ignoreStuff, #(ignoreStuff), platform)
                end
                for k, v in pairs(Bot:GetDescendants()) do
                    table.insert(ignoreStuff, #(ignoreStuff), v)
                end
                for k, v in pairs(Car:GetDescendants()) do
                    table.insert(ignoreStuff, #(ignoreStuff), v)
                end
                hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
            end
            if reset then return end
            if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
            wait()
        end
    end
    if reset then return end
    if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
    local rayOrigin = Bot.Character.HumanoidRootPart.Position + Vector3.new(0, -5, 0)
    local ray = Ray.new(rayOrigin, rayDirection)
    local rain = game:GetService("Workspace"):FindFirstChild("Rain")
    if rain ~= nil then
        ignoreStuff = {rain.RainDroplets, rain.RainFall}
        if platform ~= nil then
            table.insert(ignoreStuff, #(ignoreStuff), platform)
        end
        for k, v in pairs(Bot:GetDescendants()) do
            table.insert(ignoreStuff, #(ignoreStuff), v)
        end
        hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
    else
        local ignoreStuff = {}
        if platform ~= nil then
            table.insert(ignoreStuff, #(ignoreStuff), platform)
        end
        for k, v in pairs(Bot:GetDescendants()) do
            table.insert(ignoreStuff, #(ignoreStuff), v)
        end
        hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
    end
    if reset then return end
    if hit ~= nil then
        Car.Engine.CFrame = CFrame.new(Car.Engine.CFrame.X, pos.Y, Car.Engine.CFrame.Z)
    else
        Car.Engine.CFrame = CFrame.new(Car.Engine.CFrame.X, 300, Car.Engine.CFrame.Z)
        local rayDirection2 = Vector3.new(0, -1, 0)
        while hit == nil do
            if reset then return end
            if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
            rayOrigin = Bot.Character.HumanoidRootPart.Position + Vector3.new(0, -3, 0)
            ray = Ray.new(rayOrigin, rayDirection2)
            rain = game:GetService("Workspace"):FindFirstChild("Rain")
            if rain ~= nil then
                ignoreStuff = {rain.RainDroplets, rain.RainFall}
                if platform ~= nil then
                    table.insert(ignoreStuff, #(ignoreStuff), platform)
                end
                for k, v in pairs(Bot:GetDescendants()) do
                    table.insert(ignoreStuff, #(ignoreStuff), v)
                end
                hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
            else
                local ignoreStuff = {}
                if platform ~= nil then
                    table.insert(ignoreStuff, #(ignoreStuff), platform)
                end
                for k, v in pairs(Bot:GetDescendants()) do
                    table.insert(ignoreStuff, #(ignoreStuff), v)
                end
                hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
            end
            wait()
        end
    end

    Car.Engine.Velocity = Vector3.new()
    

    if LocationName == "volcano base" then
        wait(0.5)
        pathMove(Vector3.new(2275, 25, -2024))
        if reset then return end
        pathMove(Vector3.new(2204, 25, -2479))
        if reset then return end
        pathMove(Vector3.new(2289, 25, -2584))
        if reset then return end
        wait(1)
        if reset then return end
        pathMove(Vector3.new(2204, 25, -2479))
        if reset then return end
        pathMove(Vector3.new(2275, 25, -2024))
        if reset then return end
    end

    wait(0.5)
end

function move(pos, object)

    local Car = nil
    for i,v in pairs(game:GetService("Workspace").Vehicles:GetChildren()) do
        if pcall(function() return v.Seat.PlayerName end) then
            if v.Seat.PlayerName.Value == Bot.Name then
                Car = v
            end
        end
    end

    local moveTime = 0
    if object == nil then
        if Car == nil then
            pos = Vector3.new(pos.X, 500, pos.Z)
            if reset then return end
            if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
            Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.Position.X, 500, Bot.Character.HumanoidRootPart.Position.Z)
            while Bot.Character:FindFirstChild("HumanoidRootPart") and (Vector3.new(Bot.Character.HumanoidRootPart.Position.X, 500, Bot.Character.HumanoidRootPart.Position.Z) - pos).magnitude > 5 do
                if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
                local amount = (Bot.Character.HumanoidRootPart.Position - pos).magnitude
                local velocity = (Bot.Character.HumanoidRootPart.Position - pos) / amount
                Bot.Character.HumanoidRootPart.Velocity = Vector3.new(velocity.X * config.FlySpeed, 0.1, velocity.Z * config.FlySpeed)
                Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.Position.X, 500, Bot.Character.HumanoidRootPart.Position.Z)
                wait()
                moveTime += 0.03
                if moveTime > 30 then
                    LogMessage("possibly stuck, ressetting")
                    Bot.Character.Humanoid.Health = 0
                    exitCar.OnJump()
                    return
                end
                if reset then return end
            end
            if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
            Bot.Character.HumanoidRootPart.CFrame = CFrame.new(pos)
            Bot.Character.HumanoidRootPart.Velocity = Vector3.new()
        else
            pos = Vector3.new(pos.X, 500, pos.Z)
            if reset then return end
            if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
            Car.Engine.CFrame = CFrame.new(Car.Engine.Position.X, 500, Car.Engine.Position.Z)
            while (Vector3.new(Car.Engine.Position.X, 500, Car.Engine.Position.Z) - pos).magnitude > 10 do
                if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
                local amount = (Car.Engine.Position - pos).magnitude
                local velocity = (Car.Engine.Position - pos) / amount
                Car.Engine.Velocity = Vector3.new(velocity.X * config.CarSpeed, 0.1, velocity.Z * config.CarSpeed)
                Car.Engine.CFrame = CFrame.new(Car.Engine.Position.X, 500, Car.Engine.Position.Z)
                wait()
                moveTime += 0.03
                if moveTime > 30 then
                    LogMessage("possibly stuck, ressetting")
                    Bot.Character.Humanoid.Health = 0
                    exitCar.OnJump()
                    return
                end
                if reset then return end
            end
            if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
            Car.Engine.CFrame = CFrame.new(pos)
            Car.Engine.Velocity = Vector3.new()
        end
    else
        if Car == nil then
            if reset then return end
            if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
            Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.Position.X, 500, Bot.Character.HumanoidRootPart.Position.Z)
            while Bot.Character:FindFirstChild("HumanoidRootPart") and (Vector3.new(Bot.Character.HumanoidRootPart.Position.X, 500, Bot.Character.HumanoidRootPart.Position.Z) - Vector3.new(object.Position.X, 500, object.Position.Z)).magnitude > 5 do
                if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
                local amount = (Bot.Character.HumanoidRootPart.Position - Vector3.new(object.Position.X, 500, object.Position.Z)).magnitude
                local velocity = (Bot.Character.HumanoidRootPart.Position - Vector3.new(object.Position.X, 500, object.Position.Z)) / amount
                Bot.Character.HumanoidRootPart.Velocity = Vector3.new(velocity.X * config.FlySpeed, 0.1, velocity.Z * config.FlySpeed)
                Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.Position.X, 500, Bot.Character.HumanoidRootPart.Position.Z)
                wait()
                moveTime += 0.03
                if moveTime > 30 then
                    LogMessage("possibly stuck, ressetting")
                    Bot.Character.Humanoid.Health = 0
                    exitCar.OnJump()
                    return
                end
                if reset then return end
            end
            if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
            Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(object.Position.X, 500, object.Position.Z))
            Bot.Character.HumanoidRootPart.Velocity = Vector3.new()
        else
            if reset then return end
            if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
            Car.Engine.CFrame = CFrame.new(Car.Engine.Position.X, 500, Car.Engine.Position.Z)
            while (Vector3.new(Car.Engine.Position.X, 500, Car.Engine.Position.Z) - Vector3.new(object.Position.X, 500, object.Position.Z)).magnitude > 10 do
                if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
                local amount = (Car.Engine.Position - Vector3.new(object.Position.X, 500, object.Position.Z)).magnitude
                local velocity = (Car.Engine.Position - Vector3.new(object.Position.X, 500, object.Position.Z)) / amount
                Car.Engine.Velocity = Vector3.new(velocity.X * config.CarSpeed, 0.1, velocity.Z * config.CarSpeed)
                Car.Engine.CFrame = CFrame.new(Car.Engine.Position.X, 500, Car.Engine.Position.Z)
                wait()
                moveTime += 0.03
                if moveTime > 30 then
                    LogMessage("possibly stuck, ressetting")
                    Bot.Character.Humanoid.Health = 0
                    exitCar.OnJump()
                    return
                end
                if reset then return end
            end
            if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
            Car.Engine.CFrame = CFrame.new(Vector3.new(object.Position.X, 500, object.Position.Z))
            Car.Engine.Velocity = Vector3.new()
        end
    end
end

function pathFind(pos)

    local PathFindingService = game:GetService("PathfindingService")
    local human = game.Players.LocalPlayer.Character.Humanoid
    local torso = game.Players.LocalPlayer.Character.HumanoidRootPart

    local path = PathFindingService:CreatePath()
    path:ComputeAsync(torso.Position, pos)
    local Waypoints = path:GetWaypoints()

    for i, Waypoint in pairs(Waypoints) do
        pathFindMove(Waypoint.Position + Vector3.new(0, 2, 0))
    end
end

function pathFindMove(pos)

    if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
    while Bot.Character:FindFirstChild("HumanoidRootPart") and (Bot.Character.HumanoidRootPart.Position - pos).magnitude > 1 do
        if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
        local amount = (Bot.Character.HumanoidRootPart.Position - pos).magnitude
        local MoveDist = (Bot.Character.HumanoidRootPart.Position - pos) / amount
        for i = 1, amount, 1 do
            if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
            Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.Position - MoveDist)
            Bot.Character.HumanoidRootPart.Velocity = Vector3.new(0,1.005,0)
            wait()
            if reset then return end
        end
        wait(0.1)
    end
    if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
    Bot.Character.HumanoidRootPart.CFrame = CFrame.new(pos)
end

function pathMove(pos)

    local Car = nil
    if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
    for i,v in pairs(game:GetService("Workspace").Vehicles:GetChildren()) do
        if pcall(function() return v.Seat.PlayerName end) then
            if v.Seat.PlayerName.Value == Bot.Name then
                Car = v
            end
        end
    end

    local moveTime = 0
    if Car == nil then
        if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
        while Bot.Character:FindFirstChild("HumanoidRootPart") and (Bot.Character.HumanoidRootPart.Position - pos).magnitude > 5 do
            if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
            local amount = (Bot.Character.HumanoidRootPart.Position - pos).magnitude / (config.GroundSpeed / 2)
            local MoveDist = (Bot.Character.HumanoidRootPart.Position - pos) / amount
            for i = 1, amount, 1 do
                if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
                Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.Position - MoveDist)
                Bot.Character.HumanoidRootPart.Velocity = Vector3.new(0,1.005,0)
                wait()
                moveTime += 0.03
                if moveTime > 15 then
                    LogMessage("possibly stuck, ressetting")
                    Bot.Character.Humanoid.Health = 0
                    exitCar.OnJump()
                    return
                end
                if reset then return end
            end
            wait(0.1)
            moveTime += 0.1
        end
        if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(pos)
    else
        if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
        while (Car.Engine.Position - pos).magnitude > 5 do
            if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
            local amount = (Car.Engine.Position - pos).magnitude / (config.GroundSpeed / 2)
            local MoveDist = (Car.Engine.Position - pos) / amount
            for i = 1, amount, 1 do
                if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
                Car.Engine.CFrame = CFrame.new(Car.Engine.Position - MoveDist)
                Car.Engine.Velocity = Vector3.new(0,1.005,0)
                wait()
                moveTime += 0.03
                if moveTime > 15 then
                    LogMessage("possibly stuck, ressetting")
                    Bot.Character.Humanoid.Health = 0
                    exitCar.OnJump()
                    return
                end
                if reset then return end
            end
            wait(0.1)
            moveTime += 0.1
        end
        if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
        Car.Engine.CFrame = CFrame.new(pos)
    end
end

coroutine.wrap(function()
    while true do
        if GetMansionStatus() then
            Mansion.TextColor3 = Color3.fromRGB(0, 255, 0)
        else
            Mansion.TextColor3 = Color3.fromRGB(255, 0, 0)
        end
        if GetMuseumStatus() then
            Museum.TextColor3 = Color3.fromRGB(0, 255, 0)
        else
            Museum.TextColor3 = Color3.fromRGB(255, 0, 0)
        end
        if GetBankStatus() then
            Bank.TextColor3 = Color3.fromRGB(0, 255, 0)
        else
            Bank.TextColor3 = Color3.fromRGB(255, 0, 0)
        end
        if GetJewelStatus() then
            Jewel.TextColor3 = Color3.fromRGB(0, 255, 0)
        else
            Jewel.TextColor3 = Color3.fromRGB(255, 0, 0)
        end
        if GetCasinoStatus() then
            Casino.TextColor3 = Color3.fromRGB(0, 255, 0)
        else
            Casino.TextColor3 = Color3.fromRGB(255, 0, 0)
        end
        if GetTombStatus() then
            Tomb.TextColor3 = Color3.fromRGB(0, 255, 0)
        else
            Tomb.TextColor3 = Color3.fromRGB(255, 0, 0)
        end

        local robPlane = false
        if game.Workspace:FindFirstChild("Plane") and not config.safe then
            if game.Workspace.Plane:FindFirstChild("CargoPlane") then
                if game.Workspace.Plane.CargoPlane.Position.X > -1150 then
                    for k, v in pairs(game.Workspace.Plane.Crates:GetChildren()) do
                        if v:GetChildren()[1].Transparency < 1 then
                            robPlane = true
                        end
                    end
                end
            end
        end

        if robPlane then
            Plane.TextColor3 = Color3.fromRGB(0, 255, 0)
        else
            Plane.TextColor3 = Color3.fromRGB(255, 0, 0)
        end

        if game.Workspace:FindFirstChild("Drop") then
            Drop.TextColor3 = Color3.fromRGB(0, 255, 0)
        else
            Drop.TextColor3 = Color3.fromRGB(255, 0, 0)
        end

        local robTrain = false
        for k, v in pairs(game.Workspace.Trains:GetChildren()) do
            if string.sub(v.Name, 1, 6) == "BoxCar" then
                robTrain = true
                break
            end
        end

        if robTrain then
            Train.TextColor3 = Color3.fromRGB(0, 255, 0)
        else
            Train.TextColor3 = Color3.fromRGB(255, 0, 0)
        end
        wait(0.1)
    end
end)()

local robbedMuseum = false
local robbedBank = false
local robbedJewel = false
local robbedCasino = false
local robbedTomb = false
local robbedPlane = false
local robbedTrain = false

function robLocation()
    if RobbingLocation then
        return
    end

    local robPlane = false
    if config.PlaneToggled then
        if game.Workspace:FindFirstChild("Plane") and not config.safe then
            if game.Workspace.Plane:FindFirstChild("CargoPlane") then
                if game.Workspace.Plane.CargoPlane.Position.X > 0 then
                    for k, v in pairs(game.Workspace.Plane.Crates:GetChildren()) do
                        if v:GetChildren()[1].Transparency < 1 then
                            robPlane = true
                        end
                    end
                end
            end
        end
    end

    if robPlane then
        if not robbedPlane then
            RobbingLocation = true
            LogMessage("robbing cargo plane")
            RobPlane()
            return
        end
    else
        robbedPlane = false
    end

    local robTrain = false
    for k, v in pairs(game.Workspace.Trains:GetChildren()) do
        if string.sub(v.Name, 1, 6) == "BoxCar" then
            robTrain = true
            break
        end
    end

    if robTrain then
        if not robbedTrain and config.TrainToggled then
            RobbingLocation = true
            LogMessage("robbing cargo train")
            RobTrain()
            return
        end
    else
        robbedTrain = false
    end

    if config.MansionToggled then
        if GetMansionStatus() and Bot.Folder:FindFirstChild("MansionInvite") then
            RobbingLocation = true
            LogMessage("robbing mansion")
            RobMansion()
            return
        end
    end

    if config.MuseumToggled then
        if GetMuseumStatus() then
            if not robbedMuseum then
                RobbingLocation = true
                LogMessage("robbing museum")
                RobMuseum()
                return
            end
        else
            robbedMuseum = false
        end
    end

    if config.TombToggled then
        if GetTombStatus() then
            if not robbedTomb then
                RobbingLocation = true
                LogMessage("robbing tomb")
                RobTomb()
                return
            end
        else
            robbedTomb = false
        end
    end

    if config.BankToggled then
        if GetBankStatus() then
            if not robbedBank then
                RobbingLocation = true
                LogMessage("robbing bank")
                RobBank()
                return
            end
        else
            robbedBank = false
        end
    end

    if config.JewelToggled then
        if GetJewelStatus() then
            if not robbedJewel then
                RobbingLocation = true
                LogMessage("robbing jewelry store")
                RobJewel()
                return
            end
        else
            robbedJewel = false
        end
    end

    if config.CasinoToggled then
        if GetCasinoStatus() then
            if not robbedCasino then
                RobbingLocation = true
                LogMessage("robbing casino")
                RobCasino()
                return
            end
        else
            robbedCasino = false
        end
    end

    if config.DropToggled then
        if game.Workspace:FindFirstChild("Drop") then
            local pos = nil
            local ClosestDistance = math.huge
            local Drop = nil
            for k, v in pairs(game:GetService("Workspace"):GetChildren()) do
                if v.Name == "Drop" and v:FindFirstChild("Root") then
                    if Bot.Character:FindFirstChild("HumanoidRootPart") and (v.Root.Position - Bot.Character.HumanoidRootPart.Position).magnitude < ClosestDistance then
                        if not v:FindFirstChild("Root") then return end

                        ClosestDistance = (v.Root.Position - Bot.Character.HumanoidRootPart.Position).magnitude
                        local rayOrigin = v.Root.Position + Vector3.new(0, -2, 0)
                        local rayDirection2 = Vector3.new(0, -1, 0)
                        local ray = Ray.new(rayOrigin, rayDirection2)
                        local rain = game:GetService("Workspace"):FindFirstChild("Rain")
                        if rain ~= nil then
                            local ignoreStuff = {rain.RainDroplets, rain.RainFall}
                            if not v:FindFirstChild("Root") then return end
                            for k, l in pairs(v:GetDescendants()) do
                                if not v:FindFirstChild("Root") then return end
                                table.insert(ignoreStuff, #(ignoreStuff), l)
                            end
                            hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
                        else
                            local ignoreStuff = {}
                            if not v:FindFirstChild("Root") then return end
                            for k, l in pairs(v:GetDescendants()) do
                                if not v:FindFirstChild("Root") then return end
                                table.insert(ignoreStuff, #(ignoreStuff), l)
                            end
                            hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
                        end
                        if hit ~= nil then
                            pos = Vector3.new(v.Root.Position.X, 500, v.Root.Position.Z) + Vector3.new(5, 0, 5)
                            if not v:FindFirstChild("Root") then return end
                            Drop = v
                        end
                    end
                end
            end
            if Drop then
                LogMessage("collecting an airdrop")
                RobbingLocation = true
                RobDrop(Drop, pos)
                return
            end
        end
    end

    UpdateLog("waiting for locations to open")
end

function RobBank()
    UpdateLog("going to bank")
    if reset then return end
    BotMove(Vector3.new(-1, 500, 865), "bank", not config.safe)
    if reset then return end
    wait(1)
    exitCar.OnJump()
    wait(0.5)

    if not GetBankStatus() then
        RobbingLocation = false
        return
    end

    UpdateLog("entering bank")

    if config.safe then
        pathMove(Vector3.new(-1, 25, 865))
        if reset then return end
        pathMove(Vector3.new(37, 25, 864))
        if reset then return end
    end
    
    pathMove(Vector3.new(40, 20, 924))
    if reset then return end

    local oldPosition = Bot.Character.HumanoidRootPart.Position
    Bot.Character.HumanoidRootPart.CFrame = CFrame.new(40, 20, 907) 
    wait(0.5)
    Bot.Character.HumanoidRootPart.CFrame = CFrame.new(oldPosition)
    wait(0.1)
    pathMove(Vector3.new(40, 20, 924))
    if reset then return end
    
    UpdateLog("going to vault")

    if game.Workspace.Banks:GetChildren()[1].Layout:FindFirstChild("02Basement") then
        
        pathMove(Vector3.new(73, 10, 919))
        if reset then return end
        pathMove(Vector3.new(86, 10, 918))
        if reset then return end
        pathMove(Vector3.new(93, 0, 964))
        if reset then return end
        pathMove(Vector3.new(47, -7, 951))
        if reset then return end
        pathMove(Vector3.new(1, -7, 959))
        if reset then return end

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        UpdateLog("collecting money")

        local oldPos = Bot.Character.HumanoidRootPart.Position
        if reset then return end
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.Banks:GetChildren()[1].Layout:GetChildren()[1].TriggerDoor.Position)
        wait(0.5)
        if reset then return end
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(oldPos)

        pathMove(Vector3.new(1, -7, 959))
        if reset then return end

        repeat 
            wait(0.1)
            local run = false
            if config.copAvoid then
                for k, v in pairs(game.Players:GetChildren()) do
                    if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                        if Bot.Character:FindFirstChild("HumanoidRootPart") and (v.Character.HumanoidRootPart.Position - Bot.Character.HumanoidRootPart.Position).magnitude < config.avoidCopRange and v.Team ~= Bot.Team then
                            run = true
                        end
                    end
                end
            end
            if run then
                break
            end
            if not GetBankStatus() then
                RobbingLocation = false
                return
            end
            if reset then return end
        until Bot.PlayerGui.RobberyMoneyGui.Enabled

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end
        
        
        repeat 
            wait(0.1)
            local run = false
            if config.copAvoid then
                for k, v in pairs(game.Players:GetChildren()) do
                    if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                        if Bot.Character:FindFirstChild("HumanoidRootPart") and (v.Character.HumanoidRootPart.Position - Bot.Character.HumanoidRootPart.Position).magnitude < config.avoidCopRange and v.Team ~= Bot.Team then
                            run = true
                        end
                    end
                end
            end
            if run then
                break
            end
            if not GetBankStatus() then
                RobbingLocation = false
                return
            end
            if reset then return end
        until string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) == string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15)

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        if config.safe then
            UpdateLog("waiting")
            wait(config.GroundSpeed * 1.5)
        end

        UpdateLog("exiting bank")

        pathMove(Vector3.new(1, -7, 959))
        if reset then return end
        pathMove(Vector3.new(47, -7, 951))
        if reset then return end
        pathMove(Vector3.new(93, 0, 964))
        if reset then return end
        pathMove(Vector3.new(86, 10, 918))
        if reset then return end
        pathMove(Vector3.new(73, 10, 919))
        if reset then return end

    end
    if game.Workspace.Banks:GetChildren()[1].Layout:FindFirstChild("03Corridor") then
        
        pathMove(Vector3.new(57, 19, 923))
        if reset then return end
        pathMove(Vector3.new(57, -7, 923))
        if reset then return end
        pathMove(Vector3.new(63, -7, 917))
        if reset then return end
        pathMove(Vector3.new(202, -7, 897))
        if reset then return end

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        UpdateLog("collecting money")

        local oldPos = Bot.Character.HumanoidRootPart.Position
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.Banks:GetChildren()[1].Layout:GetChildren()[1].TriggerDoor.Position)
        wait(0.5)
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(oldPos)

        pathMove(Vector3.new(202, -7, 897))
        if reset then return end

        repeat 
            wait(0.1)
            local run = false
            if config.copAvoid then
                for k, v in pairs(game.Players:GetChildren()) do
                    if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                        if Bot.Character:FindFirstChild("HumanoidRootPart") and (v.Character.HumanoidRootPart.Position - Bot.Character.HumanoidRootPart.Position).magnitude < config.avoidCopRange and v.Team ~= Bot.Team then
                            run = true
                        end
                    end
                end
            end
            if run then
                break
            end
            if not GetBankStatus() then
                RobbingLocation = false
                return
            end
            if reset then return end
        until Bot.PlayerGui.RobberyMoneyGui.Enabled

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end
        
        repeat 
            wait(0.1)
            local run = false
            if config.copAvoid then
                for k, v in pairs(game.Players:GetChildren()) do
                    if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                        if Bot.Character:FindFirstChild("HumanoidRootPart") and (v.Character.HumanoidRootPart.Position - Bot.Character.HumanoidRootPart.Position).magnitude < config.avoidCopRange and v.Team ~= Bot.Team then
                            run = true
                        end
                    end
                end
            end
            if run then
                break
            end
            if not GetBankStatus() then
                RobbingLocation = false
                return
            end
            if reset then return end
        until string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) == string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15)

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        if config.safe then
            UpdateLog("waiting")
            wait(config.GroundSpeed * 1.5)
        end

        UpdateLog("exiting bank")
        
        pathMove(Vector3.new(202, -7, 897))
        if reset then return end
        pathMove(Vector3.new(63, -7, 917))
        if reset then return end
        pathMove(Vector3.new(57, -7, 923))
        if reset then return end
        pathMove(Vector3.new(57, 19, 923))
        if reset then return end
    end
    if game.Workspace.Banks:GetChildren()[1].Layout:FindFirstChild("01UpperManagement") then

        pathMove(Vector3.new(84, 28, 916))
        if reset then return end
        pathMove(Vector3.new(70, 61, 835))
        if reset then return end
        pathMove(Vector3.new(27, 65, 841))
        if reset then return end
        pathMove(Vector3.new(58, 65, 882))
        if reset then return end
        pathMove(Vector3.new(38, 65, 920))
        if reset then return end
        pathMove(Vector3.new(83, 61, 920))
        if reset then return end

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        UpdateLog("collecting money")

        local oldPos = Bot.Character.HumanoidRootPart.Position
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.Banks:GetChildren()[1].Layout:GetChildren()[1].TriggerDoor.Position)
        wait(0.5)
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(oldPos)

        pathMove(Vector3.new(83, 61, 920))
        if reset then return end

        repeat 
            wait(0.1)
            local run = false
            if config.copAvoid then
                for k, v in pairs(game.Players:GetChildren()) do
                    if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                        if Bot.Character:FindFirstChild("HumanoidRootPart") and (v.Character.HumanoidRootPart.Position - Bot.Character.HumanoidRootPart.Position).magnitude < config.avoidCopRange and v.Team ~= Bot.Team then
                            run = true
                        end
                    end
                end
            end
            if run then
                break
            end
            if not GetBankStatus() then
                RobbingLocation = false
                return
            end
            if reset then return end
        until Bot.PlayerGui.RobberyMoneyGui.Enabled

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end
        
        repeat 
            wait(0.1)
            local run = false
            if config.copAvoid then
                for k, v in pairs(game.Players:GetChildren()) do
                    if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                        if Bot.Character:FindFirstChild("HumanoidRootPart") and (v.Character.HumanoidRootPart.Position - Bot.Character.HumanoidRootPart.Position).magnitude < config.avoidCopRange and v.Team ~= Bot.Team then
                            run = true
                        end
                    end
                end
            end
            if run then
                break
            end
            if not GetBankStatus() then
                RobbingLocation = false
                return
            end
            if reset then return end
        until string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) == string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15)

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end
        
        if config.safe then
            UpdateLog("waiting")
            wait(config.GroundSpeed * 1.5)
        end

        UpdateLog("exiting bank")

        pathMove(Vector3.new(83, 61, 920))
        if reset then return end
        pathMove(Vector3.new(38, 65, 920))
        if reset then return end
        pathMove(Vector3.new(58, 65, 882))
        if reset then return end
        pathMove(Vector3.new(27, 65, 841))
        if reset then return end
        pathMove(Vector3.new(70, 61, 835))
        if reset then return end
        pathMove(Vector3.new(84, 28, 916))
        if reset then return end
    end
    if game.Workspace.Banks:GetChildren()[1].Layout:FindFirstChild("07TheMint") then

        pathMove(Vector3.new(61, 19, 921))
        if reset then return end
        pathMove(Vector3.new(102, 3, 914))
        if reset then return end
        pathMove(Vector3.new(92, 5, 850))
        if reset then return end
        pathMove(Vector3.new(50, 5, 821))
        if reset then return end
        pathMove(Vector3.new(47, 5, 800))
        if reset then return end

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        UpdateLog("collecting money")

        local oldPos = Bot.Character.HumanoidRootPart.Position
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.Banks:GetChildren()[1].Layout:GetChildren()[1].TriggerDoor.Position)
        wait(0.5)
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(oldPos)
        
        pathMove(Vector3.new(47, 5, 800))
        if reset then return end

        repeat 
            wait(0.1)
            local run = false
            if config.copAvoid then
                for k, v in pairs(game.Players:GetChildren()) do
                    if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                        if Bot.Character:FindFirstChild("HumanoidRootPart") and (v.Character.HumanoidRootPart.Position - Bot.Character.HumanoidRootPart.Position).magnitude < config.avoidCopRange and v.Team ~= Bot.Team then
                            run = true
                        end
                    end
                end
            end
            if run then
                break
            end
            if not GetBankStatus() then
                RobbingLocation = false
                return
            end
            if reset then return end
        until Bot.PlayerGui.RobberyMoneyGui.Enabled

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end
        
        repeat 
            wait(0.1)
            local run = false
            if config.copAvoid then
                for k, v in pairs(game.Players:GetChildren()) do
                    if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                        if Bot.Character:FindFirstChild("HumanoidRootPart") and (v.Character.HumanoidRootPart.Position - Bot.Character.HumanoidRootPart.Position).magnitude < config.avoidCopRange and v.Team ~= Bot.Team then
                            run = true
                        end
                    end
                end
            end
            if run then
                break
            end 
            if not GetBankStatus() then
                RobbingLocation = false
                return
            end
            if reset then return end
        until string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) == string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15)

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        if config.safe then
            UpdateLog("waiting")
            wait(config.GroundSpeed * 1.5)
        end

        UpdateLog("exiting bank")

        pathMove(Vector3.new(47, 5, 800))
        if reset then return end
        pathMove(Vector3.new(50, 5, 821))
        if reset then return end
        pathMove(Vector3.new(92, 5, 850))
        if reset then return end
        pathMove(Vector3.new(102, 3, 914))
        if reset then return end
        pathMove(Vector3.new(61, 19, 921))
        if reset then return end
    end
    if game.Workspace.Banks:GetChildren()[1].Layout:FindFirstChild("08Deductions") then
        
        pathMove(Vector3.new(59, 19, 922))
        if reset then return end
        pathMove(Vector3.new(102, 3, 914))
        if reset then return end
        pathMove(Vector3.new(111, 3, 973))
        if reset then return end
        pathMove(Vector3.new(63, 3, 958))
        if reset then return end
        pathMove(Vector3.new(50, 3, 962))
        if reset then return end
        pathMove(Vector3.new(39, 3, 964))
        if reset then return end

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end 

        UpdateLog("collecting money")

        local oldPos = Bot.Character.HumanoidRootPart.Position
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.Banks:GetChildren()[1].Layout:GetChildren()[1].TriggerDoor.Position)
        wait(0.5)
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(oldPos)

        pathMove(Vector3.new(39, 3, 964))
        if reset then return end

        repeat 
            wait(0.1)
            local run = false
            if config.copAvoid then
                for k, v in pairs(game.Players:GetChildren()) do
                    if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                        if Bot.Character:FindFirstChild("HumanoidRootPart") and (v.Character.HumanoidRootPart.Position - Bot.Character.HumanoidRootPart.Position).magnitude < config.avoidCopRange and v.Team ~= Bot.Team then
                            run = true
                        end
                    end
                end
            end
            if run then
                break
            end
            if not GetBankStatus() then
                RobbingLocation = false
                return
            end
            if reset then return end
        until Bot.PlayerGui.RobberyMoneyGui.Enabled

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end
        
        repeat 
            wait(0.1)
            local run = false
            if config.copAvoid then
                for k, v in pairs(game.Players:GetChildren()) do
                    if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                        if Bot.Character:FindFirstChild("HumanoidRootPart") and (v.Character.HumanoidRootPart.Position - Bot.Character.HumanoidRootPart.Position).magnitude < config.avoidCopRange and v.Team ~= Bot.Team then
                            run = true
                        end
                    end
                end
            end
            if run then
                break
            end
            if not GetBankStatus() then
                RobbingLocation = false
                return
            end
            if reset then return end
        until string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) == string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15)

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        if config.safe then
            UpdateLog("waiting")
            wait(config.GroundSpeed * 1.5)
        end

        UpdateLog("exiting bank")

        pathMove(Vector3.new(39, 3, 964))
        if reset then return end
        pathMove(Vector3.new(63, 3, 958))
        if reset then return end
        pathMove(Vector3.new(111, 3, 973))
        if reset then return end
        pathMove(Vector3.new(102, 3, 914))
        if reset then return end
        pathMove(Vector3.new(59, 19, 922))
        if reset then return end
    end
    if game.Workspace.Banks:GetChildren()[1].Layout:FindFirstChild("05Underwater") then

        pathMove(Vector3.new(60, 19, 922))
        if reset then return end
        pathMove(Vector3.new(103, 3, 914))
        if reset then return end
        pathMove(Vector3.new(96, -13, 878))
        if reset then return end
        pathMove(Vector3.new(93, -13, 856))
        if reset then return end
        pathMove(Vector3.new(128, -13, 850))
        if reset then return end
        pathMove(Vector3.new(139, -7, 847))
        if reset then return end
        pathMove(Vector3.new(159, -7, 843))
        if reset then return end

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        UpdateLog("collecting money")

        local oldPos = Bot.Character.HumanoidRootPart.Position
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.Banks:GetChildren()[1].Layout:GetChildren()[1].TriggerDoor.Position)
        wait(0.5)
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(oldPos)

        pathMove(Vector3.new(159, -7, 843))
        if reset then return end

        repeat 
            wait(0.1)
            local run = false
            if config.copAvoid then
                for k, v in pairs(game.Players:GetChildren()) do
                    if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                        if Bot.Character:FindFirstChild("HumanoidRootPart") and (v.Character.HumanoidRootPart.Position - Bot.Character.HumanoidRootPart.Position).magnitude < config.avoidCopRange and v.Team ~= Bot.Team then
                            run = true
                        end
                    end
                end
            end
            if run then
                break
            end
            if not GetBankStatus() then
                RobbingLocation = false
                return
            end
            if reset then return end
        until Bot.PlayerGui.RobberyMoneyGui.Enabled

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end
        
        repeat 
            wait(0.1)
            local run = false
            if config.copAvoid then
                for k, v in pairs(game.Players:GetChildren()) do
                    if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                        if Bot.Character:FindFirstChild("HumanoidRootPart") and (v.Character.HumanoidRootPart.Position - Bot.Character.HumanoidRootPart.Position).magnitude < config.avoidCopRange and v.Team ~= Bot.Team then
                            run = true
                        end
                    end
                end
            end
            if run then
                break
            end
            if not GetBankStatus() then
                RobbingLocation = false
                return
            end
            if reset then return end
        until string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) == string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15)

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        if config.safe then
            UpdateLog("waiting")
            wait(config.GroundSpeed * 1.5)
        end

        UpdateLog("exiting bank")

        pathMove(Vector3.new(159, -7, 843))
        if reset then return end
        pathMove(Vector3.new(139, -7, 847))
        if reset then return end
        pathMove(Vector3.new(128, -13, 850))
        if reset then return end
        pathMove(Vector3.new(93, -13, 856))
        if reset then return end
        pathMove(Vector3.new(96, -13, 878))
        if reset then return end
        pathMove(Vector3.new(103, 3, 914))
        if reset then return end
        pathMove(Vector3.new(60, 19, 922))
        if reset then return end
    end
    if game.Workspace.Banks:GetChildren()[1].Layout:FindFirstChild("04Remastered") then

        pathMove(Vector3.new(60, 19, 922))
        if reset then return end
        pathMove(Vector3.new(101, 2, 914))
        if reset then return end
        pathMove(Vector3.new(95, 2, 876))
        if reset then return end
        pathMove(Vector3.new(19, 2, 888))
        if reset then return end

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        UpdateLog("collecting money")

        local oldPos = Bot.Character.HumanoidRootPart.Position
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.Banks:GetChildren()[1].Layout:GetChildren()[1].TriggerDoor.Position)
        wait(0.5)
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(oldPos)

        pathMove(Vector3.new(19, 2, 888))
        if reset then return end

        repeat 
            wait(0.1)
            local run = false
            if config.copAvoid then
                for k, v in pairs(game.Players:GetChildren()) do
                    if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                        if Bot.Character:FindFirstChild("HumanoidRootPart") and (v.Character.HumanoidRootPart.Position - Bot.Character.HumanoidRootPart.Position).magnitude < config.avoidCopRange and v.Team ~= Bot.Team then
                            run = true
                        end
                    end
                end
            end
            if run then
                break
            end
            if not GetBankStatus() then
                RobbingLocation = false
                return
            end
            if reset then return end
        until Bot.PlayerGui.RobberyMoneyGui.Enabled

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end
        
        repeat 
            wait(0.1)
            local run = false
            if config.copAvoid then
                for k, v in pairs(game.Players:GetChildren()) do
                    if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                        if Bot.Character:FindFirstChild("HumanoidRootPart") and (v.Character.HumanoidRootPart.Position - Bot.Character.HumanoidRootPart.Position).magnitude < config.avoidCopRange and v.Team ~= Bot.Team then
                            run = true
                        end
                    end
                end
            end
            if run then
                break
            end
            if not GetBankStatus() then
                RobbingLocation = false
                return
            end
            if reset then return end
        until string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) == string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15)

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        if config.safe then
            UpdateLog("waiting")
            wait(config.GroundSpeed * 1.5)
        end

        UpdateLog("exiting bank")

        pathMove(Vector3.new(19, 2, 888))
        if reset then return end
        pathMove(Vector3.new(95, 2, 876))
        if reset then return end
        pathMove(Vector3.new(101, 2, 914))
        if reset then return end
        pathMove(Vector3.new(60, 19, 922))
        if reset then return end
    end
    if game.Workspace.Banks:GetChildren()[1].Layout:FindFirstChild("06TheBlueRoom") then

        pathMove(Vector3.new(57, 19, 922))
        if reset then return end
        pathMove(Vector3.new(57, 1, 922))
        if reset then return end
        pathMove(Vector3.new(-49, 1, 941))
        if reset then return end

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        UpdateLog("collecting money")

        local oldPos = Bot.Character.HumanoidRootPart.Position
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.Banks:GetChildren()[1].Layout:GetChildren()[1].TriggerDoor.Position)
        wait(0.5)
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(oldPos)

        pathMove(Vector3.new(-49, 1, 941))
        if reset then return end

        repeat 
            wait(0.1)
            local run = false
            if config.copAvoid then
                for k, v in pairs(game.Players:GetChildren()) do
                    if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                        if Bot.Character:FindFirstChild("HumanoidRootPart") and (v.Character.HumanoidRootPart.Position - Bot.Character.HumanoidRootPart.Position).magnitude < config.avoidCopRange and v.Team ~= Bot.Team then
                            run = true
                        end
                    end
                end
            end
            if run then
                break
            end
            if not GetBankStatus() then
                RobbingLocation = false
                return
            end
            if reset then return end
        until Bot.PlayerGui.RobberyMoneyGui.Enabled

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end
        
        repeat 
            wait(0.1)
            local run = false
            if config.copAvoid then
                for k, v in pairs(game.Players:GetChildren()) do
                    if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                        if Bot.Character:FindFirstChild("HumanoidRootPart") and (v.Character.HumanoidRootPart.Position - Bot.Character.HumanoidRootPart.Position).magnitude < config.avoidCopRange and v.Team ~= Bot.Team then
                            run = true
                        end
                    end
                end
            end
            if run then
                break
            end
            if not GetBankStatus() then
                RobbingLocation = false
                return
            end
            if reset then return end
        until string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) == string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15)

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        if config.safe then
            UpdateLog("waiting")
            wait(config.GroundSpeed * 1.5)
        end

        UpdateLog("exiting bank")

        pathMove(Vector3.new(-49, 1, 941))
        if reset then return end
        pathMove(Vector3.new(57, 1, 922))
        if reset then return end
        pathMove(Vector3.new(57, 19, 922))
        if reset then return end
    end
    if game.Workspace.Banks:GetChildren()[1].Layout:FindFirstChild("09Presidential") then

        pathMove(Vector3.new(57, 20, 923))
        if reset then return end
        pathMove(Vector3.new(57, -7, 923))
        if reset then return end
        pathMove(Vector3.new(85, -7, 918))
        if reset then return end
        pathMove(Vector3.new(96, -7, 991))
        if reset then return end
        pathMove(Vector3.new(57, -7, 999))
        if reset then return end
        pathMove(Vector3.new(49, -7, 956))
        if reset then return end

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        UpdateLog("collecting money")

        local oldPos = Bot.Character.HumanoidRootPart.Position
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.Banks:GetChildren()[1].Layout:GetChildren()[1].TriggerDoor.Position)
        wait(0.5)
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(oldPos)

        pathMove(Vector3.new(49, -7, 956))
        if reset then return end

        repeat 
            wait(0.1)
            local run = false
            if config.copAvoid then
                for k, v in pairs(game.Players:GetChildren()) do
                    if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                        if Bot.Character:FindFirstChild("HumanoidRootPart") and (v.Character.HumanoidRootPart.Position - Bot.Character.HumanoidRootPart.Position).magnitude < config.avoidCopRange and v.Team ~= Bot.Team then
                            run = true
                        end
                    end
                end
            end
            if run then
                break
            end
            if not GetBankStatus() then
                RobbingLocation = false
                return
            end
            if reset then return end
        until Bot.PlayerGui.RobberyMoneyGui.Enabled

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end
        
        repeat 
            wait(0.1)
            local run = false
            if config.copAvoid then
                for k, v in pairs(game.Players:GetChildren()) do
                    if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                        if Bot.Character:FindFirstChild("HumanoidRootPart") and (v.Character.HumanoidRootPart.Position - Bot.Character.HumanoidRootPart.Position).magnitude < config.avoidCopRange and v.Team ~= Bot.Team then
                            run = true
                        end
                    end
                end
            end
            if run then
                break
            end
            if not GetBankStatus() then
                RobbingLocation = false
                return
            end
            if reset then return end
        until string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) == string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15)

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        if config.safe then
            UpdateLog("waiting")
            wait(config.GroundSpeed * 1.5)
        end

        UpdateLog("exiting bank")

        pathMove(Vector3.new(49, -7, 956))
        if reset then return end
        pathMove(Vector3.new(57, -7, 999))
        if reset then return end
        pathMove(Vector3.new(96, -7, 991))
        if reset then return end
        pathMove(Vector3.new(85, -7, 918))
        if reset then return end
        pathMove(Vector3.new(57, -7, 923))
        if reset then return end
        pathMove(Vector3.new(57, 20, 923))
        if reset then return end
    end

    pathMove(Vector3.new(40, 20, 924))
    if reset then return end
    pathMove(Vector3.new(27, 19, 860))
    if reset then return end
    pathMove(Vector3.new(1, 25, 865))
    if reset then return end

    wait(1)
    RobbingLocation = false
    robbedBank = true
    local bankMoney = string.gsub(string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 2, 6), " ", "")
    bankMoney = string.gsub(bankMoney, "/", "")
    bankMoney = string.gsub(bankMoney, "kg", "")
    LogMessage("robbed bank for $"..bankMoney)
    bankMoney = string.gsub(bankMoney, ",", "")
    TotalMoneyEarned += tonumber(bankMoney)
end

function GetBoxPos()
    local MinDist = math.huge
    local ClosestPos = nil
    for k, v in pairs(game.Workspace.Jewelrys:GetChildren()[1].Boxes:GetChildren()) do
        if Bot.Character:FindFirstChild("HumanoidRootPart") and (v.Position - Bot.Character.HumanoidRootPart.Position).magnitude < MinDist then
            MinDist = (v.Position - Bot.Character.HumanoidRootPart.Position).magnitude
            ClosestPos = v.Position
        end
    end

    return ClosestPos
end

local jewelPositions = {
    Vector3.new(116, 20, 1326),
    Vector3.new(114, 20, 1316),
    Vector3.new(112, 20, 1306),
    Vector3.new(104, 20, 1285),
    Vector3.new(115, 20, 1284),
    Vector3.new(126, 20, 1281),
    Vector3.new(136, 20, 1279),
    Vector3.new(150, 20, 1292),
    Vector3.new(153, 20, 1308),
    Vector3.new(142, 21, 1310),
    Vector3.new(140, 21, 1301),
    Vector3.new(134, 21, 1283),
    Vector3.new(130, 21, 1300),
    Vector3.new(132, 21, 1312),
    -- floor 1
}

local jewelPositions1 = {
    Vector3.new(112, 38, 1318),
    Vector3.new(111, 38, 1310),
    Vector3.new(109, 38, 1300),
    Vector3.new(116, 38, 1283),
    Vector3.new(126, 38, 1281),
    Vector3.new(138, 38, 1279),
    Vector3.new(142, 39, 1310),
    Vector3.new(140, 39, 1301),
    Vector3.new(134, 39, 1283),
    Vector3.new(130, 39, 1300),
    Vector3.new(132, 39, 1312),
    -- floor 2
}

function RobJewel()
    if not GetJewelStatus() then
        RobbingLocation = false
        return
    end
    UpdateLog("going to jewelry store")
    BotMove(Vector3.new(155, 500, 1369), "jewelry store", not config.safe)
    wait(1)
    exitCar.OnJump()
    wait(0.5)

    if config.safe and GetRobbingJewel() then
        UpdateLog("entering jewelry store")
        if not GetJewelStatus() then
            RobbingLocation = false
            return
        end

        pathMove(Vector3.new(155, 120, 1369))
        if reset then return end
        pathMove(Vector3.new(105, 120, 1342))
        if reset then return end
        pathMove(Vector3.new(95, 120, 1284))
        if reset then return end

        pathMove(Vector3.new(112, 119, 1282))
        if reset then return end
        pathMove(Vector3.new(125, 102, 1341))
        if reset then return end
        pathMove(Vector3.new(137, 103, 1338))
        if reset then return end
        pathMove(Vector3.new(137, 103, 1278))
        if reset then return end

        if game.Workspace.Jewelrys:GetChildren()[1].Floors:FindFirstChild("1_Classic") then
            if not GetJewelStatus() then
                RobbingLocation = false
                return
            end

            pathMove(Vector3.new(152, 102, 1273))
            if reset then return end
            pathMove(Vector3.new(162, 85, 1331))
            if reset then return end
            pathMove(Vector3.new(133, 80, 1336))
            if reset then return end
            pathMove(Vector3.new(124, 80, 1277))
            if reset then return end
            pathMove(Vector3.new(153, 80, 1273))
            if reset then return end
            pathMove(Vector3.new(163, 63, 1332))
            if reset then return end
            pathMove(Vector3.new(125, 70, 1337))
            if reset then return end
            pathMove(Vector3.new(105, 70, 1281))
            if reset then return end
            pathMove(Vector3.new(105, 55, 1281))
            if reset then return end
        end
        if game.Workspace.Jewelrys:GetChildren()[1].Floors:FindFirstChild("6_LaserRooms") then
            if not GetJewelStatus() then
                RobbingLocation = false
                return
            end

            pathMove(Vector3.new(152, 103, 1273))
            if reset then return end
            pathMove(Vector3.new(162, 86, 1332))
            if reset then return end
            pathMove(Vector3.new(134, 79, 1337))
            if reset then return end
            pathMove(Vector3.new(124, 79, 1278))
            if reset then return end
            pathMove(Vector3.new(152, 79, 1274))
            if reset then return end
            pathMove(Vector3.new(163, 62, 1332))
            if reset then return end
            pathMove(Vector3.new(129, 55, 1339))
            if reset then return end
            pathMove(Vector3.new(135, 55, 1303))
            if reset then return end
            pathMove(Vector3.new(117, 55, 1278))
            if reset then return end
        end
        if game.Workspace.Jewelrys:GetChildren()[1].Floors:FindFirstChild("5_TheCEO") then
            if not GetJewelStatus() then
                RobbingLocation = false
                return
            end

            pathMove(Vector3.new(153, 103, 1274))
            if reset then return end
            pathMove(Vector3.new(162, 88, 1333))
            if reset then return end
            pathMove(Vector3.new(132, 80, 1338))
            if reset then return end
            pathMove(Vector3.new(100, 80, 1295))
            if reset then return end
            pathMove(Vector3.new(127, 80, 1292))
            if reset then return end
            pathMove(Vector3.new(153, 80, 1274))
            if reset then return end
            pathMove(Vector3.new(162, 63, 1333))
            if reset then return end
            pathMove(Vector3.new(135, 65, 1338))
            if reset then return end
            pathMove(Vector3.new(126, 65, 1282))
            if reset then return end
            pathMove(Vector3.new(105, 65, 1281))
            if reset then return end
            pathMove(Vector3.new(105, 55, 1281))
            if reset then return end
        end
        if game.Workspace.Jewelrys:GetChildren()[1].Floors:FindFirstChild("4_CameraFloors") then
            if not GetJewelStatus() then
                RobbingLocation = false
                return
            end

            pathMove(Vector3.new(153, 103, 1273))
            if reset then return end
            pathMove(Vector3.new(163, 85, 1333))
            if reset then return end
            pathMove(Vector3.new(136, 80, 1337))
            if reset then return end
            pathMove(Vector3.new(134, 80, 1277))
            if reset then return end
            pathMove(Vector3.new(153, 80, 1273))
            if reset then return end
            pathMove(Vector3.new(163, 62, 1332))
            if reset then return end
            pathMove(Vector3.new(120, 71, 1340))
            if reset then return end
            pathMove(Vector3.new(106, 71, 1282))
            if reset then return end
            pathMove(Vector3.new(106, 55, 1282))
            if reset then return end
        end
        if game.Workspace.Jewelrys:GetChildren()[1].Floors:FindFirstChild("3_ExpandedStore") then
            if not GetJewelStatus() then
                RobbingLocation = false
                return
            end

            pathMove(Vector3.new(153, 103, 1274))
            if reset then return end
            pathMove(Vector3.new(163, 88, 1332))
            if reset then return end
            pathMove(Vector3.new(132, 95, 1339))
            if reset then return end
            pathMove(Vector3.new(140, 95, 1276))
            if reset then return end
            pathMove(Vector3.new(153, 80, 1274))
            if reset then return end
            pathMove(Vector3.new(162, 63, 1332))
            if reset then return end
            pathMove(Vector3.new(136, 60, 1337))
            if reset then return end
            pathMove(Vector3.new(96, 60, 1285))
            if reset then return end
        end     
        if game.Workspace.Jewelrys:GetChildren()[1].Floors:FindFirstChild("2_StorageAndMeeting") then
            if not GetJewelStatus() then
                RobbingLocation = false
                return
            end

            pathMove(Vector3.new(153, 103, 1273))
            if reset then return end
            pathMove(Vector3.new(162, 85, 1331))
            if reset then return end
            pathMove(Vector3.new(101, 85, 1340))
            if reset then return end
            pathMove(Vector3.new(126, 80, 1294))
            if reset then return end
            pathMove(Vector3.new(153, 80, 1274))
            if reset then return end
            pathMove(Vector3.new(163, 63, 1333))
            if reset then return end
            pathMove(Vector3.new(118, 55, 1332))
            if reset then return end
            pathMove(Vector3.new(111, 55, 1310))
            if reset then return end
            pathMove(Vector3.new(140, 55, 1301))
            if reset then return end
            pathMove(Vector3.new(137, 55, 1284))
            if reset then return end
        end

        if not GetJewelStatus() then
            RobbingLocation = false
            return
        end
        pathMove(Vector3.new(97, 55, 1285))
            if reset then return end
        pathMove(Vector3.new(107, 37, 1343))
            if reset then return end
        pathMove(Vector3.new(130, 37, 1309))
            if reset then return end
        pathMove(Vector3.new(97, 36, 1283))
            if reset then return end
        pathMove(Vector3.new(105, 19, 1341))
            if reset then return end
    end
    pathMove(Vector3.new(135, 22, 1343))
    wait(1)

    UpdateLog("collecting money")

    for k, v in pairs(jewelPositions) do
        if not GetJewelStatus() then
            RobbingLocation = false
            return
        end
        pathMove(v)
        if reset then return end
        
        if Bot.Character:FindFirstChild("HumanoidRootPart") and (GetBoxPos() - Bot.Character.HumanoidRootPart.Position).magnitude < 5 and ((string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) ~= string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15) and Bot.PlayerGui.RobberyMoneyGui.Enabled) or Bot.PlayerGui.RobberyMoneyGui.Enabled == false) then
            Bot.Character:PivotTo(CFrame.lookAt(Bot.Character.HumanoidRootPart.Position, GetBoxPos()))
            for i = 1, 5, 1 do
                network:FireServer(punchHash)
                if reset then return end
                wait(0.5)
            end
        end
    end

    pathMove(Vector3.new(107, 22, 1343))
    pathMove(Vector3.new(96, 38, 1285))
    pathMove(Vector3.new(129, 38, 1306))

    if (string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) ~= string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15) and Bot.PlayerGui.RobberyMoneyGui.Enabled) or Bot.PlayerGui.RobberyMoneyGui.Enabled == false then
        for k, v in pairs(jewelPositions1) do
            if not GetJewelStatus() then
                RobbingLocation = false
                return
            end
            pathMove(v)
            if reset then return end

            if Bot.Character:FindFirstChild("HumanoidRootPart") and (GetBoxPos() - Bot.Character.HumanoidRootPart.Position).magnitude < 5 and ((string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) ~= string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15) and Bot.PlayerGui.RobberyMoneyGui.Enabled) or Bot.PlayerGui.RobberyMoneyGui.Enabled == false) then
                Bot.Character:PivotTo(CFrame.lookAt(Bot.Character.HumanoidRootPart.Position, GetBoxPos()))
                for i = 1, 5, 1 do
                    network:FireServer(punchHash)
                    if reset then return end
                    wait(0.5)
                end
            end
        end
    end
    
    pathMove(Vector3.new(107, 42, 1343))
    pathMove(Vector3.new(96, 55, 1285))

    if not GetJewelStatus() then
        RobbingLocation = false
        return
    end

    if config.safe then
        UpdateLog("waiting")
        wait(config.GroundSpeed * 2.5)
    end

    UpdateLog("exiting jewelry store")

    if game.Workspace.Jewelrys:GetChildren()[1].Floors:FindFirstChild("1_Classic") then
        if not GetJewelStatus() then
            RobbingLocation = false
            return
        end

        pathMove(Vector3.new(105, 55, 1281))
        if reset then return end
        pathMove(Vector3.new(105, 70, 1281))
        if reset then return end
        pathMove(Vector3.new(125, 70, 1337))
        if reset then return end
        pathMove(Vector3.new(163, 63, 1332))
        if reset then return end
        pathMove(Vector3.new(153, 80, 1273))
        if reset then return end
        pathMove(Vector3.new(124, 80, 1277))
        if reset then return end
        pathMove(Vector3.new(133, 80, 1336))
        if reset then return end
        pathMove(Vector3.new(162, 85, 1331))
        if reset then return end
        pathMove(Vector3.new(152, 102, 1273))
        if reset then return end
    end
    if game.Workspace.Jewelrys:GetChildren()[1].Floors:FindFirstChild("6_LaserRooms") then
        if not GetJewelStatus() then
            RobbingLocation = false
            return
        end

        pathMove(Vector3.new(117, 55, 1278))
        if reset then return end
        pathMove(Vector3.new(135, 55, 1303))
        if reset then return end
        pathMove(Vector3.new(129, 55, 1339))
        if reset then return end
        pathMove(Vector3.new(163, 62, 1332))
        if reset then return end
        pathMove(Vector3.new(152, 79, 1274))
        if reset then return end
        pathMove(Vector3.new(124, 79, 1278))
        if reset then return end
        pathMove(Vector3.new(134, 79, 1337))
        if reset then return end
        pathMove(Vector3.new(162, 86, 1332))
        if reset then return end
        pathMove(Vector3.new(152, 103, 1273))
        if reset then return end
    end
    if game.Workspace.Jewelrys:GetChildren()[1].Floors:FindFirstChild("5_TheCEO") then
        if not GetJewelStatus() then
            RobbingLocation = false
            return
        end

        pathMove(Vector3.new(105, 55, 1281))
        if reset then return end
        pathMove(Vector3.new(105, 65, 1281))
        if reset then return end
        pathMove(Vector3.new(126, 65, 1282))
        if reset then return end
        pathMove(Vector3.new(135, 65, 1338))
        if reset then return end
        pathMove(Vector3.new(162, 63, 1333))
        if reset then return end
        pathMove(Vector3.new(153, 80, 1274))
        if reset then return end
        pathMove(Vector3.new(127, 80, 1292))
        if reset then return end
        pathMove(Vector3.new(100, 80, 1295))
        if reset then return end
        pathMove(Vector3.new(132, 80, 1338))
        if reset then return end
        pathMove(Vector3.new(162, 88, 1333))
        if reset then return end
        pathMove(Vector3.new(153, 103, 1274))
        if reset then return end
    end
    if game.Workspace.Jewelrys:GetChildren()[1].Floors:FindFirstChild("4_CameraFloors") then
        if not GetJewelStatus() then
            RobbingLocation = false
            return
        end

        pathMove(Vector3.new(106, 55, 1282))
        if reset then return end
        pathMove(Vector3.new(106, 71, 1282))
        if reset then return end
        pathMove(Vector3.new(120, 71, 1340))
        if reset then return end
        pathMove(Vector3.new(163, 62, 1332))
        if reset then return end
        pathMove(Vector3.new(153, 80, 1273))
        if reset then return end
        pathMove(Vector3.new(134, 80, 1277))
        if reset then return end
        pathMove(Vector3.new(136, 80, 1337))
        if reset then return end
        pathMove(Vector3.new(163, 85, 1333))
        if reset then return end
        pathMove(Vector3.new(153, 103, 1273))
        if reset then return end
    end
    if game.Workspace.Jewelrys:GetChildren()[1].Floors:FindFirstChild("3_ExpandedStore") then
        if not GetJewelStatus() then
            RobbingLocation = false
            return
        end

        pathMove(Vector3.new(96, 60, 1285))
        if reset then return end
        pathMove(Vector3.new(136, 60, 1337))
        if reset then return end
        pathMove(Vector3.new(162, 63, 1332))
        if reset then return end
        pathMove(Vector3.new(153, 80, 1274))
        if reset then return end
        pathMove(Vector3.new(140, 95, 1276))
        if reset then return end
        pathMove(Vector3.new(132, 95, 1339))
        if reset then return end
        pathMove(Vector3.new(163, 88, 1332))
        if reset then return end
        pathMove(Vector3.new(153, 103, 1274))
        if reset then return end
    end
    if game.Workspace.Jewelrys:GetChildren()[1].Floors:FindFirstChild("2_StorageAndMeeting") then
        if not GetJewelStatus() then
            RobbingLocation = false
            return
        end

        pathMove(Vector3.new(137, 55, 1284))
        if reset then return end
        pathMove(Vector3.new(140, 55, 1301))
        if reset then return end
        pathMove(Vector3.new(111, 55, 1310))
        if reset then return end
        pathMove(Vector3.new(118, 55, 1332))
        if reset then return end
        pathMove(Vector3.new(163, 63, 1333))
        if reset then return end
        pathMove(Vector3.new(153, 80, 1274))
        if reset then return end
        pathMove(Vector3.new(126, 80, 1294))
        if reset then return end
        pathMove(Vector3.new(101, 85, 1340))
        if reset then return end
        pathMove(Vector3.new(162, 85, 1331))
        if reset then return end
        pathMove(Vector3.new(153, 103, 1273))
        if reset then return end
    end
    if not GetJewelStatus() then
        RobbingLocation = false
        return
    end

    pathMove(Vector3.new(137, 103, 1278))
    if reset then return end
    pathMove(Vector3.new(137, 103, 1338))
    if reset then return end
    pathMove(Vector3.new(125, 102, 1341))
    if reset then return end
    pathMove(Vector3.new(112, 119, 1282))
    if reset then return end
    pathMove(Vector3.new(95, 119, 1285))
    if reset then return end

    UpdateLog("waiting")

    wait(5)

    UpdateLog("going to crim base")

    BotMove(Vector3.new(-300, 500, 1597), "city crim base", false)

    if reset then return end
    wait(3)
    RobbingLocation = false
    robbedJewel = true
    local jewelMoney = string.gsub(string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 2, 6), " ", "")
    jewelMoney = string.gsub(jewelMoney, "/", "")
    jewelMoney = string.gsub(jewelMoney, "kg", "")
    LogMessage("robbed jewelry store for $"..jewelMoney)
    jewelMoney = string.gsub(jewelMoney, ",", "")
    TotalMoneyEarned += tonumber(jewelMoney)
end

function RobMansion()
    UpdateLog("going to mansion")
    BotMove(Vector3.new(3020, 500, -4524), "mansion", not config.safe)
    if reset then return end
    wait(1)
    exitCar.OnJump()
    wait(0.5)

    if not GetMansionStatus() then 
        RobbingLocation = false
        return 
    end

    UpdateLog("going to elevator")

    if config.safe then
        pathMove(Vector3.new(3090, 63, -4605))
        if reset then return end
        pathMove(Vector3.new(3112, 70, -4606))
        if reset then return end
        pathMove(Vector3.new(3199, 70, -4606))
        if reset then return end
    end

    pathMove(Vector3.new(3196, 63, -4662)) 
    if reset then return end

    UpdateLog("waiting for mansion to start")
    
    local Door = game:GetService("Workspace").MansionRobbery.ArrivalElevator.Floors:GetChildren()[1].DoorLeft.InnerModel.Door

    repeat 
        wait() 
        if reset then return end
    until Door.Position.X > 3208

    network:FireServer(hash, "AK47")

    UpdateLog("going to boss room")

    pathMove(Vector3.new(3202, -200, -4703))
    if reset then return end
    pathMove(Vector3.new(3201, -200, -4679))
    if reset then return end
    pathMove(Vector3.new(3106, -204, -4675))
    if reset then return end
    pathMove(Vector3.new(3106, -204, -4647))
    if reset then return end
    pathMove(Vector3.new(3140, -204, -4647))
    if reset then return end
    pathMove(Vector3.new(3147, -204, -4566))
    if reset then return end
    
    UpdateLog("waiting for cutscene")

    wait(15)

    if reset then return end

    UpdateLog("shooting ceo")

    local boss = nil
    for k, v in pairs(game.Workspace.MansionRobbery:GetDescendants()) do
        if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") then
            boss = v
        end
    end

    pcall(function()
        toolname = "AK47"
        if Bot.Backpack:FindFirstChild(toolname) and Bot.Character:FindFirstChild(toolname) == nil then
            local tool = Bot.Backpack:FindFirstChild(toolname)
            Bot.Character.Humanoid:EquipTool(tool)
        end
    end)

    local args = {
        [1] = true
    }

    game:GetService("Players").LocalPlayer.Folder.AK47.InventoryEquipRemote:FireServer(unpack(args))

    wait(0.5)
    if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
    Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(Bot.Character.HumanoidRootPart.Position.X, -169, Bot.Character.HumanoidRootPart.Position.Z))
    Bot.Character.HumanoidRootPart.Velocity = Vector3.new(0,1.005,0)
    local CEOplatform = Instance.new("Part")
    CEOplatform.Parent = game:GetService("Workspace")
    CEOplatform.Anchored = true
    CEOplatform.Size = Vector3.new(25, 0.5, 25)
    CEOplatform.Position = Bot.Character.HumanoidRootPart.Position + Vector3.new(0, -7, 0)
    while boss:FindFirstChild("Humanoid") do

        if not Bot.Character:FindFirstChild("AK47") then

            wait(0.5)

            repeat wait() until Bot.Character.Humanoid:GetState() == Enum.HumanoidStateType.Running

            wait(0.1)

            pcall(function()
                toolname = "AK47"
                if Bot.Backpack:FindFirstChild(toolname) and Bot.Character:FindFirstChild(toolname) == nil then
                    local tool = Bot.Backpack:FindFirstChild(toolname)
                    Bot.Character.Humanoid:EquipTool(tool)
                end
            end)

            local args = {
                [1] = true
            }

            game:GetService("Players").LocalPlayer.Folder.AK47.InventoryEquipRemote:FireServer(unpack(args))

            wait(0.1)
        end

        for k, v in pairs(game.Workspace.MansionRobbery.GuardsFolder:GetDescendants()) do
            if (v:FindFirstChild("NPCDestObj")) then
                v.NPCDestObj:Destroy()
            end
        end
        game:GetService('VirtualInputManager'):SendMouseButtonEvent(0,0,0,true,game,0)

        if reset then return end
        wait()
    end
    CEOplatform:Destroy()
    game:GetService('VirtualInputManager'):SendMouseButtonEvent(0,0,0,false,game,0)

    UpdateLog("waiting for custscene")

    wait(5)

    if reset then return end

    UpdateLog("exiting mansion")

    pathMove(Vector3.new(3113, -204, -4440))
    if reset then return end
    pathMove(Vector3.new(3096, -204, -4440))
    if reset then return end
    pathMove(Vector3.new(3097, -219, -4519))
    if reset then return end
    pathMove(Vector3.new(3077, -221, -4518))
    if reset then return end
    
    local pos = Vector3.new(3064, -221, -4473)
    local moveTime = 0

    if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
    while Bot.Character:FindFirstChild("HumanoidRootPart") and (Bot.Character.HumanoidRootPart.Position - pos).magnitude > 5 do
        if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
        local amount = (Bot.Character.HumanoidRootPart.Position - pos).magnitude / (config.GroundSpeed / 2)
        local MoveDist = (Bot.Character.HumanoidRootPart.Position - pos) / amount
        for i = 1, amount, 1 do
            if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
            Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.Position - MoveDist)
            Bot.Character.HumanoidRootPart.Velocity = Vector3.new(0,1.005,0)
            wait()
            moveTime += 0.03
            if moveTime > 15 then
                LogMessage("possibly stuck, ressetting")
                Bot.Character.Humanoid.Health = 0
                exitCar.OnJump()
                return
            end
            if reset then return end
        end
        if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(pos)
    end
    if reset then return end
    wait(0.1)
    pathMove(Vector3.new(3104, 57, -4384))
    if reset then return end

    wait(1)
    RobbingLocation = false
    LogMessage("robbed mansion for $16,000")
    TotalMoneyEarned += 16000
end

function RobCasino()
    if not GetCasinoStatus() then
        RobbingLocation = false
        return
    end
    if not config.safe then
        exitCar.OnJump()
        wait(0.5)
        UpdateLog("hacking computers")
        for k, v in pairs(game.Workspace.Casino.Computers:GetChildren()) do
            if not GetCasinoStatus() then
                RobbingLocation = false
                return
            end
            while v.Display.BrickColor ~= BrickColor.new("Institutional white") and v.Display.BrickColor ~= BrickColor.new("Lime green") do       
                Bot.Character.HumanoidRootPart.CFrame = CFrame.new(v.Display.Position)
                v.CasinoComputerHack:FireServer()
                wait()
            end
            wait(0.1)
            if v.Display.BrickColor == BrickColor.new("Lime green") then
                break
            end
        end

        UpdateLog("collecting cash")

        for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
            if not GetCasinoStatus() then
                RobbingLocation = false
                return
            end
            if string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) == string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15) and Bot.PlayerGui.RobberyMoneyGui.Enabled then
                break
            end
            for i = 1, 30, 1 do
                Bot.Character.HumanoidRootPart:PivotTo(CFrame.new(v.Position + Vector3.new(0, 5, 0)))
                v.CasinoLootCollect:FireServer()
                wait(0.01)
            end
        end
        wait(10)
    else
        UpdateLog("going to casino")
        BotMove(Vector3.new(-220, 500, -4575), "casino", false)
        wait(1)
        exitCar.OnJump()
        wait(0.5)
        if not GetCasinoStatus() then
            RobbingLocation = false
            return
        end
        UpdateLog("going to roof")

        pathMove(Vector3.new(-220, 175, -4575))
        if reset then return end
        pathMove(Vector3.new(-62, 160, -4718))
        if reset then return end
        pathMove(Vector3.new(-13, 157, -4741))
        if reset then return end

        wait(0.5)

        
        UpdateLog("waiting for elevator")

        repeat 
            fireclickdetector(game.Workspace.Casino.Elevator.Car.InnerModel.Calls:FindFirstChild("4").ClickDetector)
            if reset then return end
            wait()
        until game.Workspace.Casino.Elevator.Floors:GetChildren()[4].DoorLeft.InnerModel.Door.Position.X > -8

        UpdateLog("entering elevator")

        pathMove(Vector3.new(-18, 156, -4754))
        if reset then return end

        local hacked = false

        for k, v in pairs(game.Workspace.Casino.Computers:GetChildren()) do
            if v.Display.BrickColor == BrickColor.new("Lime green") then
                hacked = true
            end
        end

        if not hacked then
            UpdateLog("going to security")
            repeat 
                fireclickdetector(game.Workspace.Casino.Elevator.Car.InnerModel.Calls:FindFirstChild("3").ClickDetector)
                if reset then return end
                wait() 
            until game.Workspace.Casino.Elevator.Floors:GetChildren()[3].DoorLeft.InnerModel.Door.Position.X > -8

            pathMove(Vector3.new(-3, 72, -4705))
            if reset then return end
            pathMove(Vector3.new(-58, 72, -4684))
            if reset then return end
            pathMove(Vector3.new(-44, 80, -4645))
            
            UpdateLog("hacking computers")

            for k, v in pairs(game.Workspace.Casino.Computers:GetChildren()) do
                if v.Display.BrickColor ~= BrickColor.new("Institutional white") and v.Display.BrickColor ~= BrickColor.new("Lime green") then
                    pathMove(v.Display.Position + Vector3.new(0, 5, 0))
                    if reset then return end
                    wait(0.1)
                    v.CasinoComputerHack:FireServer()
                    wait(0.3)
                    v.CasinoComputerHack:FireServer()
                    wait(0.5)
                end
                if v.Display.BrickColor == BrickColor.new("Lime green") then
                    break
                end
            end

            UpdateLog("going to elevator")

            pathMove(Vector3.new(-44, 80, -4645))
            if reset then return end
            pathMove(Vector3.new(-58, 72, -4684))
            if reset then return end
            pathMove(Vector3.new(-3, 72, -4705))

            UpdateLog("waiting for elevator")

            repeat 
                fireclickdetector(game.Workspace.Casino.Elevator.Car.InnerModel.Calls:FindFirstChild("3").ClickDetector)
                if reset then return end
                wait() 
            until game.Workspace.Casino.Elevator.Floors:GetChildren()[3].DoorLeft.InnerModel.Door.Position.X > -8

            UpdateLog("entering elevator")

            pathMove(Vector3.new(-18, 72, -4754))
            if reset then return end
        end

        UpdateLog("going to vault")

        repeat 
            fireclickdetector(game.Workspace.Casino.Elevator.Car.InnerModel.Calls:FindFirstChild("1").ClickDetector)
            if reset then return end
            wait() 
        until game.Workspace.Casino.Elevator.Floors:GetChildren()[1].DoorLeft.InnerModel.Door.Position.X > -8

        pathMove(Vector3.new(-15, -77, -4739))
        if reset then return end
        pathMove(Vector3.new(13, -76, -4748))
        if reset then return end

        UpdateLog("breaking glass")

        local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
        for i,v in pairs (UI.CircleAction.Specs) do
            if v.Name == "Break" then
                v.Duration = 0
                v.Time = true
                v:Callback(v, true)
            end
        end

        wait(1)

        UpdateLog("going to vault")

        pathMove(Vector3.new(26, -77, -4751))
        if reset then return end
        pathMove(Vector3.new(48, -77, -4667))
        if reset then return end
        pathMove(Vector3.new(9, -77, -4658))
        if reset then return end
        pathMove(Vector3.new(32, -77, -4581))
        if reset then return end
        pathMove(Vector3.new(85, -77, -4536))
        if reset then return end
        pathMove(Vector3.new(140, -77, -4527))
        if reset then return end

        UpdateLog("hacking vault")

        local HackingVault = false
        local hacked = 0
        local Rotate = true
        local VaultLight = game:GetService("Workspace").Casino.HackableVaults.VaultDoorMain.InnerModel.Model.UnlockedLED

        if math.floor(game.Workspace.Casino.HackableVaults.VaultDoorMain.InnerModel.Model.Body.Rotation.Y) ~= 2 then
            hacked = 4
        end 
        while hacked < 4 do
            if not HackingVault then
                game:GetService("Workspace").Casino.HackableVaults.VaultDoorMain.InnerModel.Puzzle.RequestHack:FireServer()
                HackingVault = true
                hacked += 1
            end
            if HackingVault then

                if VaultLight.BrickColor == BrickColor.new("Lime green") and Rotate then
                    game:GetService("Workspace").Casino.HackableVaults.VaultDoorMain.InnerModel.Puzzle.UpdateDirection:FireServer()
                    hacked += 1
                    Rotate = false
                end
                if VaultLight.BrickColor ~= BrickColor.new("Lime green") then
                    Rotate = true
                end
                if reset then return end
                wait(0.01)
            end
            if math.floor(game.Workspace.Casino.HackableVaults.VaultDoorMain.InnerModel.Model.Body.Rotation.Y) ~= 2 then
                break
            end 
        end
        
        wait(3)

        UpdateLog("collecting cash")

        pathMove(Vector3.new(250, -74, -4528))
        if reset then return end

        for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
            v.CasinoLootCollect:FireServer()
        end

        pathMove(Vector3.new(247, -76, -4542))
        if reset then return end

        for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
            v.CasinoLootCollect:FireServer()
        end

        pathMove(Vector3.new(237, -75, -4599))
        if reset then return end

        for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
            v.CasinoLootCollect:FireServer()
        end

        pathMove(Vector3.new(264, -77, -4614))
        if reset then return end

        for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
            v.CasinoLootCollect:FireServer()
        end

        pathMove(Vector3.new(262, -76, -4595))
        if reset then return end

        for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
            v.CasinoLootCollect:FireServer()
        end

        pathMove(Vector3.new(271, -77, -4595))
        if reset then return end

        for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
            v.CasinoLootCollect:FireServer()
        end

        pathMove(Vector3.new(255, -77, -4514))
        if reset then return end

        for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
            v.CasinoLootCollect:FireServer()
        end

        pathMove(Vector3.new(242, -76, -4459))
        if reset then return end

        for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
            v.CasinoLootCollect:FireServer()
        end

        pathMove(Vector3.new(258, -77, -4436))
        if reset then return end

        for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
            v.CasinoLootCollect:FireServer()
        end

        pathMove(Vector3.new(269, -77, -4439))
        if reset then return end

        for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
            v.CasinoLootCollect:FireServer()
        end

        pathMove(Vector3.new(256, -77, -4488))
        if reset then return end

        pathMove(Vector3.new(301, -76, -4482))
        if reset then return end

        for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
            v.CasinoLootCollect:FireServer()
        end

        UpdateLog("going to elevator")

        pathMove(Vector3.new(250, -74, -4528))
        if reset then return end
        pathMove(Vector3.new(140, -77, -4527))
        if reset then return end
        pathMove(Vector3.new(85, -77, -4536))
        if reset then return end
        pathMove(Vector3.new(32, -77, -4581))
        if reset then return end
        pathMove(Vector3.new(9, -77, -4658))
        if reset then return end
        pathMove(Vector3.new(48, -77, -4667))
        if reset then return end
        pathMove(Vector3.new(26, -77, -4751))
        if reset then return end

        UpdateLog("breaking glass")

        local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
        for i,v in pairs (UI.CircleAction.Specs) do
            if v.Name == "Break" then
                v.Duration = 0
                v.Time = true
                v:Callback(v, true)
            end
        end

        wait(1)

        UpdateLog("going to elevator")

        pathMove(Vector3.new(13, -76, -4748))
        if reset then return end
        pathMove(Vector3.new(-15, -77, -4739))
        if reset then return end

        UpdateLog("waiting for elevator")

        repeat 
            fireclickdetector(game.Workspace.Casino.Elevator.Car.InnerModel.Calls:FindFirstChild("1").ClickDetector)
            if reset then return end
            wait() 
        until game.Workspace.Casino.Elevator.Floors:GetChildren()[1].DoorLeft.InnerModel.Door.Position.X > -8

        UpdateLog("entering elevator")

        pathMove(Vector3.new(-18, -77, -4754))
        if reset then return end

        UpdateLog("going to roof")

        repeat 
            fireclickdetector(game.Workspace.Casino.Elevator.Car.InnerModel.Calls:FindFirstChild("4").ClickDetector)
            if reset then return end
            wait() 
        until game.Workspace.Casino.Elevator.Floors:GetChildren()[4].DoorLeft.InnerModel.Door.Position.X > -8

        UpdateLog("exiting casino")

        pathMove(Vector3.new(-13, 156, -4741))
        if reset then return end
        pathMove(Vector3.new(-62, 160, -4718))
        if reset then return end
    end

    if Bot.Character:FindFirstChild("HumanoidRootPart") and (Vector3.new(2275, 500, -2024) - Bot.Character.HumanoidRootPart.Position).magnitude < (Vector3.new(-300, 500, 1597) - Bot.Character.HumanoidRootPart.Position).magnitude then
        UpdateLog("going to volcano")
        BotMove(Vector3.new(2275, 500, -2024), "volcano base", false)
    else
        UpdateLog("going to crim base")
        BotMove(Vector3.new(-300, 500, 1597), "city crim base", false)
    end
    wait(1)
    RobbingLocation = false
    robbedCasino = true
    local casinoMoney = string.gsub(string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 2, 6), " ", "")
    casinoMoney = string.gsub(casinoMoney, "/", "")
    casinoMoney = string.gsub(casinoMoney, "kg", "")
    LogMessage("robbed casino for $"..casinoMoney)
    casinoMoney = string.gsub(casinoMoney, ",", "")
    TotalMoneyEarned += tonumber(casinoMoney)
end

function RobMuseum()
    UpdateLog("going to museum")
    BotMove(Vector3.new(1048, 500, 1242), "museum", not config.safe)
    wait(1)
    exitCar.OnJump()
    wait(0.5)

    if not GetMuseumStatus() then
        RobbingLocation = false
        return
    end

    if config.safe then
        UpdateLog("entering museum")
        pathMove(Vector3.new(1048, 150, 1242))
        if reset then return end
        pathMove(Vector3.new(1048, 150, 1286))
        if reset then return end
        pathMove(Vector3.new(1082, 141, 1312))
        if reset then return end
        pathMove(Vector3.new(1083, 129, 1312))
        if reset then return end
    end

    pathMove(Vector3.new(1133, 115, 1307))
    if reset then return end

    UpdateLog("grabbing stuff")

    local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
    for i,v in pairs (UI.CircleAction.Specs) do
        if v.Name == "Grab Bone" then
            if Bot.PlayerGui.RobberyMoneyGui.Enabled and (string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 3) == string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 7, 9) or string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 4) == string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 8, 11)) then
                break
            end
            v.Duration = 0
            v.Time = true
            v:Callback(v, true)
            if reset then return end
            wait(0.5)
        end
    end

    if reset then return end

    UpdateLog("exiting museum")

    if config.safe then
        pathMove(Vector3.new(1083, 129, 1312))
        if reset then return end
        pathMove(Vector3.new(1082, 141, 1312))
        if reset then return end
        pathMove(Vector3.new(1048, 150, 1286))
        if reset then return end
        pathMove(Vector3.new(1059, 150, 1247))
        if reset then return end
    end

    pathMove(Vector3.new(1050, 103, 1244))
    if reset then return end

    if Bot.PlayerGui.RobberyMoneyGui.Enabled then
        UpdateLog("going to volcano")
        wait(2)
        BotMove(Vector3.new(2275, 500, -2024), "volcano base", false)
    end
    wait(1)
    RobbingLocation = false
    robbedMuseum = true
    if string.len(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text) == 9 then
        LogMessage("robbed museum for "..string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 3))
        if tonumber(string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 1)) ~= nil then
            TotalMoneyEarned += tonumber(string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 1)) * 700
        end
    else
        LogMessage("robbed museum for "..string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 4))
        if tonumber(string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 2)) ~= nil then
            TotalMoneyEarned += tonumber(string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 2)) * 700
        end
    end
end

function RobDonut()
    BotMove(Vector3.new(77, 500, -1516), "donut store", false)
    wait(1)
    exitCar.OnJump()
    wait(0.5)
    pathMove(Vector3.new(96, 20, -1527))
    if reset then return end
    pathMove(Vector3.new(111, 20, -1578))
    if reset then return end
    pathMove(Vector3.new(78, 20, -1589))
    if reset then return end

    wait(0.5)

    game:GetService('VirtualInputManager'):SendKeyEvent(true, "E", false, game)
    wait(0.1)
    game:GetService('VirtualInputManager'):SendKeyEvent(false, "E", false, game)

    wait(11)

    local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
    for i,v in pairs (UI.CircleAction.Specs) do
        if v.Name == "Rob" then
            v:Callback(v, true)
        end
    end

    pathMove(Vector3.new(111, 20, -1578))
    if reset then return end
    pathMove(Vector3.new(96, 20, -1527))
    if reset then return end
    pathMove(Vector3.new(92, 20, -1516))

    wait(1)
    RobbingLocation = false
    LogMessage("robbed donut store for $750")
end

function RobGas()
    BotMove(Vector3.new(-1563, 500, 708), "gas station", false)
    wait(1)
    exitCar.OnJump()
    wait(0.5)
    pathMove(Vector3.new(-1596, 19, 709))
    if reset then return end
    pathMove(Vector3.new(-1599, 19, 687))
    if reset then return end

    wait(0.5)

    game:GetService('VirtualInputManager'):SendKeyEvent(true, "E", false, game)
    wait(0.1)
    game:GetService('VirtualInputManager'):SendKeyEvent(false, "E", false, game)

    wait(11)

    local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
    for i,v in pairs (UI.CircleAction.Specs) do
        if v.Name == "Rob" then
            v:Callback(v, true)
        end
    end

    pathMove(Vector3.new(-1596, 19, 709))
    if reset then return end
    pathMove(Vector3.new(-1567, 19, 705))
    if reset then return end

    wait(1)
    RobbingLocation = false
    LogMessage("robbed gas station for $750")
end

function RobTrain()

    UpdateLog("going to train")

    BotMove(Vector3.new(587, 500, -477), "Train", false)
    wait(1)
    exitCar.OnJump()
    wait(0.5)

    local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
    for i,v in pairs (UI.CircleAction.Specs) do
        if v.Name == "Breach Vault" or v.Name == "Open Door" then
            v.Duration = 0
            v.Timed = true
            v:Callback(v, true)
        end
    end

    if reset then return end

    local cart = nil
    for k, v in pairs(game.Workspace.Trains:GetChildren()) do
        if string.sub(v.Name, 1, 6) == "BoxCar" then
            cart = v
            break
        end 
    end

    UpdateLog("collecting money")

    robbedTrain = true
    while not Bot.PlayerGui.RobberyMoneyGui.Enabled or (Bot.PlayerGui.RobberyMoneyGui.Enabled and string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) ~= string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15)) do
        if cart == nil then 
            RobbingLocation = false
            return 
        end
        if not cart:FindFirstChild("Model") then
            RobbingLocation = false
            return 
        end
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(cart.Model.Rob.Gold.Position + Vector3.new(0, 4, 0))
        if reset then return end
        wait()
    end

    local rayOrigin = cart.Model.Rob.Gold.Position + Vector3.new(0, 10, 0)
    local rayDirection2 = Vector3.new(0, 300, 0)
    local ray = Ray.new(rayOrigin, rayDirection2)
    local rain = game:GetService("Workspace"):FindFirstChild("Rain")
    if rain ~= nil then
        local ignoreStuff = {rain.RainDroplets, rain.RainFall}
        if platform ~= nil then
            table.insert(ignoreStuff, #(ignoreStuff), platform)
        end
        for k, v in pairs(Bot:GetDescendants()) do
            table.insert(ignoreStuff, #(ignoreStuff), v)
        end
        hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
    else
        local ignoreStuff = {}
        if platform ~= nil then
            table.insert(ignoreStuff, #(ignoreStuff), platform)
        end
        for k, v in pairs(Bot:GetDescendants()) do
            table.insert(ignoreStuff, #(ignoreStuff), v)
        end
        hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
    end

    UpdateLog("waiting for train to not be under a roof")

    while hit ~= nil do
        if cart == nil then 
            RobbingLocation = false
            return 
        end
        if not cart:FindFirstChild("Model") then
            RobbingLocation = false
            return 
        end

        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(cart.Model.Rob.Gold.Position + Vector3.new(0, 4, 0))
        
        rayOrigin = cart.Model.Rob.Gold.Position + Vector3.new(0, 10, 0)
        ray = Ray.new(rayOrigin, rayDirection2)
        rain = game:GetService("Workspace"):FindFirstChild("Rain")
        if rain ~= nil then
            ignoreStuff = {rain.RainDroplets, rain.RainFall}
            if platform ~= nil then
                table.insert(ignoreStuff, #(ignoreStuff), platform)
            end
            for k, v in pairs(Bot:GetDescendants()) do
                table.insert(ignoreStuff, #(ignoreStuff), v)
            end
            hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
        else
            ignoreStuff = {}
            if platform ~= nil then
                table.insert(ignoreStuff, #(ignoreStuff), platform)
            end
            for k, v in pairs(Bot:GetDescendants()) do
                table.insert(ignoreStuff, #(ignoreStuff), v)
            end
            hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
        end
        if reset then return end
        wait(0.1)
    end

    UpdateLog("exiting train")

    for i = 1, 5, 1 do
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.Position.X, 500, Bot.Character.HumanoidRootPart.Position.Z)
        wait(0.1)
    end

    wait(0.5)

    robbedTrain = true
    RobbingLocation = false
    LogMessage("robbed cargo train for "..string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6))
    TotalMoneyEarned += tonumber(string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 2, 2)..string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 4, 6))
end

function RobTomb()

    if not GetTombStatus() then
        RobbingLocation = false
        return
    end

    UpdateLog("going to tomb")
    
    BotMove(Vector3.new(587, 500, -477), "tomb", not config.safe)

    wait(1)
    exitCar.OnJump()
    wait(0.5)

    UpdateLog("entering tomb")

    if config.safe then
        pathMove(Vector3.new(541, 30, -501))
        if reset then return end
    end

    if not GetTombStatus() then
        pathMove(Vector3.new(587, 500, -477))
        RobbingLocation = false
        return
    end

    pathMove(Vector3.new(546, 25, -546))
    if reset then return end
    pathMove(Vector3.new(546, -59, -546))

    UpdateLog("doing room 1")

    if reset then return end
    pathMove(Vector3.new(521, -59, -346))
    if reset then return end
    pathMove(Vector3.new(570, -71, -254))
    if reset then return end
    pathMove(Vector3.new(620, -72, -229))
    if reset then return end
    pathMove(Vector3.new(641, -72, -226))
    if reset then return end

    UpdateLog("doing room 2")

    for i = 1, 26, 1 do
        for l = 1, 3, 1 do
            game.Players.localPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.RobberyTomb.DartRoom.Pillars[tostring(i)].InnerModel.Platform.Position + Vector3.new(0, 5, 0))
            wait(0.01)
        end
        wait(0.01)
    end

    if not GetTombStatus() then
        pathMove(Vector3.new(587, 500, -477))
        if reset then return end
        RobbingLocation = false
        return
    end

    UpdateLog("going across bridge")
    
    pathMove(Vector3.new(799, -90, -207))
    if reset then return end
    pathMove(Vector3.new(833, -84, -203))
    if reset then return end
    pathMove(Vector3.new(879, -93, -197))
    if reset then return end
    pathMove(Vector3.new(935, -84, -192))
    if reset then return end
    
    UpdateLog("going to jewels")

    pathMove(Vector3.new(941, -85, -191))
    if reset then return end

    repeat wait() until game.Workspace.RobberyTomb.Gates.Gate1.InnerModel.Gate.Position.Y > -75

    pathMove(Vector3.new(967, -85, -187))
    if reset then return end

    repeat wait() until game.Workspace.RobberyTomb.Gates.Gate2.InnerModel.Gate.Position.Y > -75

    pathMove(Vector3.new(986, -85, -185))
    if reset then return end

    wait(0.1)

    if not GetTombStatus() then
        pathMove(Vector3.new(587, 500, -477))
        RobbingLocation = false
        return
    end

    for k, v in pairs(game:GetService("Workspace").RobberyTomb.Tomb.Gems:GetChildren()) do
        v.TombGemCollect:FireServer()
    end

    UpdateLog("waiting for door to open")

    repeat wait() until game.Workspace.RobberyTomb.Tomb.ExitDoor.InnerModel.Base.Position.Z < -184
    
    UpdateLog("going to cart")

    pathMove(Vector3.new(1010, -84, -185))
    if reset then return end

    UpdateLog("entering cart")

    while (Bot.Character.HumanoidRootPart.Position - Vector3.new(1010, -84, -185)).magnitude < 5 do
        local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
        for i,v in pairs (UI.CircleAction.Specs) do
            if v.Name == "Sit" then
                v.Duration = 0
                v.Timed = true
                v:Callback(v, true)
            end
        end
        wait(0.1)
    end

    UpdateLog("waiting for cart section to end")

    repeat 
        if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
        wait() 
        if reset then return end
        if not GetTombStatus() then
            pathMove(Vector3.new(587, 500, -477))
            RobbingLocation = false
            return
        end
    until Bot.Character:FindFirstChild("HumanoidRootPart") and (Vector3.new(299, 19, 191) - Bot.Character.HumanoidRootPart.Position).magnitude < 5 or (Vector3.new(1206, 14, -1244) - Bot.Character.HumanoidRootPart.Position).magnitude < 5

    UpdateLog("exiting tomb")

    wait(0.5)
    for k, v in pairs(game.Workspace:GetChildren()) do
        if v.Name == "Cart" then
            v:Destroy()
        end
    end

    wait(0.5)

    if Bot.Character:FindFirstChild("HumanoidRootPart") and (Vector3.new(1206, 14, -1244) - Bot.Character.HumanoidRootPart.Position).magnitude < 5 then
        pathMove(Vector3.new(1200, 20, -1222))
        if reset then return end
        pathMove(Vector3.new(1293, 20, -1135))
        if reset then return end
    end

    if Bot.Character:FindFirstChild("HumanoidRootPart") and (Vector3.new(299, 19, 191) - Bot.Character.HumanoidRootPart.Position).magnitude < 5 then
        pathMove(Vector3.new(305, 20, 206))
        if reset then return end
        pathMove(Vector3.new(232, 20, 211))
        if reset then return end
        pathMove(Vector3.new(193, 20, 247))
        if reset then return end
    end

    RobbingLocation = false
    robbedTomb = true
    LogMessage("robbed tomb for $7,000")
    TotalMoneyEarned += 7000
end

function RobDrop(Drop, pos)

    UpdateLog("going to drop")

    BotMove(pos, "nearest air drop", false)
    if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
    exitCar.OnJump()
    wait(1)
    if not Drop:FindFirstChild("Root") then 
        RobbingLocation = false
        return 
    end
    Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Drop.Root.Position)
    wait(0.5)
    game:GetService('VirtualInputManager'):SendKeyEvent(true, "E", false, game)

    UpdateLog("opening airdrop")

    while Drop:FindFirstChild("Root") do
        if not Bot.Character:FindFirstChild("HumanoidRootPart") then return end
        if not Drop:FindFirstChild("Root") then 
            RobbingLocation = false
            return 
        end
        game:GetService('VirtualInputManager'):SendKeyEvent(true, "E", false, game)
        for k, v in pairs(Drop:GetDescendants()) do
            if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") then
                v:Destroy()
            end
        end
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Drop.Root.Position + Vector3.new(0, 5, 0))
        if reset then return end
        wait(0.01)
    end

    UpdateLog("collecting cash")

    game:GetService('VirtualInputManager'):SendKeyEvent(false, "E", false, game)
    
    wait(1)
    local MoneyCollected = 4000
    wait(0.1)
    local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
    for i,v in pairs (UI.CircleAction.Specs) do
        if v.Part then
            if string.sub(v.Name, 1, 9) == "Collect $" then
                moneyText = string.sub(v.Name, 10, 14)
                moneyText = string.gsub(moneyText, ',', '')
                moneyText = string.gsub(moneyText, 'f', '')
                MoneyCollected += moneyText
                v.Duration = 0
                v.Timed = true
                v:Callback(v, true)
            end
        end
    end

    wait(5)
    if reset then return end
    MoneyCollected = tostring(MoneyCollected)
    RobbingLocation = false
    LogMessage("robbed air drop for $"..string.sub(MoneyCollected, 1, 1)..","..string.sub(MoneyCollected, 2, 4))
    TotalMoneyEarned += tonumber(MoneyCollected)
end

function RobPlane()
    exitCar.OnJump()
    wait(0.5)
    UpdateLog("collecting crate")
    local oldPos = Bot.Character.HumanoidRootPart.Position
    while not Bot.PlayerGui.RobberyMoneyGui.Enabled do
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.Plane.Crates:GetChildren()[1]:GetChildren()[1].Position)
        local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
        for i,v in pairs (UI.CircleAction.Specs) do
            if v.Name == "Inspect Crate" then
                v.Duration = 0
                v.Timed = true
                v:Callback(v, true)
                break
            end
        end
        if reset then return end
        wait(0.01)
    end
    Bot.Character.HumanoidRootPart.CFrame = CFrame.new(oldPos)

    wait(1)

    if Bot.PlayerGui.RobberyMoneyGui.Enabled then
        if reset then return end
        UpdateLog("going to cargo port")
        BotMove(Vector3.new(-342, 500, 2055), "cargo port", false)

        wait(2)
        robbedPlane = true
        LogMessage("robbed cargo plane for $7,000")
        TotalMoneyEarned += 7000
    end
    
    robbedPlane = true
    RobbingLocation = false
end


local platformed = false
coroutine.wrap(function()
    while true do
        if toggled then
            if not RobbingLocation then
                if Bot.Character then
                    if Bot.Character:FindFirstChild("HumanoidRootPart") then
                        if not platformed then
                            platformed = true
                            local Car
                            for k, v in pairs(game:GetService("Workspace").Vehicles:GetChildren()) do
                                if pcall(function() return v.Seat.PlayerName end) then
                                    if v.Seat.PlayerName.Value == game:GetService("Players").LocalPlayer.Name then
                                        Car = v
                                    end
                                end
                            end
                            if platform ~= nil then
                                platform:Destroy()
                            end
                            platform = Instance.new("Part")
                            platform.Parent = game:GetService("Workspace")
                            platform.Anchored = true
                            platform.Size = Vector3.new(30, 0.5, 30)
                            if Car == nil then
                                Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, 5000, Bot.Character.HumanoidRootPart.CFrame.Z)
                                Bot.Character.HumanoidRootPart.Velocity = Vector3.new(0,1.005,0)
                                platform.Position = Bot.Character.HumanoidRootPart.Position + Vector3.new(0, -5, 0)
                            else
                                Car.Engine.CFrame = CFrame.new(Car.Engine.CFrame.X, 5000, Car.Engine.CFrame.Z)
                                Car.Engine.Velocity = Vector3.new(0,1.005,0)
                                platform.Position = Car.Engine.Position + Vector3.new(0, -5, 0)
                            end
                        else
                            robLocation()
                            if Bot.Character.HumanoidRootPart.Position.Y < 3000 then
                                platformed = false
                            end
                        end
                    end
                else
                    if platform ~= nil then
                        platform:Destroy()
                    end
                    platformed = false
                end
            else
                if platform ~= nil then
                    platform:Destroy()
                end
                platformed = false
            end
        else
            UpdateLog("disabled")
            if platform ~= nil then
                platform:Destroy()
            end
            platformed = false
        end
        wait(1)
    end
end)()

for k, v in pairs(game.Workspace:GetDescendants()) do
    if v.Name == "TouchInterest" then
        if v.Parent then
            if v.Parent.Name ~= "LaserTouch" and v.Parent.Name ~= "TriggerDoor" and v.Parent.Name ~= "TouchToEnter" and v.Parent.Name ~= "HatchTouch" and v.Parent.Name ~= "TriggerFoundBossRoom" and v.Parent.Parent.Name ~= "ExitDoor" then
                v.Parent:GetAttributeChangedSignal("CanTouch"):Connect(function()
                    v.Parent.CanTouch = false
                end)
                v.Parent.CanTouch = false
            end
        end
    end
    if v.Name == "MansionBossNPCDamage" then
        v:Destroy()
    end
    if v.Name == "Door" or v.Name == "SwingDoor" or v.Name == "FrontDoorLeft" or v.Name == "FrontDoorRight" or v.Name == "SlideDoor" then
        for k, l in pairs(v:GetDescendants()) do
            if l:IsA("Part") or l:IsA("MeshPart") then
                l:GetAttributeChangedSignal("CanCollide"):Connect(function()
                    l.CanCollide = false
                end)
                l.CanCollide = false
            end
        end
    end
    if v.Name == "DartFire" or v.Name == "DartDamage" then
        v:Destroy()
    end
end

game.Workspace.DescendantAdded:Connect(function(part)
    wait(0.1)
    if part.Name == "TouchInterest" then
        if part.Parent then
            if part.Parent.Name ~= "LaserTouch" and part.Parent.Name ~= "TriggerDoor" and part.Parent.Name ~= "TouchToEnter" and part.Parent.Name ~= "HatchTouch" and part.Parent.Name ~= "TriggerFoundBossRoom" and part.Parent.Parent.Name ~= "ExitDoor" then
                part.Parent:GetAttributeChangedSignal("CanTouch"):Connect(function()
                    part.Parent.CanTouch = false
                end)
                part.Parent.CanTouch = false
            end
        end
    end
    if part.Name == "MansionBossNPCDamage" then
        part:Destroy()
    end
    if part.Name == "Door" or part.Name == "SwingDoor" or part.Name == "FrontDoorLeft" or part.Name == "FrontDoorRight" or part.Name == "SlideDoor" then
        for k, l in pairs(part:GetDescendants()) do
            if l:IsA("Part") or l:IsA("MeshPart") then
                l:GetAttributeChangedSignal("CanCollide"):Connect(function()
                    l.CanCollide = false
                end)
                l.CanCollide = false
            end
        end
    end
    if part.Name == "DartFire" or part.Name == "DartDamage" then
        part:Destroy()
    end
end)

for i = 1, 10, 1 do
    Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-220, 500, -4575))
    wait(0.01)
end

for i = 1, 10, 1 do
    Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-1, 500, 865))
    wait(0.01)
end

local shooting = false
coroutine.wrap(function()
    while true do
        local shoot = false
        if config.killAura and toggled then
            for k, v in pairs(game.Players:GetChildren()) do
                if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                    if (v.Character.HumanoidRootPart.Position - Bot.Character.HumanoidRootPart.Position).magnitude < config.killAuraRange and v.Team ~= Bot.Team then
                        shoot = true
                    end
                end
            end

            if shoot then
                if not shooting then
                    network:FireServer(hash, "AK47")
                
                    wait(1)

                    pcall(function()
                        toolname = "AK47"
                        if Bot.Backpack:FindFirstChild(toolname) and Bot.Character:FindFirstChild(toolname) == nil then
                            local tool = Bot.Backpack:FindFirstChild(toolname)
                            Bot.Character.Humanoid:EquipTool(tool)
                        end
                    end)

                    local args = {
                        [1] = true
                    }

                    game:GetService("Players").LocalPlayer.Folder.AK47.InventoryEquipRemote:FireServer(unpack(args))

                    wait(0.5)
                end

                shooting = true
                game:GetService('VirtualInputManager'):SendMouseButtonEvent(0,0,0,true,game,0)
            else
                if shooting then
                    game:GetService('VirtualInputManager'):SendMouseButtonEvent(0,0,0,false,game,0)
                    shooting = false
                end
            end
        end
        wait(1)
    end
end)()

if game.Players.localPlayer.PlayerScripts.WorldUnload:FindFirstChild("WorldUnload") then
    game.Players.localPlayer.PlayerScripts.WorldUnload.WorldUnload:Destroy()
end
if game.Players.localPlayer.PlayerScripts.WorldUnload:FindFirstChild("HumanoidUnload") then
    game.Players.localPlayer.PlayerScripts.HumanoidUnload.HumanoidUnload:Destroy()
end


coroutine.wrap(function()
    while true do
        if toggled then
            if (not Bot.Character and not (Bot.Team.Name == "Prisoner" and Bot.Character.HumanoidRootPart.Position.Y < 10)) or (Bot.Character and Bot.Character.Humanoid and Bot.Character.Humanoid.Health == 0 and Bot.Team.Name ~= "Prisoner") then
                UpdateLog("respawning")
                RobbingLocation = true
                reset = true
                wait(3)
                reset = false
                respawn(false)
            end
            if Bot.Character:FindFirstChild("HumanoidRootPart") and Bot.Team.Name == "Prisoner" and Bot.Character.HumanoidRootPart.Position.Y < 10 then
                if Bot.Character:FindFirstChild("HumanoidRootPart") and (Vector3.new(Bot.Character.HumanoidRootPart.Position.X, 500, Bot.Character.HumanoidRootPart.Position.Z) - Vector3.new(-2940, 500, 2258)).magnitude > 50 then
                    UpdateLog("escaping prison")
                    RobbingLocation = true
                    reset = true
                    wait(3)
                    reset = false
                    respawn(true)
                end
            end
        end
        wait()
    end
end)()

--AntiAFK
local VirtualUser = game:service"VirtualUser"

game:service"Players".LocalPlayer.Idled:connect(function()
	VirtualUser:CaptureController()VirtualUser:ClickButton2(Vector2.new())
end)

local plrUtils = game:GetService("ReplicatedStorage").Game.PlayerUtils
require(plrUtils).hasKey = function() 
    return true
end

local seconds = 0
local minutes = 0
local hours = 0

local secondsStr = "00"
local minutesStr = "00"
local hoursStr = "00"
local TotalMoneyEarnedStr = "00,000,000"

coroutine.wrap(function()
    while true do
        seconds += 1

        if seconds == 60 then
            minutes += 1
            seconds = 0
        end
        if minutes == 60 then
            hours += 1
            minutes = 0
        end

        if seconds < 10 then
            secondsStr = "0"..tostring(seconds)
        else
            secondsStr = tostring(seconds)
        end

        if minutes < 10 then
            minutesStr = "0"..tostring(minutes)
        else
            minutesStr = tostring(minutes)
        end

        if hours < 10 then
            hoursStr = "0"..tostring(hours)
        else
            hoursStr = tostring(hours)
        end
        TotalMoneyEarnedStr = TotalMoneyEarned
        if string.len(TotalMoneyEarnedStr) > 8 then
            TotalMoneyEarnedStr = ">99,999,999"
        end
        if string.len(TotalMoneyEarnedStr) == 8 then
            TotalMoneyEarnedStr = string.sub(TotalMoneyEarnedStr, 1, 2)..","..string.sub(TotalMoneyEarnedStr, 3, 5)..","..string.sub(TotalMoneyEarnedStr, 6, 8)
        end
        if string.len(TotalMoneyEarnedStr) == 7 then
            TotalMoneyEarnedStr = "0"..string.sub(TotalMoneyEarnedStr, 1, 1)..","..string.sub(TotalMoneyEarnedStr, 2, 4)..","..string.sub(TotalMoneyEarnedStr, 5, 7)
        end
        if string.len(TotalMoneyEarnedStr) == 6 then
            TotalMoneyEarnedStr = "00,"..string.sub(TotalMoneyEarnedStr, 1, 3)..","..string.sub(TotalMoneyEarnedStr, 4, 6)
        end
        if string.len(TotalMoneyEarnedStr) == 5 then
            TotalMoneyEarnedStr = "00,0"..string.sub(TotalMoneyEarnedStr, 1, 2)..","..string.sub(TotalMoneyEarnedStr, 3, 5)
        end
        if string.len(TotalMoneyEarnedStr) == 4 then
            TotalMoneyEarnedStr = "00,00"..string.sub(TotalMoneyEarnedStr, 1, 1)..","..string.sub(TotalMoneyEarnedStr, 2, 4)
        end
        if string.len(TotalMoneyEarnedStr) == 3 then
            TotalMoneyEarnedStr = "00,000,"..string.sub(TotalMoneyEarnedStr, 1, 3)
        end
        if string.len(TotalMoneyEarnedStr) == 2 then
            TotalMoneyEarnedStr = "00,000,0"..string.sub(TotalMoneyEarnedStr, 1, 2)
        end
        if string.len(TotalMoneyEarnedStr) == 1 then
            TotalMoneyEarnedStr = "00,000,00"..string.sub(TotalMoneyEarnedStr, 1, 1)
        end
        if string.len(TotalMoneyEarnedStr) == 0 then
            TotalMoneyEarnedStr = "00,000,000"
        end

        Time.Text = "Time Elapsed: "..hoursStr..":"..minutesStr..":"..secondsStr
        Money.Text = "Money Earned: $"..TotalMoneyEarnedStr
        wait(1)
    end
end)()

local old = old or require(game:GetService("ReplicatedStorage").Module.RayCast).RayIgnoreNonCollideWithIgnoreList

if true then
    require(game:GetService("ReplicatedStorage").Module.RayCast).RayIgnoreNonCollideWithIgnoreList = function(...)
        local nearestDistance, nearestEnemy = 999999, nil
        local nearestEnemyPlayer
        for i,v in pairs(game:GetService("Players"):GetPlayers()) do
            if v.Team ~= game:GetService("Players").LocalPlayer.Team and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                if v.Team.Name ~= "Prisoner" then
                    if v.Character.Humanoid.Health > 0 then
                        if (v.Character.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < nearestDistance then
                            nearestDistance, nearestEnemy = (v.Character.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).Magnitude, v
                            nearestEnemyPlayer = true
                        end
                    end
                end
            end
        end
        for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
            if v.Name == "Drop" then
                for k, j in pairs(v:GetDescendants()) do
                    if j:FindFirstChild("Humanoid") and j:FindFirstChild("HumanoidRootPart") then
                        if j.Humanoid.Health > 0 then
                            if (j.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < nearestDistance then
                                nearestDistance, nearestEnemy = (j.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).Magnitude, j
                                nearestEnemyPlayer = false
                            end
                        end
                    end
                end
            end
            if v.Name == "MansionRobbery" then
                for k, j in pairs(v:GetDescendants()) do
                    if j:FindFirstChild("Humanoid") and j:FindFirstChild("HumanoidRootPart") then
                        if j.Humanoid.Health > 0 then
                            if (j.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < nearestDistance then
                                nearestDistance, nearestEnemy = (j.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).Magnitude, j
                                nearestEnemyPlayer = false
                            end
                        end
                    end
                end
            end
        end
        local arg = {old(...)}
        if (tostring(getfenv(2).script) == "BulletEmitter" or tostring(getfenv(2).script) == "Taser") and nearestEnemy then
            if nearestEnemyPlayer then
                arg[1] = nearestEnemy.Character.HumanoidRootPart
                arg[2] = nearestEnemy.Character.HumanoidRootPart.Position
            else
                arg[1] = nearestEnemy.Head
                arg[2] = nearestEnemy.Head.Position
            end
        end
        return unpack(arg)
    end
else
    require(game:GetService("ReplicatedStorage").Module.RayCast).RayIgnoreNonCollideWithIgnoreList = old
end

require(game:GetService("ReplicatedStorage").Game.Paraglide).IsFlying = function()
	return tostring(getfenv(2).script) == "Falling"
end
